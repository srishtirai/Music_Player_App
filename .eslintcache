[{"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\index.js":"1","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\store\\configureStore.js":"2","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\App\\App.js":"3","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\reducers\\index.js":"4","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\reducers\\audioReducer.js":"5","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\reducers\\navigationReducer.js":"6","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\reducers\\deviceReducer.js":"7","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ThemeDecorator\\ThemeDecorator.js":"8","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Panels\\index.js":"9","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\views\\MainPanel\\MainPanel.js":"10","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\actions\\types.js":"11","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ThemeDecorator\\I18nFontDecorator.js":"12","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ThemeDecorator\\AccessibilityDecorator.js":"13","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Panels\\Header.js":"14","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Panels\\Panel.js":"15","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Panels\\Panels.js":"16","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\actions\\navigationActions.js":"17","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\actions\\audioActions.js":"18","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\actions\\deviceActions.js":"19","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Skinnable\\Skinnable.js":"20","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TabLayout\\TabLayout.js":"21","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ThemeDecorator\\fontGenerator.js":"22","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\index.js":"23","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\util.js":"24","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Button\\Button.js":"25","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\$L\\$L.js":"26","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Heading\\Heading.js":"27","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\WindowEventable\\WindowEventable.js":"28","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\index.js":"29","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\SharedStateDecorator\\SharedStateDecorator.js":"30","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TabLayout\\RefocusDecorator.js":"31","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TabLayout\\TabGroup.js":"32","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TabLayout\\Tab.js":"33","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\CancelDecorator.js":"34","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\FloatingLayerIdProvider.js":"35","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\NavigationButton.js":"36","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\Viewport.js":"37","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\useAutoFocus.js":"38","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\PopupDecorator.js":"39","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\Arrangers.js":"40","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ImageItem\\index.js":"41","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\VirtualList.js":"42","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\index.js":"43","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Button\\ButtonBase\\BaseButton.js":"44","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\captureKeys.js":"45","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\DivButton\\Button.js":"46","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\TransitionDecorator.js":"47","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\util\\util.js":"48","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Icon\\Icon.js":"49","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\Marquee.js":"50","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TooltipDecorator\\TooltipDecorator.js":"51","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ImageItem\\ImageItem.js":"52","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ImageItem\\ImageItemBase.js":"53","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\DebounceDecorator\\DebounceDecorator.js":"54","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Scroller\\Scroller.js":"55","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Sprite\\Sprite.js":"56","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ImageItem\\ImageItemDecorator.js":"57","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\useThemeVirtualList.js":"58","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\device.js":"59","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\audio.js":"60","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\video.js":"61","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Popup\\Popup.js":"62","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\Scrollbar.js":"63","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useScroll.js":"64","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Icon\\IconList.js":"65","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TooltipDecorator\\Tooltip.js":"66","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TooltipDecorator\\util.js":"67","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Scroller\\useThemeScroller.js":"68","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\usePreventScroll.js":"69","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\useSpotlight.js":"70","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\useEvent.js":"71","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\request.js":"72","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Image\\Image.js":"73","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\ScrollbarTrack.js":"74","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\util\\generateClassNames\\generateClassNames.js":"75","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useSpotlight.js":"76","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useOverscrollEffect.js":"77","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useEvent.js":"78","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useThemeScrollContentHandle.js":"79","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\MarqueeBase\\index.js":"80","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TooltipDecorator\\TooltipLabel.js":"81","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Scroller\\useEvent.js":"82","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Popup\\PopupBase\\Transition.js":"83","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\MarqueeBase\\MarqueeController.js":"84","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\MarqueeBase\\MarqueeBase.js":"85","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\MarqueeBase\\MarqueeDecorator.js":"86","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\resolution\\resolution.js":"87","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Resizable\\Resizable.js":"88","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioList\\AudioList.js":"89","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AppLog\\AppLog.js":"90","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\views\\AudioPanel\\AudioPanel.js":"91","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Spinner\\Spinner.js":"92","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ActionGuide\\ActionGuide.js":"93","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\Slider.js":"94","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\SliderBehaviorDecorator.js":"95","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\utils.js":"96","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\SliderBase\\SliderBase.js":"97","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ProgressBar\\ProgressBarBase\\ProgressBarBase.js":"98","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ProgressBar\\ProgressBarComponent.js":"99","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\validators\\validators.js":"100","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\SliderBase\\Knob.js":"101","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\SliderBase\\PositionDecorator.js":"102","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\util\\calcProportion.js":"103","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ProgressBar\\ProgressBarTooltip\\ProgressBarTooltip.js":"104","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayer.js":"105","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\Reducers\\AudioPlayerReducer.js":"106","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\util.js":"107","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\AudioPlayerBase.js":"108","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\Overlay.js":"109","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\Media.js":"110","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaTitle.js":"111","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSlider.js":"112","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\Audio.js":"113","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaControls.js":"114","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\Times.js":"115","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\AlbumInfo.js":"116","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSliderDecorator.js":"117","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaKnob.js":"118","F:\\MusicPlayer\\src\\index.js":"119","F:\\MusicPlayer\\src\\store\\configureStore.js":"120","F:\\MusicPlayer\\src\\App\\App.js":"121","F:\\MusicPlayer\\src\\reducers\\index.js":"122","F:\\MusicPlayer\\src\\views\\AudioPanel\\AudioPanel.js":"123","F:\\MusicPlayer\\src\\views\\MainPanel\\MainPanel.js":"124","F:\\MusicPlayer\\src\\reducers\\navigationReducer.js":"125","F:\\MusicPlayer\\src\\reducers\\audioReducer.js":"126","F:\\MusicPlayer\\goldstone\\Panels\\index.js":"127","F:\\MusicPlayer\\src\\reducers\\deviceReducer.js":"128","F:\\MusicPlayer\\goldstone\\ThemeDecorator\\ThemeDecorator.js":"129","F:\\MusicPlayer\\src\\actions\\audioActions.js":"130","F:\\MusicPlayer\\src\\actions\\navigationActions.js":"131","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayer.js":"132","F:\\MusicPlayer\\src\\actions\\deviceActions.js":"133","F:\\MusicPlayer\\src\\actions\\types.js":"134","F:\\MusicPlayer\\goldstone\\Panels\\Panels.js":"135","F:\\MusicPlayer\\goldstone\\Panels\\Header.js":"136","F:\\MusicPlayer\\goldstone\\Panels\\Panel.js":"137","F:\\MusicPlayer\\goldstone\\ThemeDecorator\\AccessibilityDecorator.js":"138","F:\\MusicPlayer\\goldstone\\ThemeDecorator\\I18nFontDecorator.js":"139","F:\\MusicPlayer\\src\\components\\AudioList\\AudioList.js":"140","F:\\MusicPlayer\\goldstone\\TabLayout\\TabLayout.js":"141","F:\\MusicPlayer\\goldstone\\Skinnable\\Skinnable.js":"142","F:\\MusicPlayer\\goldstone\\ThemeDecorator\\fontGenerator.js":"143","F:\\MusicPlayer\\src\\components\\AudioPlayer\\Reducers\\AudioPlayerReducer.js":"144","F:\\MusicPlayer\\src\\services\\index.js":"145","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\util.js":"146","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\AudioPlayerBase.js":"147","F:\\MusicPlayer\\goldstone\\internal\\Panels\\index.js":"148","F:\\MusicPlayer\\goldstone\\internal\\Panels\\util.js":"149","F:\\MusicPlayer\\goldstone\\VirtualList\\VirtualList.js":"150","F:\\MusicPlayer\\goldstone\\TabLayout\\RefocusDecorator.js":"151","F:\\MusicPlayer\\goldstone\\TabLayout\\TabGroup.js":"152","F:\\MusicPlayer\\goldstone\\TabLayout\\Tab.js":"153","F:\\MusicPlayer\\goldstone\\Button\\Button.js":"154","F:\\MusicPlayer\\goldstone\\internal\\$L\\$L.js":"155","F:\\MusicPlayer\\goldstone\\internal\\WindowEventable\\WindowEventable.js":"156","F:\\MusicPlayer\\goldstone\\Heading\\Heading.js":"157","F:\\MusicPlayer\\goldstone\\internal\\SharedStateDecorator\\SharedStateDecorator.js":"158","F:\\MusicPlayer\\goldstone\\ImageItem\\index.js":"159","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\AlbumInfo.js":"160","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\Times.js":"161","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\Audio.js":"162","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSlider.js":"163","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaTitle.js":"164","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaControls.js":"165","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\Media.js":"166","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\Overlay.js":"167","F:\\MusicPlayer\\goldstone\\internal\\Panels\\Arrangers.js":"168","F:\\MusicPlayer\\goldstone\\internal\\Panels\\useAutoFocus.js":"169","F:\\MusicPlayer\\goldstone\\internal\\Panels\\Viewport.js":"170","F:\\MusicPlayer\\goldstone\\VirtualList\\useThemeVirtualList.js":"171","F:\\MusicPlayer\\goldstone\\internal\\Panels\\PopupDecorator.js":"172","F:\\MusicPlayer\\src\\services\\Luna\\index.js":"173","F:\\MusicPlayer\\goldstone\\ImageItem\\ImageItem.js":"174","F:\\MusicPlayer\\goldstone\\Spinner\\Spinner.js":"175","F:\\MusicPlayer\\goldstone\\ImageItem\\ImageItemDecorator.js":"176","F:\\MusicPlayer\\goldstone\\ImageItem\\ImageItemBase.js":"177","F:\\MusicPlayer\\goldstone\\internal\\Panels\\NavigationButton.js":"178","F:\\MusicPlayer\\goldstone\\useScroll\\Scrollbar.js":"179","F:\\MusicPlayer\\goldstone\\useScroll\\useScroll.js":"180","F:\\MusicPlayer\\goldstone\\internal\\Panels\\FloatingLayerIdProvider.js":"181","F:\\MusicPlayer\\goldstone\\internal\\Panels\\CancelDecorator.js":"182","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSliderDecorator.js":"183","F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaKnob.js":"184","F:\\MusicPlayer\\goldstone\\internal\\Panels\\captureKeys.js":"185","F:\\MusicPlayer\\goldstone\\VirtualList\\useSpotlight.js":"186","F:\\MusicPlayer\\goldstone\\VirtualList\\usePreventScroll.js":"187","F:\\MusicPlayer\\goldstone\\VirtualList\\useEvent.js":"188","F:\\MusicPlayer\\goldstone\\internal\\Panels\\TransitionDecorator.js":"189","F:\\MusicPlayer\\goldstone\\Sprite\\Sprite.js":"190","F:\\MusicPlayer\\goldstone\\Marquee\\Marquee.js":"191","F:\\MusicPlayer\\src\\services\\Luna\\device.js":"192","F:\\MusicPlayer\\src\\services\\Luna\\audio.js":"193","F:\\MusicPlayer\\goldstone\\Button\\ButtonBase\\BaseButton.js":"194","F:\\MusicPlayer\\src\\services\\Luna\\video.js":"195","F:\\MusicPlayer\\goldstone\\DivButton\\Button.js":"196","F:\\MusicPlayer\\goldstone\\TooltipDecorator\\TooltipDecorator.js":"197","F:\\MusicPlayer\\goldstone\\Icon\\Icon.js":"198","F:\\MusicPlayer\\goldstone\\internal\\util\\util.js":"199","F:\\MusicPlayer\\goldstone\\Scroller\\Scroller.js":"200","F:\\MusicPlayer\\goldstone\\internal\\DebounceDecorator\\DebounceDecorator.js":"201","F:\\MusicPlayer\\goldstone\\useScroll\\useSpotlight.js":"202","F:\\MusicPlayer\\goldstone\\useScroll\\useOverscrollEffect.js":"203","F:\\MusicPlayer\\goldstone\\useScroll\\useEvent.js":"204","F:\\MusicPlayer\\goldstone\\useScroll\\useThemeScrollContentHandle.js":"205","F:\\MusicPlayer\\goldstone\\useScroll\\ScrollbarTrack.js":"206","F:\\MusicPlayer\\goldstone\\Slider\\Slider.js":"207","F:\\MusicPlayer\\goldstone\\Popup\\Popup.js":"208","F:\\MusicPlayer\\src\\services\\Luna\\request.js":"209","F:\\MusicPlayer\\goldstone\\Image\\Image.js":"210","F:\\MusicPlayer\\goldstone\\Icon\\IconList.js":"211","F:\\MusicPlayer\\goldstone\\TooltipDecorator\\util.js":"212","F:\\MusicPlayer\\goldstone\\TooltipDecorator\\Tooltip.js":"213","F:\\MusicPlayer\\goldstone\\Scroller\\useThemeScroller.js":"214","F:\\MusicPlayer\\goldstone\\Slider\\SliderBehaviorDecorator.js":"215","F:\\MusicPlayer\\goldstone\\Slider\\utils.js":"216","F:\\MusicPlayer\\goldstone\\Slider\\SliderBase\\SliderBase.js":"217","F:\\MusicPlayer\\goldstone\\Marquee\\MarqueeBase\\index.js":"218","F:\\MusicPlayer\\goldstone\\util\\generateClassNames\\generateClassNames.js":"219","F:\\MusicPlayer\\goldstone\\ProgressBar\\ProgressBarBase\\ProgressBarBase.js":"220","F:\\MusicPlayer\\goldstone\\ProgressBar\\ProgressBarComponent.js":"221","F:\\MusicPlayer\\goldstone\\TooltipDecorator\\TooltipLabel.js":"222","F:\\MusicPlayer\\goldstone\\Scroller\\useEvent.js":"223","F:\\MusicPlayer\\goldstone\\Popup\\PopupBase\\Transition.js":"224","F:\\MusicPlayer\\goldstone\\internal\\validators\\validators.js":"225","F:\\MusicPlayer\\goldstone\\Slider\\SliderBase\\Knob.js":"226","F:\\MusicPlayer\\goldstone\\Slider\\SliderBase\\PositionDecorator.js":"227","F:\\MusicPlayer\\goldstone\\util\\calcProportion.js":"228","F:\\MusicPlayer\\goldstone\\Marquee\\MarqueeBase\\MarqueeController.js":"229","F:\\MusicPlayer\\goldstone\\Marquee\\MarqueeBase\\MarqueeBase.js":"230","F:\\MusicPlayer\\goldstone\\Marquee\\MarqueeBase\\MarqueeDecorator.js":"231","F:\\MusicPlayer\\goldstone\\resolution\\resolution.js":"232","F:\\MusicPlayer\\goldstone\\ProgressBar\\ProgressBarTooltip\\ProgressBarTooltip.js":"233","F:\\MusicPlayer\\goldstone\\Resizable\\Resizable.js":"234","F:\\BT carkit\\Music_Player_App\\src\\index.js":"235","F:\\BT carkit\\Music_Player_App\\src\\store\\configureStore.js":"236","F:\\BT carkit\\Music_Player_App\\src\\App\\App.js":"237","F:\\BT carkit\\Music_Player_App\\src\\reducers\\index.js":"238","F:\\BT carkit\\Music_Player_App\\src\\views\\AudioPanel\\AudioPanel.js":"239","F:\\BT carkit\\Music_Player_App\\src\\reducers\\navigationReducer.js":"240","F:\\BT carkit\\Music_Player_App\\src\\reducers\\audioReducer.js":"241","F:\\BT carkit\\Music_Player_App\\src\\reducers\\deviceReducer.js":"242","F:\\BT carkit\\Music_Player_App\\src\\views\\MainPanel\\MainPanel.js":"243","F:\\BT carkit\\Music_Player_App\\goldstone\\Panels\\index.js":"244","F:\\BT carkit\\Music_Player_App\\goldstone\\ThemeDecorator\\ThemeDecorator.js":"245","F:\\BT carkit\\Music_Player_App\\src\\actions\\navigationActions.js":"246","F:\\BT carkit\\Music_Player_App\\src\\actions\\audioActions.js":"247","F:\\BT carkit\\Music_Player_App\\src\\actions\\types.js":"248","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayer.js":"249","F:\\BT carkit\\Music_Player_App\\src\\actions\\deviceActions.js":"250","F:\\BT carkit\\Music_Player_App\\goldstone\\Panels\\Header.js":"251","F:\\BT carkit\\Music_Player_App\\goldstone\\Panels\\Panel.js":"252","F:\\BT carkit\\Music_Player_App\\goldstone\\Panels\\Panels.js":"253","F:\\BT carkit\\Music_Player_App\\goldstone\\ThemeDecorator\\I18nFontDecorator.js":"254","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioList\\AudioList.js":"255","F:\\BT carkit\\Music_Player_App\\goldstone\\ThemeDecorator\\AccessibilityDecorator.js":"256","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\Reducers\\AudioPlayerReducer.js":"257","F:\\BT carkit\\Music_Player_App\\goldstone\\TabLayout\\TabLayout.js":"258","F:\\BT carkit\\Music_Player_App\\goldstone\\Skinnable\\Skinnable.js":"259","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\AudioPlayerBase.js":"260","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\util.js":"261","F:\\BT carkit\\Music_Player_App\\goldstone\\ThemeDecorator\\fontGenerator.js":"262","F:\\BT carkit\\Music_Player_App\\src\\services\\index.js":"263","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\index.js":"264","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\util.js":"265","F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\VirtualList.js":"266","F:\\BT carkit\\Music_Player_App\\goldstone\\TabLayout\\TabGroup.js":"267","F:\\BT carkit\\Music_Player_App\\goldstone\\TabLayout\\Tab.js":"268","F:\\BT carkit\\Music_Player_App\\goldstone\\TabLayout\\RefocusDecorator.js":"269","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\$L\\$L.js":"270","F:\\BT carkit\\Music_Player_App\\goldstone\\Heading\\Heading.js":"271","F:\\BT carkit\\Music_Player_App\\goldstone\\Button\\Button.js":"272","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\WindowEventable\\WindowEventable.js":"273","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\SharedStateDecorator\\SharedStateDecorator.js":"274","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\Overlay.js":"275","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSlider.js":"276","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaTitle.js":"277","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\Media.js":"278","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\Times.js":"279","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaControls.js":"280","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\Audio.js":"281","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\AlbumInfo.js":"282","F:\\BT carkit\\Music_Player_App\\goldstone\\ImageItem\\index.js":"283","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\Arrangers.js":"284","F:\\BT carkit\\Music_Player_App\\goldstone\\Spinner\\Spinner.js":"285","F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\useThemeVirtualList.js":"286","F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\index.js":"287","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSliderDecorator.js":"288","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaKnob.js":"289","F:\\BT carkit\\Music_Player_App\\goldstone\\ImageItem\\ImageItem.js":"290","F:\\BT carkit\\Music_Player_App\\goldstone\\ImageItem\\ImageItemDecorator.js":"291","F:\\BT carkit\\Music_Player_App\\goldstone\\ImageItem\\ImageItemBase.js":"292","F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\Scrollbar.js":"293","F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useScroll.js":"294","F:\\BT carkit\\Music_Player_App\\goldstone\\Button\\ButtonBase\\BaseButton.js":"295","F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\useSpotlight.js":"296","F:\\BT carkit\\Music_Player_App\\goldstone\\Sprite\\Sprite.js":"297","F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\usePreventScroll.js":"298","F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\useEvent.js":"299","F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\device.js":"300","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\useAutoFocus.js":"301","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\Viewport.js":"302","F:\\BT carkit\\Music_Player_App\\goldstone\\TooltipDecorator\\TooltipDecorator.js":"303","F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\Marquee.js":"304","F:\\BT carkit\\Music_Player_App\\goldstone\\Icon\\Icon.js":"305","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\util\\util.js":"306","F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\audio.js":"307","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\PopupDecorator.js":"308","F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\video.js":"309","F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\Slider.js":"310","F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useSpotlight.js":"311","F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useOverscrollEffect.js":"312","F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useEvent.js":"313","F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useThemeScrollContentHandle.js":"314","F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\ScrollbarTrack.js":"315","F:\\BT carkit\\Music_Player_App\\goldstone\\DivButton\\Button.js":"316","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\NavigationButton.js":"317","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\FloatingLayerIdProvider.js":"318","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\CancelDecorator.js":"319","F:\\BT carkit\\Music_Player_App\\goldstone\\Scroller\\Scroller.js":"320","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\DebounceDecorator\\DebounceDecorator.js":"321","F:\\BT carkit\\Music_Player_App\\goldstone\\Icon\\IconList.js":"322","F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\request.js":"323","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\captureKeys.js":"324","F:\\BT carkit\\Music_Player_App\\goldstone\\TooltipDecorator\\util.js":"325","F:\\BT carkit\\Music_Player_App\\goldstone\\TooltipDecorator\\Tooltip.js":"326","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\TransitionDecorator.js":"327","F:\\BT carkit\\Music_Player_App\\goldstone\\Image\\Image.js":"328","F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\utils.js":"329","F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\SliderBehaviorDecorator.js":"330","F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\SliderBase\\SliderBase.js":"331","F:\\BT carkit\\Music_Player_App\\goldstone\\ProgressBar\\ProgressBarBase\\ProgressBarBase.js":"332","F:\\BT carkit\\Music_Player_App\\goldstone\\ProgressBar\\ProgressBarComponent.js":"333","F:\\BT carkit\\Music_Player_App\\goldstone\\util\\generateClassNames\\generateClassNames.js":"334","F:\\BT carkit\\Music_Player_App\\goldstone\\Scroller\\useThemeScroller.js":"335","F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\MarqueeBase\\index.js":"336","F:\\BT carkit\\Music_Player_App\\goldstone\\TooltipDecorator\\TooltipLabel.js":"337","F:\\BT carkit\\Music_Player_App\\goldstone\\Popup\\Popup.js":"338","F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\validators\\validators.js":"339","F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\SliderBase\\Knob.js":"340","F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\SliderBase\\PositionDecorator.js":"341","F:\\BT carkit\\Music_Player_App\\goldstone\\util\\calcProportion.js":"342","F:\\BT carkit\\Music_Player_App\\goldstone\\Scroller\\useEvent.js":"343","F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\MarqueeBase\\MarqueeController.js":"344","F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\MarqueeBase\\MarqueeBase.js":"345","F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\MarqueeBase\\MarqueeDecorator.js":"346","F:\\BT carkit\\Music_Player_App\\goldstone\\resolution\\resolution.js":"347","F:\\BT carkit\\Music_Player_App\\goldstone\\Popup\\PopupBase\\Transition.js":"348","F:\\BT carkit\\Music_Player_App\\goldstone\\ProgressBar\\ProgressBarTooltip\\ProgressBarTooltip.js":"349","F:\\BT carkit\\Music_Player_App\\goldstone\\Resizable\\Resizable.js":"350","F:\\BT carkit\\Music_Player_App\\src\\actions\\getBTDetails.js":"351","F:\\BT carkit\\Music_Player_App\\src\\actions\\getNumberOfItems.js":"352","F:\\BT carkit\\Music_Player_App\\src\\actions\\getFolderItems.js":"353","F:\\BT carkit\\Music_Player_App\\src\\actions\\getAVRCPStatus.js":"354","F:\\BT carkit\\Music_Player_App\\src\\reducers\\playerInfo.js":"355","F:\\BT carkit\\Music_Player_App\\src\\actions\\getAdapterDetails.js":"356","F:\\BT carkit\\Music_Player_App\\src\\actions\\avrcpConnect.js":"357","F:\\BT carkit\\Music_Player_App\\src\\actions\\lunaActions.js":"358","F:\\BT carkit\\Music_Player_App\\src\\actions\\changePath.js":"359","F:\\BT carkit\\Music_Player_App\\src\\actions\\getPlayerInfo.js":"360","F:\\BT carkit\\Music_Player_App\\src\\utils\\normalLog.js":"361","F:\\BT carkit\\Music_Player_App\\src\\reducers\\BTStatus.js":"362","F:\\BT carkit\\Music_Player_App\\src\\reducers\\adapterStatus.js":"363","F:\\BT carkit\\Music_Player_App\\src\\reducers\\avrcpConnectionStatus.js":"364","F:\\BT carkit\\Music_Player_App\\src\\reducers\\numberOfFolderItems.js":"365","F:\\BT carkit\\Music_Player_App\\src\\reducers\\folderItems.js":"366","F:\\BT carkit\\Music_Player_App\\src\\reducers\\folderPath.js":"367","F:\\BT carkit\\Music_Player_App\\src\\utils\\LS2RequestSingleton.js":"368"},{"size":483,"mtime":1614935816637,"results":"369","hashOfConfig":"370"},{"size":569,"mtime":1620645659554,"results":"371","hashOfConfig":"370"},{"size":893,"mtime":1620827125722,"results":"372","hashOfConfig":"370"},{"size":321,"mtime":1620734483293,"results":"373","hashOfConfig":"370"},{"size":1483,"mtime":1615808785417,"results":"374","hashOfConfig":"370"},{"size":317,"mtime":1614935816640,"results":"375","hashOfConfig":"370"},{"size":729,"mtime":1614935816638,"results":"376","hashOfConfig":"370"},{"size":6484,"mtime":1614935816348,"results":"377","hashOfConfig":"370"},{"size":1130,"mtime":1614935816266,"results":"378","hashOfConfig":"370"},{"size":2724,"mtime":1621229355201,"results":"379","hashOfConfig":"370"},{"size":629,"mtime":1620734134545,"results":"380","hashOfConfig":"370"},{"size":1121,"mtime":1614935816347,"results":"381","hashOfConfig":"370"},{"size":2647,"mtime":1614935816346,"results":"382","hashOfConfig":"370"},{"size":17356,"mtime":1614935816257,"results":"383","hashOfConfig":"370"},{"size":8144,"mtime":1614935816260,"results":"384","hashOfConfig":"370"},{"size":6322,"mtime":1614935816261,"results":"385","hashOfConfig":"370"},{"size":160,"mtime":1614935816512,"results":"386","hashOfConfig":"370"},{"size":3000,"mtime":1621228816466,"results":"387","hashOfConfig":"370"},{"size":1291,"mtime":1621228810664,"results":"388","hashOfConfig":"370"},{"size":1611,"mtime":1614935816310,"results":"389","hashOfConfig":"370"},{"size":11016,"mtime":1615808987360,"results":"390","hashOfConfig":"370"},{"size":1689,"mtime":1614935816349,"results":"391","hashOfConfig":"370"},{"size":658,"mtime":1614935816448,"results":"392","hashOfConfig":"370"},{"size":2011,"mtime":1614935816450,"results":"393","hashOfConfig":"370"},{"size":4876,"mtime":1614935816179,"results":"394","hashOfConfig":"370"},{"size":2346,"mtime":1614935816430,"results":"395","hashOfConfig":"370"},{"size":3778,"mtime":1614935816209,"results":"396","hashOfConfig":"370"},{"size":2526,"mtime":1614935816463,"results":"397","hashOfConfig":"370"},{"size":1606,"mtime":1615808453665,"results":"398","hashOfConfig":"370"},{"size":4176,"mtime":1614935816459,"results":"399","hashOfConfig":"370"},{"size":3124,"mtime":1615809002391,"results":"400","hashOfConfig":"370"},{"size":7657,"mtime":1615809009419,"results":"401","hashOfConfig":"370"},{"size":1890,"mtime":1615782466594,"results":"402","hashOfConfig":"370"},{"size":940,"mtime":1614935816441,"results":"403","hashOfConfig":"370"},{"size":553,"mtime":1614935816442,"results":"404","hashOfConfig":"370"},{"size":1497,"mtime":1614935816443,"results":"405","hashOfConfig":"370"},{"size":7949,"mtime":1614935816445,"results":"406","hashOfConfig":"370"},{"size":2935,"mtime":1614935816449,"results":"407","hashOfConfig":"370"},{"size":6624,"mtime":1614935816444,"results":"408","hashOfConfig":"370"},{"size":4607,"mtime":1614935816440,"results":"409","hashOfConfig":"370"},{"size":248,"mtime":1614935816230,"results":"410","hashOfConfig":"370"},{"size":23440,"mtime":1614935816397,"results":"411","hashOfConfig":"370"},{"size":129,"mtime":1615808445208,"results":"412","hashOfConfig":"370"},{"size":5170,"mtime":1614935816181,"results":"413","hashOfConfig":"370"},{"size":1220,"mtime":1614935816447,"results":"414","hashOfConfig":"370"},{"size":8070,"mtime":1614935816203,"results":"415","hashOfConfig":"370"},{"size":1999,"mtime":1614935816445,"results":"416","hashOfConfig":"370"},{"size":1565,"mtime":1614935816466,"results":"417","hashOfConfig":"370"},{"size":6523,"mtime":1614935816213,"results":"418","hashOfConfig":"370"},{"size":2352,"mtime":1614935816241,"results":"419","hashOfConfig":"370"},{"size":14673,"mtime":1614935816356,"results":"420","hashOfConfig":"370"},{"size":697,"mtime":1614935816227,"results":"421","hashOfConfig":"370"},{"size":6714,"mtime":1614935816229,"results":"422","hashOfConfig":"370"},{"size":2650,"mtime":1614935816438,"results":"423","hashOfConfig":"370"},{"size":10407,"mtime":1614935816303,"results":"424","hashOfConfig":"370"},{"size":9143,"mtime":1614935816329,"results":"425","hashOfConfig":"370"},{"size":639,"mtime":1614935816230,"results":"426","hashOfConfig":"370"},{"size":12552,"mtime":1614935816402,"results":"427","hashOfConfig":"370"},{"size":306,"mtime":1614935816644,"results":"428","hashOfConfig":"370"},{"size":453,"mtime":1615807904900,"results":"429","hashOfConfig":"370"},{"size":454,"mtime":1614935816646,"results":"430","hashOfConfig":"370"},{"size":14269,"mtime":1614935816275,"results":"431","hashOfConfig":"370"},{"size":3687,"mtime":1614935816491,"results":"432","hashOfConfig":"370"},{"size":14646,"mtime":1614935816497,"results":"433","hashOfConfig":"370"},{"size":8662,"mtime":1614935816215,"results":"434","hashOfConfig":"370"},{"size":5110,"mtime":1614935816353,"results":"435","hashOfConfig":"370"},{"size":10253,"mtime":1614935816358,"results":"436","hashOfConfig":"370"},{"size":13063,"mtime":1614935816309,"results":"437","hashOfConfig":"370"},{"size":884,"mtime":1614935816401,"results":"438","hashOfConfig":"370"},{"size":4753,"mtime":1614935816402,"results":"439","hashOfConfig":"370"},{"size":9508,"mtime":1614935816400,"results":"440","hashOfConfig":"370"},{"size":923,"mtime":1614935816645,"results":"441","hashOfConfig":"370"},{"size":4081,"mtime":1614935816223,"results":"442","hashOfConfig":"370"},{"size":4866,"mtime":1614935816493,"results":"443","hashOfConfig":"370"},{"size":288,"mtime":1614935816502,"results":"444","hashOfConfig":"370"},{"size":953,"mtime":1614935816499,"results":"445","hashOfConfig":"370"},{"size":3921,"mtime":1614935816496,"results":"446","hashOfConfig":"370"},{"size":23642,"mtime":1614935816495,"results":"447","hashOfConfig":"370"},{"size":670,"mtime":1614935816500,"results":"448","hashOfConfig":"370"},{"size":1186,"mtime":1614935816247,"results":"449","hashOfConfig":"370"},{"size":1427,"mtime":1614935816356,"results":"450","hashOfConfig":"370"},{"size":729,"mtime":1614935816308,"results":"451","hashOfConfig":"370"},{"size":17400,"mtime":1614935816278,"results":"452","hashOfConfig":"370"},{"size":7689,"mtime":1614935816245,"results":"453","hashOfConfig":"370"},{"size":8222,"mtime":1614935816244,"results":"454","hashOfConfig":"370"},{"size":25221,"mtime":1614935816246,"results":"455","hashOfConfig":"370"},{"size":15767,"mtime":1614935816471,"results":"456","hashOfConfig":"370"},{"size":3462,"mtime":1614935816301,"results":"457","hashOfConfig":"370"},{"size":1400,"mtime":1621607737227,"results":"458","hashOfConfig":"370"},{"size":373,"mtime":1580995652000,"results":"459","hashOfConfig":"370"},{"size":2517,"mtime":1621607703422,"results":"460","hashOfConfig":"370"},{"size":5888,"mtime":1614935816325,"results":"461","hashOfConfig":"370"},{"size":1378,"mtime":1614935816174,"results":"462","hashOfConfig":"370"},{"size":5399,"mtime":1614935816312,"results":"463","hashOfConfig":"370"},{"size":5685,"mtime":1614935816321,"results":"464","hashOfConfig":"370"},{"size":2549,"mtime":1614935816323,"results":"465","hashOfConfig":"370"},{"size":3219,"mtime":1614935816316,"results":"466","hashOfConfig":"370"},{"size":5071,"mtime":1614935816285,"results":"467","hashOfConfig":"370"},{"size":4519,"mtime":1614935816289,"results":"468","hashOfConfig":"370"},{"size":3798,"mtime":1614935816468,"results":"469","hashOfConfig":"370"},{"size":1926,"mtime":1614935816314,"results":"470","hashOfConfig":"370"},{"size":4596,"mtime":1614935816315,"results":"471","hashOfConfig":"370"},{"size":215,"mtime":1614935816501,"results":"472","hashOfConfig":"370"},{"size":6204,"mtime":1614935816291,"results":"473","hashOfConfig":"370"},{"size":1997,"mtime":1621607800241,"results":"474","hashOfConfig":"370"},{"size":1506,"mtime":1621606779855,"results":"475","hashOfConfig":"370"},{"size":3072,"mtime":1620828366940,"results":"476","hashOfConfig":"370"},{"size":49743,"mtime":1621603405646,"results":"477","hashOfConfig":"370"},{"size":1056,"mtime":1620900768499,"results":"478","hashOfConfig":"370"},{"size":8543,"mtime":1620815258314,"results":"479","hashOfConfig":"370"},{"size":3032,"mtime":1620900795879,"results":"480","hashOfConfig":"370"},{"size":2585,"mtime":1621602410793,"results":"481","hashOfConfig":"370"},{"size":8172,"mtime":1621599030978,"results":"482","hashOfConfig":"370"},{"size":24126,"mtime":1621606270652,"results":"483","hashOfConfig":"370"},{"size":1989,"mtime":1620900783664,"results":"484","hashOfConfig":"370"},{"size":953,"mtime":1621608137628,"results":"485","hashOfConfig":"370"},{"size":5283,"mtime":1614935816626,"results":"486","hashOfConfig":"370"},{"size":973,"mtime":1614935816624,"results":"487","hashOfConfig":"370"},{"size":483,"mtime":1614935816637,"results":"488","hashOfConfig":"489"},{"size":569,"mtime":1620645659554,"results":"490","hashOfConfig":"489"},{"size":893,"mtime":1620827125722,"results":"491","hashOfConfig":"489"},{"size":321,"mtime":1620734483293,"results":"492","hashOfConfig":"489"},{"size":2517,"mtime":1621607703422,"results":"493","hashOfConfig":"489"},{"size":2724,"mtime":1621229355201,"results":"494","hashOfConfig":"489"},{"size":317,"mtime":1614935816640,"results":"495","hashOfConfig":"489"},{"size":1483,"mtime":1615808785417,"results":"496","hashOfConfig":"489"},{"size":1130,"mtime":1614935816266,"results":"497","hashOfConfig":"489"},{"size":729,"mtime":1614935816638,"results":"498","hashOfConfig":"489"},{"size":6484,"mtime":1614935816348,"results":"499","hashOfConfig":"489"},{"size":3000,"mtime":1621228816466,"results":"500","hashOfConfig":"489"},{"size":160,"mtime":1614935816512,"results":"501","hashOfConfig":"489"},{"size":1997,"mtime":1621607800241,"results":"502","hashOfConfig":"489"},{"size":1291,"mtime":1621228810664,"results":"503","hashOfConfig":"489"},{"size":629,"mtime":1620734134545,"results":"504","hashOfConfig":"489"},{"size":6322,"mtime":1614935816261,"results":"505","hashOfConfig":"489"},{"size":17356,"mtime":1614935816257,"results":"506","hashOfConfig":"489"},{"size":8144,"mtime":1614935816260,"results":"507","hashOfConfig":"489"},{"size":2647,"mtime":1614935816346,"results":"508","hashOfConfig":"489"},{"size":1121,"mtime":1614935816347,"results":"509","hashOfConfig":"489"},{"size":1400,"mtime":1621607737227,"results":"510","hashOfConfig":"489"},{"size":11016,"mtime":1615808987360,"results":"511","hashOfConfig":"489"},{"size":1611,"mtime":1614935816310,"results":"512","hashOfConfig":"489"},{"size":1689,"mtime":1614935816349,"results":"513","hashOfConfig":"489"},{"size":1506,"mtime":1621606779855,"results":"514","hashOfConfig":"489"},{"size":1606,"mtime":1615808453665,"results":"515","hashOfConfig":"489"},{"size":3072,"mtime":1620828366940,"results":"516","hashOfConfig":"489"},{"size":49743,"mtime":1621603405646,"results":"517","hashOfConfig":"489"},{"size":658,"mtime":1614935816448,"results":"518","hashOfConfig":"489"},{"size":2011,"mtime":1614935816450,"results":"519","hashOfConfig":"489"},{"size":23440,"mtime":1614935816397,"results":"520","hashOfConfig":"489"},{"size":3124,"mtime":1615809002391,"results":"521","hashOfConfig":"489"},{"size":7657,"mtime":1615809009419,"results":"522","hashOfConfig":"489"},{"size":1890,"mtime":1615782466594,"results":"523","hashOfConfig":"489"},{"size":4876,"mtime":1614935816179,"results":"524","hashOfConfig":"489"},{"size":2346,"mtime":1614935816430,"results":"525","hashOfConfig":"489"},{"size":2526,"mtime":1614935816463,"results":"526","hashOfConfig":"489"},{"size":3778,"mtime":1614935816209,"results":"527","hashOfConfig":"489"},{"size":4176,"mtime":1614935816459,"results":"528","hashOfConfig":"489"},{"size":248,"mtime":1614935816230,"results":"529","hashOfConfig":"489"},{"size":953,"mtime":1621608137628,"results":"530","hashOfConfig":"489"},{"size":1989,"mtime":1620900783664,"results":"531","hashOfConfig":"489"},{"size":8172,"mtime":1621599030978,"results":"532","hashOfConfig":"489"},{"size":2585,"mtime":1621602410793,"results":"533","hashOfConfig":"489"},{"size":3032,"mtime":1620900795879,"results":"534","hashOfConfig":"489"},{"size":24126,"mtime":1621606270652,"results":"535","hashOfConfig":"489"},{"size":8543,"mtime":1620815258314,"results":"536","hashOfConfig":"489"},{"size":1056,"mtime":1620900768499,"results":"537","hashOfConfig":"489"},{"size":4607,"mtime":1614935816440,"results":"538","hashOfConfig":"489"},{"size":2935,"mtime":1614935816449,"results":"539","hashOfConfig":"489"},{"size":7949,"mtime":1614935816445,"results":"540","hashOfConfig":"489"},{"size":12552,"mtime":1614935816402,"results":"541","hashOfConfig":"489"},{"size":6624,"mtime":1614935816444,"results":"542","hashOfConfig":"489"},{"size":129,"mtime":1615808445208,"results":"543","hashOfConfig":"489"},{"size":697,"mtime":1614935816227,"results":"544","hashOfConfig":"489"},{"size":5888,"mtime":1614935816325,"results":"545","hashOfConfig":"489"},{"size":639,"mtime":1614935816230,"results":"546","hashOfConfig":"489"},{"size":6714,"mtime":1614935816229,"results":"547","hashOfConfig":"489"},{"size":1497,"mtime":1614935816443,"results":"548","hashOfConfig":"489"},{"size":3687,"mtime":1614935816491,"results":"549","hashOfConfig":"489"},{"size":14646,"mtime":1614935816497,"results":"550","hashOfConfig":"489"},{"size":553,"mtime":1614935816442,"results":"551","hashOfConfig":"489"},{"size":940,"mtime":1614935816441,"results":"552","hashOfConfig":"489"},{"size":5283,"mtime":1614935816626,"results":"553","hashOfConfig":"489"},{"size":973,"mtime":1614935816624,"results":"554","hashOfConfig":"489"},{"size":1220,"mtime":1614935816447,"results":"555","hashOfConfig":"489"},{"size":4753,"mtime":1614935816402,"results":"556","hashOfConfig":"489"},{"size":884,"mtime":1614935816401,"results":"557","hashOfConfig":"489"},{"size":9508,"mtime":1614935816400,"results":"558","hashOfConfig":"489"},{"size":1999,"mtime":1614935816445,"results":"559","hashOfConfig":"489"},{"size":9143,"mtime":1614935816329,"results":"560","hashOfConfig":"489"},{"size":2352,"mtime":1614935816241,"results":"561","hashOfConfig":"489"},{"size":306,"mtime":1614935816644,"results":"562","hashOfConfig":"489"},{"size":453,"mtime":1615807904900,"results":"563","hashOfConfig":"489"},{"size":5170,"mtime":1614935816181,"results":"564","hashOfConfig":"489"},{"size":454,"mtime":1614935816646,"results":"565","hashOfConfig":"489"},{"size":8070,"mtime":1614935816203,"results":"566","hashOfConfig":"489"},{"size":14673,"mtime":1614935816356,"results":"567","hashOfConfig":"489"},{"size":6523,"mtime":1614935816213,"results":"568","hashOfConfig":"489"},{"size":1565,"mtime":1614935816466,"results":"569","hashOfConfig":"489"},{"size":10407,"mtime":1614935816303,"results":"570","hashOfConfig":"489"},{"size":2650,"mtime":1614935816438,"results":"571","hashOfConfig":"489"},{"size":953,"mtime":1614935816499,"results":"572","hashOfConfig":"489"},{"size":3921,"mtime":1614935816496,"results":"573","hashOfConfig":"489"},{"size":23642,"mtime":1614935816495,"results":"574","hashOfConfig":"489"},{"size":670,"mtime":1614935816500,"results":"575","hashOfConfig":"489"},{"size":4866,"mtime":1614935816493,"results":"576","hashOfConfig":"489"},{"size":5399,"mtime":1614935816312,"results":"577","hashOfConfig":"489"},{"size":14269,"mtime":1614935816275,"results":"578","hashOfConfig":"489"},{"size":923,"mtime":1614935816645,"results":"579","hashOfConfig":"489"},{"size":4081,"mtime":1614935816223,"results":"580","hashOfConfig":"489"},{"size":8662,"mtime":1614935816215,"results":"581","hashOfConfig":"489"},{"size":10253,"mtime":1614935816358,"results":"582","hashOfConfig":"489"},{"size":5110,"mtime":1614935816353,"results":"583","hashOfConfig":"489"},{"size":13063,"mtime":1614935816309,"results":"584","hashOfConfig":"489"},{"size":5685,"mtime":1614935816321,"results":"585","hashOfConfig":"489"},{"size":2549,"mtime":1614935816323,"results":"586","hashOfConfig":"489"},{"size":3219,"mtime":1614935816316,"results":"587","hashOfConfig":"489"},{"size":1186,"mtime":1614935816247,"results":"588","hashOfConfig":"489"},{"size":288,"mtime":1614935816502,"results":"589","hashOfConfig":"489"},{"size":5071,"mtime":1614935816285,"results":"590","hashOfConfig":"489"},{"size":4519,"mtime":1614935816289,"results":"591","hashOfConfig":"489"},{"size":1427,"mtime":1614935816356,"results":"592","hashOfConfig":"489"},{"size":729,"mtime":1614935816308,"results":"593","hashOfConfig":"489"},{"size":17400,"mtime":1614935816278,"results":"594","hashOfConfig":"489"},{"size":3798,"mtime":1614935816468,"results":"595","hashOfConfig":"489"},{"size":1926,"mtime":1614935816314,"results":"596","hashOfConfig":"489"},{"size":4596,"mtime":1614935816315,"results":"597","hashOfConfig":"489"},{"size":215,"mtime":1614935816501,"results":"598","hashOfConfig":"489"},{"size":7689,"mtime":1614935816245,"results":"599","hashOfConfig":"489"},{"size":8222,"mtime":1614935816244,"results":"600","hashOfConfig":"489"},{"size":25221,"mtime":1614935816246,"results":"601","hashOfConfig":"489"},{"size":15767,"mtime":1614935816471,"results":"602","hashOfConfig":"489"},{"size":6204,"mtime":1614935816291,"results":"603","hashOfConfig":"489"},{"size":3462,"mtime":1614935816301,"results":"604","hashOfConfig":"489"},{"size":455,"mtime":1625034661583,"results":"605","hashOfConfig":"606"},{"size":569,"mtime":1620645659554,"results":"607","hashOfConfig":"606"},{"size":3617,"mtime":1625209153233,"results":"608","hashOfConfig":"606"},{"size":763,"mtime":1625123384879,"results":"609","hashOfConfig":"606"},{"size":2489,"mtime":1625034643006,"results":"610","hashOfConfig":"606"},{"size":317,"mtime":1614935816640,"results":"611","hashOfConfig":"606"},{"size":1483,"mtime":1615808785417,"results":"612","hashOfConfig":"606"},{"size":729,"mtime":1614935816638,"results":"613","hashOfConfig":"606"},{"size":2636,"mtime":1625210077595,"results":"614","hashOfConfig":"606"},{"size":1130,"mtime":1614935816266,"results":"615","hashOfConfig":"606"},{"size":6484,"mtime":1614935816348,"results":"616","hashOfConfig":"606"},{"size":160,"mtime":1614935816512,"results":"617","hashOfConfig":"606"},{"size":2937,"mtime":1625128044893,"results":"618","hashOfConfig":"606"},{"size":788,"mtime":1625032374583,"results":"619","hashOfConfig":"606"},{"size":1997,"mtime":1621607800241,"results":"620","hashOfConfig":"606"},{"size":1291,"mtime":1621228810664,"results":"621","hashOfConfig":"606"},{"size":17356,"mtime":1614935816257,"results":"622","hashOfConfig":"606"},{"size":8144,"mtime":1614935816260,"results":"623","hashOfConfig":"606"},{"size":6322,"mtime":1614935816261,"results":"624","hashOfConfig":"606"},{"size":1121,"mtime":1614935816347,"results":"625","hashOfConfig":"606"},{"size":2255,"mtime":1625129226634,"results":"626","hashOfConfig":"606"},{"size":2647,"mtime":1614935816346,"results":"627","hashOfConfig":"606"},{"size":1506,"mtime":1621606779855,"results":"628","hashOfConfig":"606"},{"size":11016,"mtime":1615808987360,"results":"629","hashOfConfig":"606"},{"size":1611,"mtime":1614935816310,"results":"630","hashOfConfig":"606"},{"size":47997,"mtime":1623755675534,"results":"631","hashOfConfig":"606"},{"size":3072,"mtime":1620828366940,"results":"632","hashOfConfig":"606"},{"size":1689,"mtime":1614935816349,"results":"633","hashOfConfig":"606"},{"size":1606,"mtime":1615808453665,"results":"634","hashOfConfig":"606"},{"size":658,"mtime":1614935816448,"results":"635","hashOfConfig":"606"},{"size":2011,"mtime":1614935816450,"results":"636","hashOfConfig":"606"},{"size":23440,"mtime":1614935816397,"results":"637","hashOfConfig":"606"},{"size":7657,"mtime":1615809009419,"results":"638","hashOfConfig":"606"},{"size":1890,"mtime":1615782466594,"results":"639","hashOfConfig":"606"},{"size":3124,"mtime":1615809002391,"results":"640","hashOfConfig":"606"},{"size":2346,"mtime":1614935816430,"results":"641","hashOfConfig":"606"},{"size":3778,"mtime":1614935816209,"results":"642","hashOfConfig":"606"},{"size":4876,"mtime":1614935816179,"results":"643","hashOfConfig":"606"},{"size":2526,"mtime":1614935816463,"results":"644","hashOfConfig":"606"},{"size":4176,"mtime":1614935816459,"results":"645","hashOfConfig":"606"},{"size":1049,"mtime":1625034694384,"results":"646","hashOfConfig":"606"},{"size":2622,"mtime":1623826462960,"results":"647","hashOfConfig":"606"},{"size":3032,"mtime":1620900795879,"results":"648","hashOfConfig":"606"},{"size":8543,"mtime":1620815258314,"results":"649","hashOfConfig":"606"},{"size":1932,"mtime":1625034685297,"results":"650","hashOfConfig":"606"},{"size":24513,"mtime":1623827023673,"results":"651","hashOfConfig":"606"},{"size":8172,"mtime":1621599030978,"results":"652","hashOfConfig":"606"},{"size":1674,"mtime":1624433673212,"results":"653","hashOfConfig":"606"},{"size":248,"mtime":1614935816230,"results":"654","hashOfConfig":"606"},{"size":4607,"mtime":1614935816440,"results":"655","hashOfConfig":"606"},{"size":5888,"mtime":1614935816325,"results":"656","hashOfConfig":"606"},{"size":12552,"mtime":1614935816402,"results":"657","hashOfConfig":"606"},{"size":129,"mtime":1615808445208,"results":"658","hashOfConfig":"606"},{"size":5283,"mtime":1614935816626,"results":"659","hashOfConfig":"606"},{"size":973,"mtime":1614935816624,"results":"660","hashOfConfig":"606"},{"size":697,"mtime":1614935816227,"results":"661","hashOfConfig":"606"},{"size":639,"mtime":1614935816230,"results":"662","hashOfConfig":"606"},{"size":6714,"mtime":1614935816229,"results":"663","hashOfConfig":"606"},{"size":3687,"mtime":1614935816491,"results":"664","hashOfConfig":"606"},{"size":14646,"mtime":1614935816497,"results":"665","hashOfConfig":"606"},{"size":5170,"mtime":1614935816181,"results":"666","hashOfConfig":"606"},{"size":4753,"mtime":1614935816402,"results":"667","hashOfConfig":"606"},{"size":9143,"mtime":1614935816329,"results":"668","hashOfConfig":"606"},{"size":884,"mtime":1614935816401,"results":"669","hashOfConfig":"606"},{"size":9508,"mtime":1614935816400,"results":"670","hashOfConfig":"606"},{"size":306,"mtime":1614935816644,"results":"671","hashOfConfig":"606"},{"size":2935,"mtime":1614935816449,"results":"672","hashOfConfig":"606"},{"size":7949,"mtime":1614935816445,"results":"673","hashOfConfig":"606"},{"size":14673,"mtime":1614935816356,"results":"674","hashOfConfig":"606"},{"size":2352,"mtime":1614935816241,"results":"675","hashOfConfig":"606"},{"size":6523,"mtime":1614935816213,"results":"676","hashOfConfig":"606"},{"size":1565,"mtime":1614935816466,"results":"677","hashOfConfig":"606"},{"size":453,"mtime":1615807904900,"results":"678","hashOfConfig":"606"},{"size":6624,"mtime":1614935816444,"results":"679","hashOfConfig":"606"},{"size":454,"mtime":1614935816646,"results":"680","hashOfConfig":"606"},{"size":5399,"mtime":1614935816312,"results":"681","hashOfConfig":"606"},{"size":953,"mtime":1614935816499,"results":"682","hashOfConfig":"606"},{"size":3921,"mtime":1614935816496,"results":"683","hashOfConfig":"606"},{"size":23642,"mtime":1614935816495,"results":"684","hashOfConfig":"606"},{"size":670,"mtime":1614935816500,"results":"685","hashOfConfig":"606"},{"size":4866,"mtime":1614935816493,"results":"686","hashOfConfig":"606"},{"size":8070,"mtime":1614935816203,"results":"687","hashOfConfig":"606"},{"size":1497,"mtime":1614935816443,"results":"688","hashOfConfig":"606"},{"size":553,"mtime":1614935816442,"results":"689","hashOfConfig":"606"},{"size":940,"mtime":1614935816441,"results":"690","hashOfConfig":"606"},{"size":10407,"mtime":1614935816303,"results":"691","hashOfConfig":"606"},{"size":2650,"mtime":1614935816438,"results":"692","hashOfConfig":"606"},{"size":8662,"mtime":1614935816215,"results":"693","hashOfConfig":"606"},{"size":923,"mtime":1614935816645,"results":"694","hashOfConfig":"606"},{"size":1220,"mtime":1614935816447,"results":"695","hashOfConfig":"606"},{"size":10253,"mtime":1614935816358,"results":"696","hashOfConfig":"606"},{"size":5110,"mtime":1614935816353,"results":"697","hashOfConfig":"606"},{"size":1999,"mtime":1614935816445,"results":"698","hashOfConfig":"606"},{"size":4081,"mtime":1614935816223,"results":"699","hashOfConfig":"606"},{"size":2549,"mtime":1614935816323,"results":"700","hashOfConfig":"606"},{"size":5685,"mtime":1614935816321,"results":"701","hashOfConfig":"606"},{"size":3219,"mtime":1614935816316,"results":"702","hashOfConfig":"606"},{"size":5071,"mtime":1614935816285,"results":"703","hashOfConfig":"606"},{"size":4519,"mtime":1614935816289,"results":"704","hashOfConfig":"606"},{"size":288,"mtime":1614935816502,"results":"705","hashOfConfig":"606"},{"size":13063,"mtime":1614935816309,"results":"706","hashOfConfig":"606"},{"size":1186,"mtime":1614935816247,"results":"707","hashOfConfig":"606"},{"size":1427,"mtime":1614935816356,"results":"708","hashOfConfig":"606"},{"size":14269,"mtime":1614935816275,"results":"709","hashOfConfig":"606"},{"size":3798,"mtime":1614935816468,"results":"710","hashOfConfig":"606"},{"size":1926,"mtime":1614935816314,"results":"711","hashOfConfig":"606"},{"size":4596,"mtime":1614935816315,"results":"712","hashOfConfig":"606"},{"size":215,"mtime":1614935816501,"results":"713","hashOfConfig":"606"},{"size":729,"mtime":1614935816308,"results":"714","hashOfConfig":"606"},{"size":7689,"mtime":1614935816245,"results":"715","hashOfConfig":"606"},{"size":8222,"mtime":1614935816244,"results":"716","hashOfConfig":"606"},{"size":25221,"mtime":1614935816246,"results":"717","hashOfConfig":"606"},{"size":15767,"mtime":1614935816471,"results":"718","hashOfConfig":"606"},{"size":17400,"mtime":1614935816278,"results":"719","hashOfConfig":"606"},{"size":6204,"mtime":1614935816291,"results":"720","hashOfConfig":"606"},{"size":3462,"mtime":1614935816301,"results":"721","hashOfConfig":"606"},{"size":1725,"mtime":1625228563278,"results":"722","hashOfConfig":"606"},{"size":917,"mtime":1625228583679,"results":"723","hashOfConfig":"606"},{"size":2780,"mtime":1625228652211,"results":"724","hashOfConfig":"606"},{"size":1099,"mtime":1625228557506,"results":"725","hashOfConfig":"606"},{"size":356,"mtime":1625032060743,"results":"726","hashOfConfig":"606"},{"size":1083,"mtime":1625228552187,"results":"727","hashOfConfig":"606"},{"size":563,"mtime":1625207253015,"results":"728","hashOfConfig":"606"},{"size":423,"mtime":1624950435146,"results":"729","hashOfConfig":"606"},{"size":939,"mtime":1625228543547,"results":"730","hashOfConfig":"606"},{"size":1429,"mtime":1625228593088,"results":"731","hashOfConfig":"606"},{"size":751,"mtime":1619522957787,"results":"732","hashOfConfig":"606"},{"size":249,"mtime":1619522957779,"results":"733","hashOfConfig":"606"},{"size":269,"mtime":1619522957780,"results":"734","hashOfConfig":"606"},{"size":288,"mtime":1625028411562,"results":"735","hashOfConfig":"606"},{"size":318,"mtime":1625121584152,"results":"736","hashOfConfig":"606"},{"size":410,"mtime":1625209973631,"results":"737","hashOfConfig":"606"},{"size":237,"mtime":1625123359582,"results":"738","hashOfConfig":"606"},{"size":585,"mtime":1619522957785,"results":"739","hashOfConfig":"606"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"743"},"1qikpto",{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"743"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"743"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"743"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"743"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"743"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"743"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"743"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"743"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814","usedDeprecatedRules":"743"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"743"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"743"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"743"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"743"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"743"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888","usedDeprecatedRules":"743"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"743"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"743"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"743"},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"938","usedDeprecatedRules":"743"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"941"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"944","usedDeprecatedRules":"743"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"949","usedDeprecatedRules":"950"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"743"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"976","usedDeprecatedRules":"743"},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"983","usedDeprecatedRules":"743"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"986","usedDeprecatedRules":"743"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"743"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"743"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1001","usedDeprecatedRules":"743"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"743"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008","usedDeprecatedRules":"743"},{"filePath":"1009","messages":"1010","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1m6m02x",{"filePath":"1011","messages":"1012","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1013","messages":"1014","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1075","messages":"1076","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1077","messages":"1078","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1179","messages":"1180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1181","messages":"1182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1183","messages":"1184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1185","messages":"1186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1187","messages":"1188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1189","messages":"1190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1191","messages":"1192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1193","messages":"1194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1195","messages":"1196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1197","messages":"1198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1231","messages":"1232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1233","messages":"1234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1235","messages":"1236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1237","messages":"1238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1239","messages":"1240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1241","messages":"1242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},"jqcyhw",{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1248","usedDeprecatedRules":"1243"},{"filePath":"1249","messages":"1250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1251","messages":"1252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"1243"},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1262","usedDeprecatedRules":"1243"},{"filePath":"1263","messages":"1264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1265","messages":"1266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1267","messages":"1268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1269","messages":"1270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1271","messages":"1272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1273","messages":"1274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"976","usedDeprecatedRules":"1243"},{"filePath":"1275","messages":"1276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"1277"},{"filePath":"1278","messages":"1279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"1243"},{"filePath":"1282","messages":"1283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"1243"},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1288","usedDeprecatedRules":"1243"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"1295"},{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1300","usedDeprecatedRules":"1243"},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"1243"},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814","usedDeprecatedRules":"1295"},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1295"},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"811","usedDeprecatedRules":"1295"},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1325","messages":"1326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1333","usedDeprecatedRules":"1243"},{"filePath":"1334","messages":"1335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991","usedDeprecatedRules":"1243"},{"filePath":"1336","messages":"1337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1338","messages":"1339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1340","messages":"1341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1342","usedDeprecatedRules":"1243"},{"filePath":"1343","messages":"1344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1345","messages":"1346","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1347","usedDeprecatedRules":"1243"},{"filePath":"1348","messages":"1349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1350","messages":"1351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1352","messages":"1353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1354","messages":"1355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"1243"},{"filePath":"1356","messages":"1357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1358","messages":"1359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1360","messages":"1361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008","usedDeprecatedRules":"1243"},{"filePath":"1362","messages":"1363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1364","messages":"1365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1366","messages":"1367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859","usedDeprecatedRules":"1243"},{"filePath":"1368","messages":"1369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"1243"},{"filePath":"1370","messages":"1371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1372","messages":"1373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1374","messages":"1375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1376","messages":"1377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1295"},{"filePath":"1378","messages":"1379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1380","messages":"1381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1382","messages":"1383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1384","messages":"1385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1386","messages":"1387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1388","messages":"1389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1390","messages":"1391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1392","messages":"1393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1394","messages":"1395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1396","messages":"1397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1398","messages":"1399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1400","messages":"1401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1402","messages":"1403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1404","messages":"1405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1406","messages":"1407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1408","messages":"1409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1410","messages":"1411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1412","messages":"1413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"1243"},{"filePath":"1414","messages":"1415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1295"},{"filePath":"1416","messages":"1417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1418","messages":"1419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"1243"},{"filePath":"1420","messages":"1421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1422","messages":"1423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1295"},{"filePath":"1424","messages":"1425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1295"},{"filePath":"1426","messages":"1427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1428","messages":"1429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1430","messages":"1431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1432","messages":"1433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1434","messages":"1435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888","usedDeprecatedRules":"1243"},{"filePath":"1436","messages":"1437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1438","messages":"1439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"1243"},{"filePath":"1440","messages":"1441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1442","messages":"1443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1444","messages":"1445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"1243"},{"filePath":"1446","messages":"1447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1448","messages":"1449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1450","messages":"1451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1452","messages":"1453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1454"},{"filePath":"1455","messages":"1456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1457","messages":"1458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"1243"},{"filePath":"1459","messages":"1460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1461","messages":"1462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1463","messages":"1464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1465","messages":"1466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1467","messages":"1468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1469","messages":"1470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1454"},{"filePath":"1471","messages":"1472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1473","messages":"1474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1475","messages":"1476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1477","messages":"1478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1479","messages":"1480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1481","messages":"1482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1483","messages":"1484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1485","messages":"1486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1487","messages":"1488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1489","messages":"1490","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1491","messages":"1492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1493","messages":"1494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1495","messages":"1496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1497","messages":"1498","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1499","usedDeprecatedRules":"1243"},{"filePath":"1500","messages":"1501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1502","messages":"1503","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1504","messages":"1505","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1506","messages":"1507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1508","messages":"1509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1510","messages":"1511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1512","messages":"1513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1514","messages":"1515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1516","messages":"1517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1518","messages":"1519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},{"filePath":"1520","messages":"1521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1243"},"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\index.js",["1522"],"import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport configureStore from './store/configureStore';\r\nimport App from './App';\r\n\r\nconst store = configureStore();\r\n\r\nconst appElement = (\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>\r\n);\r\n\r\n// In a browser environment, render instead of exporting\r\nif (typeof window !== 'undefined') {\r\n\trender(appElement, document.getElementById('root'));\r\n}\r\n\r\nexport default appElement;\r\n",["1523","1524","1525"],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\store\\configureStore.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\App\\App.js",["1526"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Panels, Routable, Route } from \"../../goldstone/Panels\";\r\nimport ThemeDecorator from \"../../goldstone/ThemeDecorator\";\r\n\r\nimport MainPanel from \"../views/MainPanel\";\r\nimport AudioPanel from \"../views/AudioPanel/AudioPanel\";\r\n\r\nconst RoutablePanels = Routable({ navigate: \"onBack\" }, Panels);\r\n\r\nconst App = ({ path, ...rest }) => {\r\n  return (\r\n    <RoutablePanels {...rest} path={path}>\r\n      <Route path=\"home\" component={MainPanel} title=\"Home Page\" />\r\n      <Route path=\"audioplayer\" component={AudioPanel} title=\"Audio Player\" />\r\n    </RoutablePanels>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  path: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = ({ path }) => {\r\n  return {\r\n    path: path.path,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(ThemeDecorator(App));\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\reducers\\index.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\reducers\\audioReducer.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\reducers\\navigationReducer.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\reducers\\deviceReducer.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ThemeDecorator\\ThemeDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Panels\\index.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\views\\MainPanel\\MainPanel.js",["1527","1528","1529","1530"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { TabLayout, Tab } from \"../../../goldstone/TabLayout\";\r\nimport { Panel, Header } from \"../../../goldstone/Panels\";\r\nimport AudioList from \"../../components/AudioList/AudioList\";\r\n\r\nimport { changePath } from \"../../actions/navigationActions\";\r\nimport { getDeviceList } from \"../../actions/deviceActions\";\r\nimport {\r\n  getAudioList,\r\n  getCurrentAudioMetaData,\r\n} from \"../../actions/audioActions\";\r\n\r\nimport css from \"./MainPanel.module.less\";\r\n\r\nconst MainPanel = ({\r\n  devices,\r\n  handleNavigate,\r\n  getListDevice,\r\n  getListAudio,\r\n  getAudioMetaData,\r\n  audioList,\r\n  ...rest\r\n}) => {\r\n  useEffect(() => {\r\n    getListDevice();\r\n  }, []);\r\n\r\n  const handleAudioNavigate = (url, AudioMetaData, index) => {\r\n    getAudioMetaData(AudioMetaData.uri, index);\r\n    handleNavigate(url);\r\n  };\r\n\r\n  return (\r\n    <Panel {...rest}>\r\n      <Header />\r\n      <TabLayout>\r\n        {devices.map((device) => {\r\n          return (\r\n            device.deviceList.length > 0 &&\r\n            device.deviceList.map((deviceList, index) => {\r\n              return (\r\n                <Tab\r\n                  className={css.tab}\r\n                  key={deviceList.uri}\r\n                  icon=\"usb\"\r\n                  onTabClick={() => getListAudio(deviceList.uri)}\r\n                  title={deviceList.name}\r\n                >\r\n                  <AudioList\r\n                    key={index}\r\n                    audiolist={audioList}\r\n                    handleNavigate={handleAudioNavigate}\r\n                  />\r\n                </Tab>\r\n              );\r\n            })\r\n          );\r\n        })}\r\n      </TabLayout>\r\n    </Panel>\r\n  );\r\n};\r\n\r\nMainPanel.propTypes = {\r\n  deviceList: PropTypes.array,\r\n  getListDevice: PropTypes.func,\r\n  getListAudio: PropTypes.func,\r\n  getAudioMetaData: PropTypes.func,\r\n  handleNavigate: PropTypes.func,\r\n  audioList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = ({ device, audio }) => {\r\n  return {\r\n    devices: device.deviceList,\r\n    audioList: audio.audioList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    handleNavigate: (path) => dispatch(changePath(path)),\r\n    getListDevice: () =>\r\n      dispatch(\r\n        getDeviceList({\r\n          subscribe: true,\r\n        })\r\n      ),\r\n    getListAudio: (uri) =>\r\n      dispatch(\r\n        getAudioList({\r\n          uri: uri,\r\n        })\r\n      ),\r\n    getAudioMetaData: (uri, index) =>\r\n      dispatch(\r\n        getCurrentAudioMetaData({\r\n          uri: uri,\r\n          audioIndex: index,\r\n        })\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(MainPanel);\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\actions\\types.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ThemeDecorator\\I18nFontDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ThemeDecorator\\AccessibilityDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Panels\\Header.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Panels\\Panel.js",["1531"],"import {forward, handle} from '@enact/core/handle';\r\nimport hoc from '@enact/core/hoc';\r\nimport kind from '@enact/core/kind';\r\nimport EnactPropTypes from '@enact/core/internal/prop-types';\r\nimport Spotlight from '@enact/spotlight';\r\nimport SpotlightContainerDecorator, {spotlightDefaultClass} from '@enact/spotlight/SpotlightContainerDecorator';\r\nimport ComponentOverride from '@enact/ui/ComponentOverride';\r\nimport ForwardRef from '@enact/ui/ForwardRef';\r\nimport Slottable from '@enact/ui/Slottable';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport compose from 'ramda/src/compose';\r\n\r\nimport Skinnable from '../Skinnable';\r\nimport SharedStateDecorator from '../internal/SharedStateDecorator';\r\n\r\nimport {AutoFocusDecorator} from '../internal/Panels';\r\nimport {ContextAsDefaults} from '../internal/Panels/util';\r\nimport {FloatingLayerIdProvider} from '../internal/Panels';\r\n\r\nimport componentCss from './Panel.module.less';\r\n\r\nlet panelId = 0;\r\n\r\n/**\r\n * A Panel is the standard view container used inside a [Panels]{@link sandstone/Panels.Panels} view\r\n * manager instance.\r\n *\r\n * [Panels]{@link sandstone/Panels.Panels} will typically contain several instances of these and\r\n * transition between them.\r\n *\r\n * @class Panel\r\n * @memberof sandstone/Panels\r\n * @ui\r\n * @public\r\n */\r\nconst PanelBase = kind({\r\n\tname: 'Panel',\r\n\r\n\tpropTypes: /** @lends sandstone/Panels.Panel.prototype */ {\r\n\t\t/**\r\n \t\t * The \"aria-label\" for the Panel.\r\n\t\t *\r\n\t\t * By default, the panel will be labeled by its [Header]{@link sandstone/Panels.Header}.\r\n\t\t * When `aria-label` is set, it will be used instead to provide an accessibility label for\r\n\t\t * the panel.\r\n\t\t *\r\n\t\t * @memberof sandstone/Panels.Panel.prototype\r\n\t\t * @type {String}\r\n\t\t * @public\r\n\t\t */\r\n\t\t'aria-label': PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * Obtains a reference to the root node.\r\n\t\t *\r\n\t\t * @type {Function|Object}\r\n\t\t * @public\r\n\t\t */\r\n\t\tcomponentRef: EnactPropTypes.ref,\r\n\r\n\t\t/**\r\n\t\t * Customizes the component by mapping the supplied collection of CSS class names to the\r\n\t\t * corresponding internal elements and states of this component.\r\n\t\t *\r\n\t\t * The following classes are supported:\r\n\t\t *\r\n\t\t * * `panel` - The root class name\r\n\t\t * * `body` - The node containing the panel's children\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @public\r\n\t\t */\r\n\t\tcss: PropTypes.object,\r\n\r\n\t\t/**\r\n\t\t * The floating layer id\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @private\r\n\t\t */\r\n\t\tfloatingLayerId: PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * Header for the panel.\r\n\t\t *\r\n\t\t * This is usually passed by the [Slottable]{@link ui/Slottable.Slottable} API by using a\r\n\t\t * [Header]{@link sandstone/Panels.Header} component as a child of the Panel.\r\n\t\t *\r\n\t\t * @type {Header}\r\n\t\t * @public\r\n\t\t */\r\n\t\theader: PropTypes.node,\r\n\r\n\t\t/**\r\n\t\t * Hides the body components.\r\n\t\t *\r\n\t\t * When a Panel is used within [`Panels`]{@link sandstone/Panels.Panels} this property will\r\n\t\t * be set automatically to `true` on render and `false` after animating into view.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t * @public\r\n\t\t */\r\n\t\thideChildren: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * Set the type of panel to be used.\r\n\t\t *\r\n\t\t * @type {('wizard')}\r\n\t\t * @private\r\n\t\t */\r\n\t\tpanelType: PropTypes.oneOf(['wizard'])\r\n\t},\r\n\r\n\tdefaultProps: {\r\n\t\thideChildren: false\r\n\t},\r\n\r\n\tstyles: {\r\n\t\tcss: componentCss,\r\n\t\tclassName: 'panel',\r\n\t\tpublicClassNames: ['panel', 'body']\r\n\t},\r\n\r\n\thandlers: {\r\n\t\tonScroll: handle(\r\n\t\t\tforward('onScroll'),\r\n\t\t\t({currentTarget}) => {\r\n\t\t\t\tcurrentTarget.scrollTop = 0;\r\n\t\t\t\tcurrentTarget.scrollLeft = 0;\r\n\t\t\t}\r\n\t\t)\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tchildren: ({children, hideChildren}) => hideChildren ? null : children,\r\n\t\tbodyClassName: ({css, header, hideChildren, styler}) => styler.join(css.body, {\r\n\t\t\tnoHeader: !header,\r\n\t\t\tvisible: !hideChildren\r\n\t\t}),\r\n\t\tentering: ({hideChildren}) => (hideChildren && Spotlight.getPointerMode()),\r\n\t\t// nulling headerId prevents the aria-labelledby relationship which is necessary to allow\r\n\t\t// aria-label to take precedence\r\n\t\t// (see https://www.w3.org/TR/wai-aria/states_and_properties#aria-labelledby)\r\n\t\tids: ({'aria-label': label, panelType}) => {\r\n\t\t\tif (label) {\r\n\t\t\t\treturn {};\r\n\t\t\t} else if (panelType === 'wizard') {\r\n\t\t\t\tconst id = `panel_${++panelId}_header`;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\theaderId: id,\r\n\t\t\t\t\tlabelledby: id\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\tconst labelledby = `panel_${++panelId}_title panel_${panelId}_subtitle`;\r\n\t\t\t\tconst [titleId, subtitleId] = labelledby.split(' ');\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabelledby,\r\n\t\t\t\t\tsubtitleId,\r\n\t\t\t\t\ttitleId\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trender: ({\r\n\t\tbodyClassName,\r\n\t\tchildren,\r\n\t\tcomponentRef,\r\n\t\tcss,\r\n\t\tfloatingLayerId,\r\n\t\tentering,\r\n\t\theader,\r\n\t\tids: {headerId = null, labelledby = null, subtitleId = null, titleId = null},\r\n\t\t...rest\r\n\t}) => {\r\n\t\tdelete rest.hideChildren;\r\n\t\tdelete rest.panelType;\r\n\r\n\t\treturn (\r\n\t\t\t<article role=\"region\" {...rest} aria-owns={floatingLayerId} aria-labelledby={labelledby} ref={componentRef}>\r\n\t\t\t\t<div className={css.header} id={headerId}>\r\n\t\t\t\t\t<ComponentOverride\r\n\t\t\t\t\t\tcomponent={header}\r\n\t\t\t\t\t\tentering={entering}\r\n\t\t\t\t\t\tsubtitleId={subtitleId}\r\n\t\t\t\t\t\ttitleId={titleId}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<section className={bodyClassName}>{children}</section>\r\n\t\t\t</article>\r\n\t\t);\r\n\t}\r\n});\r\n\r\n/**\r\n * Sets the strategy used to automatically focus an element within the panel upon render.\r\n *\r\n * * \"none\" - Automatic focus is disabled\r\n * * \"last-focused\" - The element last focused in the panel with be restored\r\n * * \"default-element\" - The first spottable component within the body will be focused\r\n * * Custom Selector - A custom CSS selector may also be provided which will be used to find\r\n *   the target within the Panel\r\n *\r\n * When used within [Panels]{@link sandstone/Panels.Panels}, this prop may be set by\r\n * `Panels` to \"default-element\" when navigating \"forward\" to a higher index. This behavior\r\n * may be overridden by setting `autoFocus` on the `Panel` instance as a child of `Panels`\r\n * or by wrapping `Panel` with a custom component and overriding the value passed by\r\n * `Panels`.\r\n *\r\n * ```\r\n * // Panel within CustomPanel will always receive \"last-focused\"\r\n * const CustomPanel = (props) => <Panel {...props} autoFocus=\"last-focused\" />;\r\n *\r\n * // The first panel will always receive \"last-focused\". The second panel will receive\r\n * // \"default-element\" when navigating from the first panel but `autoFocus` will be unset\r\n * // when navigating from the third panel and as a result will default to \"last-focused\".\r\n * const MyPanels = () => (\r\n *   <Panels>\r\n *     <Panel autoFocus=\"last-focused\" />\r\n *     <Panel />\r\n *     <Panel />\r\n *   </Panels>\r\n * );\r\n * ```\r\n *\r\n * @type {('default-element'|'last-focused'|'none'|String)}\r\n * @memberof sandstone/Panels.Panel.prototype\r\n * @default 'last-focused'\r\n * @public\r\n */\r\n\r\nconst PanelDecorator = hoc({defaultElement: `.${componentCss.body} *`}, (config, Wrapped) => {\r\n\tlet {defaultElement} = config;\r\n\r\n\tdefaultElement = [\r\n\t\t`.${spotlightDefaultClass}`,\r\n\t\t...(Array.isArray(defaultElement) ? defaultElement : [defaultElement])\r\n\t];\r\n\r\n\tconst Decorator = compose(\r\n\t\tForwardRef({prop: 'componentRef'}),\r\n\t\tFloatingLayerIdProvider,\r\n\t\tContextAsDefaults,\r\n\t\tSharedStateDecorator({idProp: 'data-index'}),\r\n\t\tSpotlightContainerDecorator({\r\n\t\t\t// prefer any spottable within the panel body for first render\r\n\t\t\tcontinue5WayHold: true,\r\n\t\t\tdefaultElement,\r\n\t\t\tenterTo: 'last-focused',\r\n\t\t\tpreserveId: true\r\n\t\t}),\r\n\t\tSlottable({slots: ['header']}),\r\n\t\tAutoFocusDecorator,\r\n\t\tSkinnable\r\n\t);\r\n\r\n\treturn Decorator(Wrapped);\r\n});\r\n\r\n/**\r\n * Prevents the component from restoring any framework shared state.\r\n *\r\n * When `false`, the default, Panel will store state for some framework components in order to\r\n * restore that state when returning to the Panel. Setting this prop to `true` will suppress that\r\n * behavior and not store or retrieve any framework component state.\r\n *\r\n * @name noSharedState\r\n * @type {Boolean}\r\n * @default false\r\n * @memberof sandstone/Panels.Panel.prototype\r\n */\r\n\r\nconst Panel = PanelDecorator(PanelBase);\r\n\r\nexport default Panel;\r\nexport {Panel, PanelBase, PanelDecorator};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Panels\\Panels.js",["1532"],"import kind from '@enact/core/kind';\r\nimport handle, {adaptEvent, forwardWithPrevent} from '@enact/core/handle';\r\nimport IdProvider from '@enact/ui/internal/IdProvider';\r\nimport {shape} from '@enact/ui/ViewManager';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'ramda/src/compose';\r\nimport React from 'react';\r\n\r\nimport {BasicArranger, CancelDecorator, Viewport} from '../internal/Panels';\r\nimport Skinnable from '../Skinnable';\r\n\r\nimport {getSharedProps, deleteSharedProps} from '../internal/Panels/util';\r\n\r\nimport componentCss from './Panels.module.less';\r\n\r\n/**\r\n * Basic Panels component without a default [arranger]{@link ui/ViewManager.Arranger}\r\n *\r\n * @class Panels\r\n * @memberof sandstone/Panels\r\n * @ui\r\n * @public\r\n */\r\nconst PanelsBase = kind({\r\n\tname: 'Panels',\r\n\r\n\tpropTypes: /** @lends sandstone/Panels.Panels.prototype */ {\r\n\t\t/**\r\n\t\t * Function that generates unique identifiers for Panel instances.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @required\r\n\t\t * @private\r\n\t\t */\r\n\t\tgenerateId: PropTypes.func.isRequired,\r\n\r\n\t\t/**\r\n\t\t * Set of functions that control how the panels are transitioned into and out of the\r\n\t\t * viewport.\r\n\t\t *\r\n\t\t * @see {@link ui/ViewManager.SlideArranger}\r\n\t\t * @type {ui/ViewManager.Arranger}\r\n\t\t * @default ui/ViewManager.SlideLeftArranger\r\n\t\t * @public\r\n\t\t */\r\n\t\tarranger: shape,\r\n\r\n\t\t/**\r\n\t\t * Hint string read when focusing the back button.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default 'go to previous'\r\n\t\t * @public\r\n\t\t */\r\n\t\tbackButtonAriaLabel: PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * Background opacity of the application back button.\r\n\t\t *\r\n\t\t * @type {('opaque'|'transparent')}\r\n\t\t * @default 'transparent'\r\n\t\t * @public\r\n\t\t */\r\n\t\tbackButtonBackgroundOpacity: PropTypes.oneOf(['opaque', 'transparent']),\r\n\r\n\t\t/**\r\n\t\t * [`Panel`s]{@link sandstone/Panels.Panel} to be rendered\r\n\t\t *\r\n\t\t * @type {Node}\r\n\t\t * @public\r\n\t\t */\r\n\t\tchildren: PropTypes.node,\r\n\r\n\t\t/**\r\n\t\t * Hint string read when focusing the application close button.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default 'Exit app'\r\n\t\t * @public\r\n\t\t */\r\n\t\tcloseButtonAriaLabel: PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * Background opacity of the application close button.\r\n\t\t *\r\n\t\t * @type {('opaque'|'transparent')}\r\n\t\t * @default 'transparent'\r\n\t\t * @public\r\n\t\t */\r\n\t\tcloseButtonBackgroundOpacity: PropTypes.oneOf(['opaque', 'transparent']),\r\n\r\n\t\t/**\r\n\t\t * Customizes the component by mapping the supplied collection of CSS class names to the\r\n\t\t * corresponding internal elements and states of this component.\r\n\t\t *\r\n\t\t * The following classes are supported:\r\n\t\t *\r\n\t\t * * `panels` - The root class name\r\n\t\t * * `viewport` - The node containing the panel instances\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @public\r\n\t\t */\r\n\t\tcss: PropTypes.object,\r\n\r\n\t\t/**\r\n\t\t * Unique identifier for the Panels instance.\r\n\t\t *\r\n\t\t * When defined, `Panels` will manage the presentation state of `Panel` instances in order\r\n\t\t * to restore it when returning to the `Panel`. See\r\n\t\t * [noSharedState]{@link sandstone/Panels.Panels.noSharedState} for more details on shared\r\n\t\t * state.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @public\r\n\t\t */\r\n\t\tid: PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * Index of the active panel\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t * @public\r\n\t\t */\r\n\t\tindex: PropTypes.number,\r\n\r\n\t\t/**\r\n\t\t * Disables panel transitions.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t * @public\r\n\t\t */\r\n\t\tnoAnimation: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * Omits the back button.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t * @public\r\n\t\t */\r\n\t\tnoBackButton: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * Omits the close button.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t * @public\r\n\t\t */\r\n\t\tnoCloseButton: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * Prevents maintaining shared state for framework components within this `Panels` instance.\r\n\t\t *\r\n\t\t * When `false`, each `Panel` will track the state of some framework components in order to\r\n\t\t * restore that state when the Panel is recreated. For example, the scroll position of a\r\n\t\t * `sandstone/Scroller` within a `Panel` will be saved and restored when returning to that\r\n\t\t * `Panel`.\r\n\t\t *\r\n\t\t * This only applied when navigating \"back\" (to a lower index) to `Panel`. When navigating\r\n\t\t * \"forwards\" (to a higher index), the `Panel` and its contained components will use their\r\n\t\t * default state.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t * @public\r\n\t\t */\r\n\t\tnoSharedState: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * Called with cancel/back key events.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\t\tonBack: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * Called when the app close button is clicked.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\t\tonClose: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * Called once when all panels have completed their transition.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t */\r\n\t\tonTransition: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * Called once before panels begin their transition.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t */\r\n\t\tonWillTransition: PropTypes.func\r\n\t},\r\n\r\n\tdefaultProps: {\r\n\t\tarranger: BasicArranger,\r\n\t\tindex: 0,\r\n\t\tnoAnimation: false,\r\n\t\tnoSharedState: false\r\n\t},\r\n\r\n\tstyles: {\r\n\t\tcss: componentCss,\r\n\t\tclassName: 'panels enact-fit',\r\n\t\tpublicClassNames: ['panels', 'viewport']\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tviewportId: ({id}) => id && `${id}-viewport`\r\n\t},\r\n\r\n\thandlers: {\r\n\t\tonBack: handle(\r\n\t\t\tadaptEvent(\r\n\t\t\t\t(ev, {index}) => ({index: Math.max(index - 1, 0)}),\r\n\t\t\t\tforwardWithPrevent('onBack')\r\n\t\t\t)\r\n\t\t)\r\n\t},\r\n\r\n\trender: ({\r\n\t\tarranger,\r\n\t\tchildren,\r\n\t\tcss,\r\n\t\tgenerateId,\r\n\t\tid,\r\n\t\tindex,\r\n\t\tnoAnimation,\r\n\t\tnoSharedState,\r\n\t\tonTransition,\r\n\t\tonWillTransition,\r\n\t\tviewportId,\r\n\t\t...rest\r\n\t}) => {\r\n\t\tconst sharedProps = getSharedProps(rest);\r\n\t\tdeleteSharedProps(rest);\r\n\t\treturn (\r\n\t\t\t<div {...rest} id={id}>\r\n\t\t\t\t<Viewport\r\n\t\t\t\t\t{...sharedProps}\r\n\t\t\t\t\tarranger={arranger}\r\n\t\t\t\t\tclassName={css.viewport}\r\n\t\t\t\t\tgenerateId={generateId}\r\n\t\t\t\t\tid={viewportId}\r\n\t\t\t\t\tindex={index}\r\n\t\t\t\t\tnoAnimation={noAnimation}\r\n\t\t\t\t\tnoSharedState={noSharedState}\r\n\t\t\t\t\tonTransition={onTransition}\r\n\t\t\t\t\tonWillTransition={onWillTransition}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Viewport>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n});\r\n\r\nconst PanelsDecorator = compose(\r\n\tCancelDecorator({cancel: 'onBack'}),\r\n\tIdProvider,\r\n\tSkinnable\r\n);\r\n\r\nconst Panels = PanelsDecorator(PanelsBase);\r\n\r\nexport default Panels;\r\nexport {\r\n\tPanels,\r\n\tPanelsBase\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\actions\\navigationActions.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\actions\\audioActions.js",["1533"],"import { types } from \"./types\";\r\nimport { Audio } from \"../services\";\r\nimport LS2Request from \"@enact/webos/LS2Request\";\r\nimport mockAudioList from \"../../assets/mock/audioList.json\";\r\n\r\nconst getCurrentAudioRequest = () => {\r\n  return {\r\n    type: types.FETCH_CURRENT_AUDIO_REQUEST,\r\n  };\r\n};\r\n\r\nconst setCurrentAudioSuccess = (audioMetaData, index) => {\r\n  return {\r\n    type: types.FETCH_CURRENT_AUDIO_SUCCESS,\r\n    payload: audioMetaData,\r\n    index: index,\r\n  };\r\n};\r\n\r\nconst setCurrentAudioError = (message) => {\r\n  return {\r\n    type: types.FETCH_CURRENT_AUDIO_ERROR,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nconst getAudioListRequest = () => {\r\n  return {\r\n    type: types.FETCH_AUDIO_LIST_REQUEST,\r\n  };\r\n};\r\n\r\nconst setAudioListSuccess = (audioList) => {\r\n  return {\r\n    type: types.FETCH_AUDIO_LIST_SUCCESS,\r\n    payload: audioList,\r\n  };\r\n};\r\n\r\nconst setAudioListError = (message) => {\r\n  return {\r\n    type: types.FETCH_AUDIO_LIST_ERROR,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nconst updateAudioMetaData = (metaData) => {\r\n  if (metaData !== undefined && metaData !== null) {\r\n    let title = metaData.title;\r\n    if (title.length === 0) {\r\n      let pbArray = String(metaData.file_path).split(\"/\");\r\n      metaData.title = pbArray[pbArray.length - 1];\r\n    }\r\n    if (metaData.thumbnail === 0) {\r\n      metaData.thumbnail = \"\";\r\n    }\r\n  }\r\n  return metaData;\r\n};\r\n\r\nconst updateAudioList = (audiolist) => {\r\n  if (audiolist && audiolist.length > 0) {\r\n    for (let i in audiolist) {\r\n      audiolist[i] = updateAudioMetaData(audiolist[i]);\r\n    }\r\n  }\r\n  return audiolist;\r\n};\r\n\r\nconst getAudioList =\r\n  ({ uri }) =>\r\n  (dispatch) => {\r\n    dispatch(getAudioListRequest());\r\n    /*\r\n    if (!window.palm) {\r\n      dispatch(setAudioListSuccess(mockAudioList.audioList.results));\r\n      console.log(mockAudioList.audioList.results);\r\n    } else */ {\r\n      Audio.getAudioList({\r\n        uri: uri,\r\n        onSuccess: (res) => {\r\n          const { returnValue, audioList } = res;\r\n          if (returnValue) {\r\n            dispatch(setAudioListSuccess(updateAudioList(audioList.results)));\r\n          }\r\n        },\r\n        onFailure: (err) => {\r\n          dispatch(setAudioListError(err.errorText));\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\nconst getCurrentAudioMetaData =\r\n  ({ uri, audioIndex }) =>\r\n  (dispatch) => {\r\n    dispatch(getCurrentAudioRequest());\r\n    return new LS2Request().send({\r\n      service: \"luna://com.webos.service.mediaindexer\",\r\n      method: \"getAudioMetadata\",\r\n      parameters: { uri: uri },\r\n      onSuccess: ({ metadata }) => {\r\n        dispatch(\r\n          setCurrentAudioSuccess(updateAudioMetaData(metadata), audioIndex)\r\n        );\r\n      },\r\n      onFailure: (err) => {\r\n        dispatch(setAudioListError(err.errorText));\r\n      },\r\n    });\r\n  };\r\n\r\nexport {\r\n  getCurrentAudioMetaData,\r\n  getCurrentAudioRequest,\r\n  getAudioList,\r\n  getAudioListRequest,\r\n  setCurrentAudioError,\r\n  setCurrentAudioSuccess,\r\n  setAudioListError,\r\n  setAudioListSuccess,\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\actions\\deviceActions.js",["1534"],"import { types } from \"./types\";\r\nimport { Device } from \"../services\";\r\nimport mockDeviceList from \"../../assets/mock/deviceList.json\";\r\n\r\nconst getDeviceListRequest = () => {\r\n  return {\r\n    type: types.FETCH_DEVICE_LIST_REQUEST,\r\n  };\r\n};\r\n\r\nconst setDeviceListSuccess = (deviceList) => {\r\n  return {\r\n    type: types.FETCH_DEVICE_LIST_SUCCESS,\r\n    payload: deviceList,\r\n  };\r\n};\r\n\r\nconst setDeviceListError = (errMessage) => {\r\n  return {\r\n    type: types.FETCH_DEVICE_LIST_ERROR,\r\n    payload: errMessage,\r\n  };\r\n};\r\n\r\nconst getDeviceList =\r\n  ({ subscribe }) =>\r\n  (dispatch) => {\r\n    dispatch(getDeviceListRequest());\r\n    /*\r\n    if(!window.plam){\r\n      dispatch(setDeviceListSuccess(mockDeviceList.pluginList));\r\n    }\r\n    else*/\r\n    {\r\n      Device.getDeviceList({\r\n        subscribe: subscribe,\r\n        onSuccess: (res) => {\r\n          dispatch(setDeviceListSuccess(res.pluginList));\r\n        },\r\n        onFailure: (err) => {\r\n          dispatch(setDeviceListSuccess(err.errorText));\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\nconst setCurrentDevice = (device) => {\r\n  return {\r\n    type: types.SET_CURRENT_DEVICE,\r\n    payload: device,\r\n  };\r\n};\r\n\r\nexport {\r\n  setCurrentDevice,\r\n  getDeviceList,\r\n  getDeviceListRequest,\r\n  setDeviceListSuccess,\r\n  setDeviceListError,\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Skinnable\\Skinnable.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TabLayout\\TabLayout.js",["1535"],"/**\r\n * Provides a Sandstone-themed TabLayout.\r\n *\r\n * @module sandstone/TabLayout\r\n * @exports TabLayout\r\n * @exports Tab\r\n */\r\n\r\nimport {adaptEvent, forward, forwardWithPrevent, forProp, handle} from '@enact/core/handle';\r\nimport kind from '@enact/core/kind';\r\nimport {cap, mapAndFilterChildren} from '@enact/core/util';\r\nimport Spotlight, {getDirection} from '@enact/spotlight';\r\nimport {getTargetByDirectionFromElement} from '@enact/spotlight/src/target';\r\nimport SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\r\nimport {Changeable} from '@enact/ui/Changeable';\r\nimport {Cell, Layout} from '@enact/ui/Layout';\r\nimport {scaleToRem} from '@enact/ui/resolution';\r\nimport Toggleable from '@enact/ui/Toggleable';\r\nimport ViewManager from '@enact/ui/ViewManager';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'ramda/src/compose';\r\nimport React, {Fragment} from 'react';\r\n\r\nimport RefocusDecorator, {getNavigableFilter, getTabsSpotlightId} from './RefocusDecorator';\r\nimport TabGroup from './TabGroup';\r\nimport Tab from './Tab';\r\n\r\nimport componentCss from './TabLayout.module.less';\r\n\r\n/**\r\n * Tabbed Layout component.\r\n *\r\n * Example:\r\n *\r\n * ```jsx\r\n * \t<TabLayout>\r\n * \t\t<Tab title=\"Tab One\">\r\n * \t\t\t<Item>Hello</Item>\r\n * \t\t</Tab>\r\n * \t\t<Tab title=\"Tab Two\">\r\n * \t\t\t<Item>Goodbye</Item>\r\n * \t\t</Tab>\r\n * \t</TabLayout>\r\n * ```\r\n *\r\n * @class TabLayout\r\n * @memberof sandstone/TabLayout\r\n * @ui\r\n * @public\r\n */\r\nconst TabLayoutBase = kind({\r\n\tname: 'TabLayout',\r\n\r\n\tpropTypes: /** @lends sandstone/TabLayout.TabLayout.prototype */ {\r\n\t\t/**\r\n\t\t * Sets where this component should attach its tabs and animations.\r\n\t\t *\r\n\t\t * \"left\" and \"right\" represent true screen left and screen right, while \"start\" represents\r\n\t\t * screen left in LTR and screen right in RTL. \"end\" is the reverse: screen right for LTR\r\n\t\t * and screen left for RTL.\r\n\t\t *\r\n\t\t * @type {('left'|'right'|'start'|'end')}\r\n\t\t * @default 'start'\r\n\t\t * @private\r\n\t\t */\r\n\t\tanchorTo: PropTypes.oneOf(['left', 'right', 'start', 'end']),\r\n\r\n\t\t/**\r\n\t\t * Collection of [Tabs]{@link sandstone/TabLayout.Tab} to render.\r\n\t\t *\r\n\t\t * @type {Node}\r\n\t\t * @public\r\n\t\t */\r\n\t\tchildren: PropTypes.node,\r\n\r\n\t\t/**\r\n\t\t * Collapses the vertical tab list into icons only.\r\n\t\t *\r\n\t\t * Only applies to `orientation=\"vertical\"`.  If the tabs do not include icons, a single\r\n\t\t * collapsed icon will be shown.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @public\r\n\t\t */\r\n\t\tcollapsed: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * Customizes the component by mapping the supplied collection of CSS class names to the\r\n\t\t * corresponding internal elements and states of this component.\r\n\t\t *\r\n\t\t * The following classes are supported:\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @public\r\n\t\t */\r\n\t\tcss: PropTypes.object,\r\n\r\n\t\t'data-spotlight-id': PropTypes.string,\r\n\r\n\t\t/**\r\n\t\t * Specify dimensions for the layout areas.\r\n\t\t *\r\n\t\t * All 4 combinations must me supplied: each of the elements, tabs and content in both\r\n\t\t * collapsed and expanded state.\r\n\t\t *\r\n\t\t * @type {{tabs: {collapsed: Number, normal: Number}, content: {expanded: number, normal: number}}}\r\n\t\t * @default {\r\n\t\t * \ttabs: {\r\n\t\t * \t\tcollapsed: 228,\r\n\t\t * \t\tnormal: 882\r\n\t\t * \t},\r\n\t\t * \tcontent: {\r\n\t\t * \t\texpanded: null,\r\n\t\t * \t\tnormal: null\r\n\t\t * \t}\r\n\t\t * }\r\n\t\t * @private\r\n\t\t */\r\n\t\tdimensions: PropTypes.shape({\r\n\t\t\tcontent: PropTypes.shape({\r\n\t\t\t\texpanded: PropTypes.number,\r\n\t\t\t\tnormal: PropTypes.number\r\n\t\t\t}).isRequired,\r\n\t\t\ttabs: PropTypes.shape({\r\n\t\t\t\tcollapsed: PropTypes.number,\r\n\t\t\t\tnormal: PropTypes.number\r\n\t\t\t}).isRequired\r\n\t\t}),\r\n\r\n\t\t/**\r\n\t\t * The currently selected tab.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t * @public\r\n\t\t */\r\n\t\tindex: PropTypes.number,\r\n\r\n\t\t/**\r\n\t\t * Called when the tabs are collapsed.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\t\tonCollapse: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * Called when the tabs are expanded.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\t\tonExpand: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * Called when a tab is selected\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t*/\r\n\t\tonSelect: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * Called when the tab collapse or expand animation completes.\r\n\t\t *\r\n\t\t * Event payload includes:\r\n\t\t * * `type` - Always set to \"onTabAnimationEnd\"\r\n\t\t * * `collapsed` - `true` when the tabs are collapsed\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\t\tonTabAnimationEnd: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * Orientation of the tabs.\r\n\t\t *\r\n\t\t * Horizontal tabs support a maximum of six tabs.\r\n\t\t *\r\n\t\t * @type {('horizontal'|'vertical')}\r\n\t\t * @default 'vertical'\r\n\t\t * @public\r\n\t\t */\r\n\t\torientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n\r\n\t\t/**\r\n\t\t * Assign a custom size to horizontal tabs.\r\n\t\t *\r\n\t\t * Tabs in the horizontal orientation automatically stretch to fill the available width.\r\n\t\t * Leave this prop blank to use the default auto-sizing behavior.\r\n\t\t * Tabs may also be set to a finite width using this property. This accepts numeric pixel\r\n\t\t * values. Be mindful of the value you provide as values that are too wide will run off the\r\n\t\t * edge of the screen.\r\n\t\t *\r\n\t\t * Only applies to `orientation=\"horizontal\"` at this time.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @public\r\n\t\t */\r\n\t\ttabSize: PropTypes.number\r\n\t},\r\n\r\n\tdefaultProps: {\r\n\t\tanchorTo: 'start',\r\n\t\tdimensions: {\r\n\t\t\ttabs: {\r\n\t\t\t\tcollapsed: 216,\r\n\t\t\t\tnormal: 882\r\n\t\t\t},\r\n\t\t\tcontent: {\r\n\t\t\t\texpanded: null,\r\n\t\t\t\tnormal: null\r\n\t\t\t}\r\n\t\t},\r\n\t\tindex: 0,\r\n\t\torientation: 'vertical'\r\n\t},\r\n\r\n\tstyles: {\r\n\t\tcss: componentCss,\r\n\t\tclassName: 'tabLayout',\r\n\t\tpublicClassNames: ['tabLayout', 'tabs', 'content']\r\n\t},\r\n\r\n\thandlers: {\r\n\t\tonKeyDown: (ev, props) => {\r\n\t\t\tconst {keyCode, target} = ev;\r\n\t\t\tconst {collapsed, orientation, 'data-spotlight-id': spotlightId} = props;\r\n\t\t\tconst direction = getDirection(keyCode);\r\n\r\n\t\t\tif (forwardWithPrevent('onKeyDown', ev, props) && direction && collapsed && orientation === 'vertical' && document.querySelector(`[data-spotlight-id='${spotlightId}']`).contains(target)) {\r\n\t\t\t\tSpotlight.setPointerMode(false);\r\n\t\t\t\tev.preventDefault();\r\n\r\n\t\t\t\tif (Spotlight.move(direction)) {\r\n\t\t\t\t\tev.stopPropagation();\r\n\t\t\t\t} else if (document.querySelector(`[data-spotlight-id='${spotlightId}'] .${componentCss.content}`).contains(target)) {\r\n\t\t\t\t\tSpotlight.set(spotlightId, {navigableFilter: null});\r\n\t\t\t\t\tconst nextTarget = getTargetByDirectionFromElement(direction, target);\r\n\t\t\t\t\tSpotlight.set(spotlightId, {navigableFilter: getNavigableFilter(spotlightId, collapsed)});\r\n\r\n\t\t\t\t\tif (nextTarget && document.querySelector(`.${componentCss.tabs}`).contains(nextTarget)) {\r\n\t\t\t\t\t\tforward('onExpand', ev, props);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tonSelect: handle(\r\n\t\t\tadaptEvent(({selected}) => ({index: selected}), forward('onSelect'))\r\n\t\t),\r\n\t\thandleTabsTransitionEnd: handle(\r\n\t\t\tforward('onTransitionEnd'),\r\n\t\t\tforProp('orientation', 'vertical'),\r\n\t\t\t// Validate the transition is from the root node\r\n\t\t\t(ev) => ev.target.classList.contains(componentCss.tabs),\r\n\t\t\tadaptEvent(\r\n\t\t\t\t(ev, {collapsed}) => ({type: 'onTabAnimationEnd', collapsed: Boolean(collapsed)}),\r\n\t\t\t\tforward('onTabAnimationEnd')\r\n\t\t\t)\r\n\t\t)\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tchildren: ({children}) => mapAndFilterChildren(children, (child) => (\r\n\t\t\t<Fragment>{child.props.children}</Fragment>\r\n\t\t)),\r\n\t\tclassName: ({collapsed, anchorTo, orientation, styler}) => styler.append(\r\n\t\t\t{collapsed: orientation === 'vertical' && collapsed},\r\n\t\t\t`anchor${cap(anchorTo)}`,\r\n\t\t\torientation\r\n\t\t),\r\n\t\tstyle: ({dimensions, orientation, style}) => ({\r\n\t\t\t...style,\r\n\t\t\t'--tablayout-expand-collapse-diff': ((orientation === 'vertical') ? scaleToRem(dimensions.tabs.normal - dimensions.tabs.collapsed) : 0)\r\n\t\t}),\r\n\t\ttabOrientation: ({orientation}) => orientation === 'vertical' ? 'horizontal' : 'vertical',\r\n\t\t// limit to 6 tabs for horizontal orientation\r\n\t\ttabs: ({children, orientation}) => {\r\n\t\t\tconst tabs = mapAndFilterChildren(children, (child) => (\r\n\t\t\t\tObject.keys(child.props)\r\n\t\t\t\t\t.filter((prop) => prop !== 'children' && prop !== 'id')\r\n\t\t\t\t\t.reduce((obj, key) => ({...obj, [key]: child.props[key]}), {})\r\n\t\t\t));\r\n\t\t\treturn orientation === 'horizontal' && tabs.length > 6 ? tabs.slice(0, 6) : tabs;\r\n\t\t}\r\n\t},\r\n\r\n\trender: ({children, collapsed, css, 'data-spotlight-id': spotlightId, dimensions, handleTabsTransitionEnd, index, onCollapse, onExpand, onSelect, orientation, tabOrientation, tabSize, tabs, ...rest}) => {\r\n\t\tdelete rest.anchorTo;\r\n\t\tdelete rest.onTabAnimationEnd;\r\n\r\n\t\tconst contentSize = (collapsed ? dimensions.content.expanded : dimensions.content.normal);\r\n\t\tconst isVertical = orientation === 'vertical';\r\n\r\n\t\t// Props that are shared between both of the rendered TabGroup components\r\n\t\tconst tabGroupProps = {\r\n\t\t\tonFocus: (collapsed ? onExpand : null),\r\n\t\t\tonFocusTab: onSelect,\r\n\t\t\tonSelect,\r\n\t\t\torientation,\r\n\t\t\tselectedIndex: index,\r\n\t\t\ttabs\r\n\t\t};\r\n\r\n\t\t// In vertical orientation, render two sets of tabs, one just icons, one with icons and text.\r\n\t\treturn (\r\n\t\t\t<Layout {...rest} orientation={tabOrientation} data-spotlight-id={spotlightId}>\r\n\t\t\t\t<Cell className={css.tabs} shrink onTransitionEnd={handleTabsTransitionEnd}>\r\n\t\t\t\t\t<TabGroup\r\n\t\t\t\t\t\t{...tabGroupProps}\r\n\t\t\t\t\t\tcollapsed={isVertical}\r\n\t\t\t\t\t\tspotlightId={getTabsSpotlightId(spotlightId, isVertical)}\r\n\t\t\t\t\t\ttabSize={!isVertical ? tabSize : null}\r\n\t\t\t\t\t\tspotlightDisabled={!collapsed && isVertical}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Cell>\r\n\t\t\t\t{isVertical ? <Cell\r\n\t\t\t\t\tclassName={css.tabs + ' ' + css.tabsExpanded}\r\n\t\t\t\t\tsize={dimensions.tabs.normal}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TabGroup\r\n\t\t\t\t\t\t{...tabGroupProps}\r\n\t\t\t\t\t\tspotlightId={getTabsSpotlightId(spotlightId, false)}\r\n\t\t\t\t\t\tspotlightDisabled={collapsed}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Cell> : null}\r\n\t\t\t\t<Cell\r\n\t\t\t\t\tsize={isVertical ? contentSize : null}\r\n\t\t\t\t\tclassName={css.content}\r\n\t\t\t\t\tcomponent={ViewManager}\r\n\t\t\t\t\tindex={index}\r\n\t\t\t\t\tnoAnimation\r\n\t\t\t\t\tonFocus={!collapsed ? onCollapse : null}\r\n\t\t\t\t\torientation={orientation}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Cell>\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n});\r\n\r\nconst TabLayoutDecorator = compose(\r\n\tToggleable({prop: 'collapsed', activate: 'onCollapse', deactivate: 'onExpand'}),\r\n\tChangeable({prop: 'index', change: 'onSelect'}),\r\n\tRefocusDecorator,\r\n\tSpotlightContainerDecorator({\r\n\t\t// using last-focused so we return to the last focused if it exists but fall through to\r\n\t\t// default element if no focus has ocurred yet (e.g. on mount)\r\n\t\tenterTo: 'last-focused',\r\n\t\t// favor the content when collapsed and the tabs otherwise\r\n\t\tdefaultElement: [`.${componentCss.horizontal} .${componentCss.tabs} *`, `.${componentCss.collapsed} .${componentCss.content} *`, `.${componentCss.tabsExpanded} *`]\r\n\t})\r\n);\r\n\r\n// Currently not documenting the base output since it's not exported\r\nconst TabLayout = TabLayoutDecorator(TabLayoutBase);\r\n\r\n/**\r\n * A shortcut to access {@link sandstone/TabLayout.Tab}\r\n *\r\n * @name Tab\r\n * @type {sandstone/TabLayout.Tab}\r\n * @static\r\n * @memberof sandstone/TabLayout.TabLayout\r\n */\r\nTabLayout.Tab = Tab;\r\n\r\nexport default TabLayout;\r\nexport {\r\n\tTabLayout,\r\n\tTabLayoutBase,\r\n\tTabLayoutDecorator,\r\n\tTab\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ThemeDecorator\\fontGenerator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\index.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\util.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Button\\Button.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\$L\\$L.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Heading\\Heading.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\WindowEventable\\WindowEventable.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\index.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\SharedStateDecorator\\SharedStateDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TabLayout\\RefocusDecorator.js",["1536"],"import Spotlight from '@enact/spotlight';\r\nimport {useId} from '@enact/ui/internal/IdProvider';\r\nimport PropTypes from 'prop-types';\r\nimport React, {useLayoutEffect, useEffect, useCallback} from 'react';\r\n\r\nimport css from './TabGroup.module.less';\r\n\r\nfunction getTabsSpotlightId (spotlightId, collapsed) {\r\n\treturn `${spotlightId}-tabs-${collapsed ? 'collapsed' : 'expanded'}`;\r\n}\r\n\r\nfunction getContainerNode (containerId) {\r\n\treturn document.querySelector(`[data-spotlight-id='${containerId}']`);\r\n}\r\n\r\nconst getNavigableFilter = (spotlightId, collapsed) => (elem) => (\r\n\tSpotlight.getPointerMode() || (\r\n\t\t!elem.classList.contains(css.tab) &&\r\n\t\telem.dataset.spotlightId !== getTabsSpotlightId(spotlightId, collapsed)\r\n\t)\r\n);\r\n\r\nconst RefocusDecorator = Wrapped => {\r\n\t// eslint-disable-next-line no-shadow\r\n\tfunction RefocusDecorator ({collapsed, index, onTabAnimationEnd, orientation, spotlightId, ...rest}) {\r\n\t\tconst {generateId} = useId({prefix: 'sand-tablayout-'});\r\n\r\n\t\t// generate an id for the component (and a derived id for the tabs) so we can refocus them\r\n\t\t// generating a different ID by orientation so swapping orientations doesn't clear container\r\n\t\t// config before the new one is mounted\r\n\t\tspotlightId = spotlightId || generateId(orientation || 'vertical');\r\n\r\n\t\tuseLayoutEffect(() => {\r\n\t\t\tif (!Spotlight.getPointerMode() && !Spotlight.isPaused()) {\r\n\t\t\t\tconst current = Spotlight.getCurrent(),\r\n\t\t\t\t\ttabsSpotlightId = getTabsSpotlightId(spotlightId, collapsed),\r\n\t\t\t\t\tcontainerNode = getContainerNode(tabsSpotlightId);\r\n\r\n\t\t\t\tif (!current || containerNode && containerNode.querySelector(`.${css.selected}`) !== current) {\r\n\t\t\t\t\tSpotlight.focus(spotlightId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, [index]);\t// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tSpotlight.set(spotlightId, {\r\n\t\t\t\tnavigableFilter: collapsed && orientation === 'vertical' ? getNavigableFilter(spotlightId, collapsed) : null\r\n\t\t\t});\r\n\t\t}, [collapsed, orientation, spotlightId]);\t// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\t\tconst handleTabAnimationEnd = useCallback((ev) => {\r\n\t\t\tif (onTabAnimationEnd) {\r\n\t\t\t\tonTabAnimationEnd(ev);\r\n\t\t\t}\r\n\r\n\t\t\tif (!collapsed && !Spotlight.getPointerMode() && !Spotlight.isPaused()) {\r\n\t\t\t\tconst tabsSpotlightId = getTabsSpotlightId(spotlightId, collapsed);\r\n\t\t\t\tconst containerNode = getContainerNode(tabsSpotlightId);\r\n\r\n\t\t\t\tif (containerNode && !containerNode.contains(Spotlight.getCurrent())) {\r\n\t\t\t\t\tSpotlight.focus(tabsSpotlightId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}, [collapsed, onTabAnimationEnd, spotlightId]);\r\n\r\n\t\treturn (\r\n\t\t\t<Wrapped\r\n\t\t\t\t{...rest}\r\n\t\t\t\tcollapsed={collapsed}\r\n\t\t\t\tindex={index}\r\n\t\t\t\tonTabAnimationEnd={handleTabAnimationEnd}\r\n\t\t\t\torientation={orientation}\r\n\t\t\t\tspotlightId={spotlightId}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tRefocusDecorator.propTypes = {\r\n\t\tcollapsed: PropTypes.bool,\r\n\t\tindex: PropTypes.number,\r\n\t\tonTabAnimationEnd: PropTypes.func,\r\n\t\torientation: PropTypes.string,\r\n\t\tspotlightId: PropTypes.string\r\n\t};\r\n\r\n\treturn RefocusDecorator;\r\n};\r\n\r\nexport default RefocusDecorator;\r\nexport {\r\n\tgetNavigableFilter,\r\n\tgetTabsSpotlightId,\r\n\tRefocusDecorator\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TabLayout\\TabGroup.js",["1537"],"import handle, {adaptEvent, forProp, forward, not} from '@enact/core/handle';\r\nimport kind from '@enact/core/kind';\r\nimport Spotlight from '@enact/spotlight';\r\nimport SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\r\nimport Group from '@enact/ui/Group';\r\nimport {Cell, Layout} from '@enact/ui/Layout';\r\nimport Toggleable from '@enact/ui/Toggleable';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'ramda/src/compose';\r\nimport React, {useMemo} from 'react';\r\n\r\nimport DebounceDecorator from '../internal/DebounceDecorator';\r\nimport Button from '../DivButton/Button';\r\nimport Skinnable from '../Skinnable';\r\nimport Scroller from '../Scroller';\r\nimport Sprite from '../Sprite';\r\n\r\nimport componentCss from './TabGroup.module.less';\r\n\r\nconst MAX_TABS_BEFORE_SCROLLING = 7;\r\n\r\n// Since Button and Cell both have a `size` prop, TabButton is required to relay the Button.size to Button, rather than Cell.\r\n// eslint-disable-next-line enact/prop-types\r\nconst TabButton = ({buttonSize, ...rest}) => (<Button size={buttonSize} {...rest} css={componentCss} />);\r\n\r\nconst TabBase = kind({\r\n\tname: 'Tab',\r\n\r\n\tpropTypes: {\r\n\t\tcollapsed: PropTypes.bool,\r\n\t\tcss: PropTypes.object,\r\n\t\ticon: PropTypes.string,\r\n\t\tindex: PropTypes.number,\r\n\t\tonFocusTab: PropTypes.func,\r\n\t\tonTabClick: PropTypes.func,\r\n\t\torientation: PropTypes.string,\r\n\t\tselected: PropTypes.bool,\r\n\t\tsize: PropTypes.number,\r\n\t\tsprite: PropTypes.object,\r\n\t\tstopped: PropTypes.bool\r\n\t},\r\n\r\n\tdefaultProps: {\r\n\t\torientation: 'vertical'\r\n\t},\r\n\r\n\tstyles: {\r\n\t\tcss: componentCss,\r\n\t\tclassName: 'tab'\r\n\t},\r\n\r\n\thandlers: {\r\n\t\tonClick: handle(\r\n\t\t\tforward('onClick'),\r\n\t\t\tnot(forProp('disabled', true)),\r\n\t\t\tadaptEvent(\r\n\t\t\t\t(ev, {index}) => ({selected: index}),\r\n\t\t\t\tforward('onTabClick')\r\n\t\t\t)\r\n\t\t),\r\n\t\tonFocus: handle(\r\n\t\t\tforward('onFocus'),\r\n\t\t\tnot(forProp('disabled', true)),\r\n\t\t\t() => !Spotlight.getPointerMode(),\r\n\t\t\tadaptEvent(\r\n\t\t\t\t(ev, {index}) => ({selected: index}),\r\n\t\t\t\tforward('onFocusTab')\r\n\t\t\t)\r\n\t\t)\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tclassName: ({orientation, styler}) => styler.append(orientation),\r\n\t\ticonComponent: ({sprite, stopped}) => {\r\n\t\t\tif (sprite) {\r\n\t\t\t\treturn (<Sprite stopped={stopped} {...sprite} />);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\trender: ({children, collapsed, css, orientation, size, ...rest}) => {\r\n\t\tdelete rest.index;\r\n\t\tdelete rest.onFocusTab;\r\n\t\tdelete rest.onTabClick;\r\n\t\tdelete rest.stopped;\r\n\t\tdelete rest.sprite;\r\n\r\n\t\tif (collapsed) children = null;\r\n\r\n\t\tconst commonProps = {\r\n\t\t\tbackgroundOpacity: 'transparent',\r\n\t\t\tchildren,\r\n\t\t\tcollapsable: true,\r\n\t\t\tcss,\r\n\t\t\tfocusEffect: 'static',\r\n\t\t\tminWidth: false,\r\n\t\t\trole: null\r\n\t\t};\r\n\r\n\t\tswitch (orientation) {\r\n\t\t\t// Horizontal Cell sizing can auto-size width or be set to a finite value, stretching the Button.\r\n\t\t\tcase 'horizontal': {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t{...rest}\r\n\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\tcomponent={TabButton}\r\n\t\t\t\t\t\t{...commonProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tcase 'vertical': {\r\n\t\t\t\t// Vertical sizing depends on Button establishing the dimensions of the Cell.\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t{...rest}\r\n\t\t\t\t\t\t{...commonProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nconst Tab = Toggleable({prop: 'stopped', activate: 'onBlur', deactivate: 'onFocus'}, Skinnable(TabBase));\r\n\r\nconst GroupComponent = SpotlightContainerDecorator(\r\n\t{\r\n\t\t// using default-element so we always land on the selected tab in order to avoid changing\r\n\t\t// the view when re-entering the tab group\r\n\t\tdefaultElement: `.${componentCss.selected}`,\r\n\t\tenterTo: 'default-element',\r\n\t\tpartition: true,\r\n\t\t// When swapping from unscrolled to scrolled tab group, the container config is lost so this\r\n\t\t// preserves it across unmounts / remounts\r\n\t\tpreserveId: true\r\n\t},\r\n\tGroup\r\n);\r\n\r\n/**\r\n * A group of tabs\r\n *\r\n * @class TabGroup\r\n * @memberof sandstone/TabLayout\r\n * @ui\r\n * @private\r\n */\r\nconst TabGroupBase = kind({\r\n\tname: 'TabGroup',\r\n\r\n\tfunctional: true,\r\n\r\n\tpropTypes: /** @lends sandstone/TabGroup.TabGroup.prototype */ {\r\n\t\ttabs: PropTypes.array.isRequired,\r\n\t\tcollapsed: PropTypes.bool,\r\n\t\tcss: PropTypes.object,\r\n\t\tonBlur: PropTypes.func,\r\n\t\tonBlurList: PropTypes.func,\r\n\t\tonFocus: PropTypes.func,\r\n\t\tonFocusTab: PropTypes.func,\r\n\t\tonSelect: PropTypes.func,\r\n\t\torientation: PropTypes.string,\r\n\t\tselectedIndex: PropTypes.number,\r\n\t\tspotlightDisabled: PropTypes.bool,\r\n\t\tspotlightId: PropTypes.string,\r\n\t\ttabSize: PropTypes.number\r\n\t},\r\n\r\n\tstyles: {\r\n\t\tcss: componentCss,\r\n\t\tclassName: 'tabGroup'\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tclassName: ({collapsed, orientation, styler}) => styler.append({collapsed}, orientation),\r\n\t\t// check if there's no tab icons\r\n\t\tnoIcons: ({collapsed, orientation, tabs}) => orientation === 'vertical' && collapsed && tabs.filter((tab) => (!tab.icon && !tab.sprite)).length,\r\n\t\ttabsDisabled: ({tabs}) => tabs.find(tab => tab && !tab.disabled) == null,\r\n\t\ttabsSpotlightDisabled: ({spotlightDisabled, tabs}) => spotlightDisabled || tabs.find(tab => tab && !tab.spotlightDisabled) == null\r\n\t},\r\n\r\n\trender: ({collapsed, noIcons, onBlur, onBlurList, onFocus, onFocusTab, onSelect, orientation, selectedIndex, spotlightId, spotlightDisabled, tabs, tabSize, tabsDisabled, tabsSpotlightDisabled, ...rest}) => {\r\n\t\tdelete rest.children;\r\n\r\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\r\n\t\tconst itemProps = useMemo(() => ({collapsed, orientation, size: tabSize}), [collapsed, orientation, tabSize]);\r\n\t\t// eslint-disable-next-line react-hooks/rules-of-hooks\r\n\t\tconst children = useMemo(() => tabs.map(tab => {\r\n\t\t\tif (tab) {\r\n\t\t\t\t// eslint-disable-next-line no-shadow\r\n\t\t\t\tconst {icon, title, tabKey, sprite, ...rest} = tab;\r\n\t\t\t\tconst key = tabKey || tabKey === 0 ? tabKey : `tabs_${title + (typeof icon === 'string' ? icon : '')}`;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tchildren: title,\r\n\t\t\t\t\tdefaultStopped: Boolean(sprite),\r\n\t\t\t\t\ticon,\r\n\t\t\t\t\tkey,\r\n\t\t\t\t\tonFocusTab,\r\n\t\t\t\t\tsprite,\r\n\t\t\t\t\t...rest\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}).filter(tab => tab != null), [onFocusTab, tabs]);\r\n\r\n\t\tconst isHorizontal = orientation === 'horizontal';\r\n\t\tconst groupComponent = (isHorizontal ? Layout : 'div'); // Only horizontal needs the arrangement capabilities of `Layout`\r\n\t\t// Only vertical with more than MAX_TABS should use scroller\r\n\t\tconst useScroller = (!isHorizontal && children.length > MAX_TABS_BEFORE_SCROLLING);\r\n\t\tconst scrollerProps = useScroller ? {\r\n\t\t\thorizontalScrollbar: 'hidden',\r\n\t\t\tverticalScrollbar: 'hidden'\r\n\t\t} : null;\r\n\t\tconst Component = useScroller ? Scroller : 'div';\r\n\r\n\t\treturn (\r\n\t\t\t<Component\r\n\t\t\t\t{...rest}\r\n\t\t\t\tonBlur={onBlur}\r\n\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t{...scrollerProps}\r\n\t\t\t>\r\n\t\t\t\t{noIcons ? (\r\n\t\t\t\t\t<TabBase\r\n\t\t\t\t\t\ticon=\"list\"\r\n\t\t\t\t\t\tcollapsed\r\n\t\t\t\t\t\tdisabled={tabsDisabled}\r\n\t\t\t\t\t\tonSpotlightDisappear={onBlurList}\r\n\t\t\t\t\t\tspotlightDisabled={tabsSpotlightDisabled}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<GroupComponent\r\n\t\t\t\t\t\tchildComponent={Tab}\r\n\t\t\t\t\t\tclassName={componentCss.tabs}\r\n\t\t\t\t\t\tcomponent={groupComponent}\r\n\t\t\t\t\t\tindexProp=\"index\"\r\n\t\t\t\t\t\titemProps={itemProps}\r\n\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\torientation={orientation}\r\n\t\t\t\t\t\tselect=\"radio\"\r\n\t\t\t\t\t\tselected={selectedIndex}\r\n\t\t\t\t\t\tselectedProp=\"selected\"\r\n\t\t\t\t\t\tspotlightId={spotlightId}\r\n\t\t\t\t\t\tspotlightDisabled={spotlightDisabled}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</GroupComponent>\r\n\t\t\t\t)}\r\n\t\t\t\t{isHorizontal ? <hr className={componentCss.horizontalLine} /> : null}\r\n\t\t\t</Component>\r\n\t\t);\r\n\t}\r\n});\r\n\r\nconst TabGroupDecorator = compose(\r\n\tDebounceDecorator({cancel: 'onBlur', debounce: 'onFocusTab', delay: 300})\r\n);\r\n\r\n// Only documenting TabGroup since base is not useful for extension as-is\r\nconst TabGroup = TabGroupDecorator(TabGroupBase);\r\n\r\nexport default TabGroup;\r\nexport {\r\n\tTabGroup\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TabLayout\\Tab.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\CancelDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\FloatingLayerIdProvider.js",["1538"],"import hoc from '@enact/core/hoc';\r\nimport {useFloatingLayer} from '@enact/ui/FloatingLayer';\r\nimport React from 'react';\r\n\r\nconst defaultConfig = {};\r\n\r\nconst FloatingLayerIdProvider = hoc(defaultConfig, (config, Wrapped) => {\r\n\t// eslint-disable-next-line no-shadow\r\n\treturn function FloatingLayerIdProvider (props) {\r\n\t\tconst {floatingLayerId} = useFloatingLayer();\r\n\r\n\t\treturn (\r\n\t\t\t<Wrapped\r\n\t\t\t\t{...props}\r\n\t\t\t\tfloatingLayerId={floatingLayerId}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n});\r\n\r\nexport default FloatingLayerIdProvider;\r\nexport {FloatingLayerIdProvider};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\NavigationButton.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\Viewport.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\useAutoFocus.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\PopupDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\Arrangers.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ImageItem\\index.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\VirtualList.js",["1539"],"/**\r\n * Provides Sandstone-themed virtual list components and behaviors.\r\n *\r\n * @module sandstone/VirtualList\r\n * @exports VirtualGridList\r\n * @exports VirtualList\r\n */\r\n\r\nimport {I18nContextDecorator} from '@enact/i18n/I18nDecorator';\r\nimport SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';\r\nimport {ResizeContext} from '@enact/ui/Resizable';\r\nimport {gridListItemSizeShape, itemSizesShape, VirtualListBasic as UiVirtualListBasic} from '@enact/ui/VirtualList';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport warning from 'warning';\r\n\r\nimport useScroll from '../useScroll';\r\nimport Scrollbar from '../useScroll/Scrollbar';\r\nimport Skinnable from '../Skinnable';\r\n\r\nimport {useThemeVirtualList} from './useThemeVirtualList';\r\n\r\nconst nop = () => {};\r\n\r\n/**\r\n * A Sandstone-styled scrollable and spottable virtual list component.\r\n *\r\n * @class VirtualList\r\n * @memberof sandstone/VirtualList\r\n * @extends ui/VirtualList.VirtualListBasic\r\n * @ui\r\n * @public\r\n */\r\nlet VirtualList = ({itemSize, ...rest}) => {\r\n\tconst props = itemSize && itemSize.minSize ?\r\n\t\t{\r\n\t\t\titemSize: itemSize.minSize,\r\n\t\t\titemSizes: itemSize.size\r\n\t\t} :\r\n\t\t{\r\n\t\t\titemSize\r\n\t\t};\r\n\r\n\twarning(\r\n\t\t!rest.itemSizes || !rest.cbScrollTo,\r\n\t\t'VirtualList with `minSize` in `itemSize` prop does not support `cbScrollTo` prop'\r\n\t);\r\n\r\n\t// Hooks\r\n\r\n\tconst {\r\n\t\t// Variables\r\n\t\tscrollContentWrapper: ScrollContentWrapper,\r\n\t\tscrollContentHandle,\r\n\t\tisHorizontalScrollbarVisible,\r\n\t\tisVerticalScrollbarVisible,\r\n\r\n\t\t// Child Props\r\n\t\tresizeContextProps,\r\n\t\tscrollContainerProps,\r\n\t\tscrollContentWrapperProps,\r\n\t\tscrollContentProps,\r\n\t\tverticalScrollbarProps,\r\n\t\thorizontalScrollbarProps\r\n\t} = useScroll({...rest, ...props});\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\t...scrollContentWrapperRest\r\n\t} = scrollContentWrapperProps;\r\n\r\n\tconst themeScrollContentProps = useThemeVirtualList({...scrollContentProps, className: classnames(className, scrollContentProps.className)});\r\n\r\n\treturn (\r\n\t\t<ResizeContext.Provider {...resizeContextProps}>\r\n\t\t\t<ScrollContentWrapper {...scrollContainerProps} {...scrollContentWrapperRest}>\r\n\t\t\t\t<UiVirtualListBasic {...themeScrollContentProps} ref={scrollContentHandle} />\r\n\t\t\t\t{isVerticalScrollbarVisible ? <Scrollbar {...verticalScrollbarProps} /> : null}\r\n\t\t\t\t{isHorizontalScrollbarVisible ? <Scrollbar {...horizontalScrollbarProps} /> : null}\r\n\t\t\t</ScrollContentWrapper>\r\n\t\t</ResizeContext.Provider>\r\n\t);\r\n};\r\n\r\nVirtualList.displayName = 'VirtualList';\r\n\r\nVirtualList.propTypes = /** @lends sandstone/VirtualList.VirtualList.prototype */ {\r\n\t/**\r\n\t * Size of an item for the VirtualList; valid value is a number generally.\r\n\t * For different item size, value is an object that has `minSize`\r\n\t * and `size` as properties.\r\n\t * If the direction for the list is vertical, itemSize means the height of an item.\r\n\t * For horizontal, it means the width of an item.\r\n\t *\r\n\t * Usage:\r\n\t * ```\r\n\t * <VirtualList itemSize={ri.scale(144)} />\r\n\t * ```\r\n\t *\r\n\t * @type {Number|ui/VirtualList.itemSizesShape}\r\n\t * @required\r\n\t * @public\r\n\t */\r\n\titemSize: PropTypes.oneOfType([PropTypes.number, itemSizesShape]).isRequired,\r\n\r\n\t/**\r\n\t * A callback function that receives a reference to the `scrollTo` feature.\r\n\t *\r\n\t * Once received, the `scrollTo` method can be called as an imperative interface.\r\n\t *\r\n\t * The `scrollTo` function accepts the following parameters:\r\n\t * - {position: {x, y}} - Pixel value for x and/or y position\r\n\t * - {align} - Where the scroll area should be aligned. Values are:\r\n\t *   `'left'`, `'right'`, `'top'`, `'bottom'`,\r\n\t *   `'topleft'`, `'topright'`, `'bottomleft'`, and `'bottomright'`.\r\n\t * - {index} - Index of specific item. (`0` or positive integer)\r\n\t *   This option is available for only `VirtualList` kind.\r\n\t * - {node} - Node to scroll into view\r\n\t * - {animate} - When `true`, scroll occurs with animation. When `false`, no\r\n\t *   animation occurs.\r\n\t * - {focus} - When `true`, attempts to focus item after scroll. Only valid when scrolling\r\n\t *   by `index` or `node`.\r\n\t * > Note: Only specify one of: `position`, `align`, `index` or `node`\r\n\t *\r\n\t * Example:\r\n\t * ```\r\n\t *\t// If you set cbScrollTo prop like below;\r\n\t *\tcbScrollTo: (fn) => {this.scrollTo = fn;}\r\n\t *\t// You can simply call like below;\r\n\t *\tthis.scrollTo({align: 'top'}); // scroll to the top\r\n\t * ```\r\n\t *\r\n\t * @type {Function}\r\n\t * @public\r\n\t */\r\n\tcbScrollTo: PropTypes.func,\r\n\r\n\t/**\r\n\t * This is set to `true` by SpotlightContainerDecorator\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @private\r\n\t */\r\n\t'data-spotlight-container': PropTypes.bool,\r\n\r\n\t/**\r\n\t * `false` if the content of the list could get focus\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @private\r\n\t */\r\n\t'data-spotlight-container-disabled': PropTypes.bool,\r\n\r\n\t/**\r\n\t * This is passed onto the wrapped component to allow\r\n\t * it to customize the spotlight container for its use case.\r\n\t *\r\n\t * @type {String}\r\n\t * @private\r\n\t */\r\n\t'data-spotlight-id': PropTypes.string,\r\n\r\n\t/**\r\n\t * The layout direction of the list.\r\n\t *\r\n\t * @type {('horizontal'|'vertical')}\r\n\t * @default 'vertical'\r\n\t * @public\r\n\t */\r\n\tdirection: PropTypes.oneOf(['horizontal', 'vertical']),\r\n\r\n\t/**\r\n\t * Specifies how to show horizontal scrollbar.\r\n\t *\r\n\t * @type {('auto'|'visible'|'hidden')}\r\n\t * @default 'auto'\r\n\t * @public\r\n\t */\r\n\thorizontalScrollbar: PropTypes.oneOf(['auto', 'visible', 'hidden']),\r\n\r\n\t/**\r\n\t * Sets the hint string read when focusing the scroll thumb in the horizontal scroll bar.\r\n\t *\r\n\t * @type {String}\r\n\t * @default $L('scroll up or down with up down button')\r\n\t * @public\r\n\t */\r\n\thorizontalScrollThumbAriaLabel: PropTypes.string,\r\n\r\n\t/**\r\n\t * Unique identifier for the component.\r\n\t *\r\n\t * When defined and when the `VirtualList` is within a [Panel]{@link sandstone/Panels.Panel},\r\n\t * the `VirtualList` will store its scroll position and restore that position when returning to\r\n\t * the `Panel`.\r\n\t *\r\n\t * @type {String}\r\n\t * @public\r\n\t */\r\n\tid: PropTypes.string,\r\n\r\n\t/**\r\n\t * Prop to check if horizontal Scrollbar exists or not.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @private\r\n\t */\r\n\tisHorizontalScrollbarVisible: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Prop to check if vertical Scrollbar exists or not.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @private\r\n\t */\r\n\tisVerticalScrollbarVisible: PropTypes.bool,\r\n\r\n\t/**\r\n\t * The array for individually sized items.\r\n\t *\r\n\t * @type {Number[]}\r\n\t * @private\r\n\t */\r\n\titemSizes: PropTypes.arrayOf(PropTypes.number),\r\n\r\n\t/**\r\n\t * Removes affordance area on the list.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @private\r\n\t */\r\n\tnoAffordance: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Prevents scroll by dragging or flicking on the list.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @private\r\n\t */\r\n\tnoScrollByDrag: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Prevents scroll by wheeling on the list.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @public\r\n\t */\r\n\tnoScrollByWheel: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Called when scrolling.\r\n\t *\r\n\t * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\r\n\t * It is not recommended to set this prop since it can cause performance degradation.\r\n\t * Use `onScrollStart` or `onScrollStop` instead.\r\n\t *\r\n\t * @type {Function}\r\n\t * @param {Object} event\r\n\t * @param {Number} event.scrollLeft Scroll left value.\r\n\t * @param {Number} event.scrollTop Scroll top value.\r\n\t * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\r\n\t * @public\r\n\t */\r\n\tonScroll: PropTypes.func,\r\n\r\n\t/**\r\n\t * Called when scroll starts.\r\n\t *\r\n\t * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\r\n\t * You can get firstVisibleIndex and lastVisibleIndex from VirtualList with `moreInfo`.\r\n\t *\r\n\t * Example:\r\n\t * ```\r\n\t * onScrollStart = ({scrollLeft, scrollTop, moreInfo}) => {\r\n\t *     const {firstVisibleIndex, lastVisibleIndex} = moreInfo;\r\n\t *     // do something with firstVisibleIndex and lastVisibleIndex\r\n\t * }\r\n\t *\r\n\t * render = () => (\r\n\t *     <VirtualList\r\n\t *         ...\r\n\t *         onScrollStart={this.onScrollStart}\r\n\t *         ...\r\n\t *     />\r\n\t * )\r\n\t * ```\r\n\t *\r\n\t * @type {Function}\r\n\t * @param {Object} event\r\n\t * @param {Number} event.scrollLeft Scroll left value.\r\n\t * @param {Number} event.scrollTop Scroll top value.\r\n\t * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\r\n\t * @public\r\n\t */\r\n\tonScrollStart: PropTypes.func,\r\n\r\n\t/**\r\n\t * Called when scroll stops.\r\n\t *\r\n\t * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\r\n\t * You can get firstVisibleIndex and lastVisibleIndex from VirtualList with `moreInfo`.\r\n\t *\r\n\t * Example:\r\n\t * ```\r\n\t * onScrollStop = ({scrollLeft, scrollTop, moreInfo}) => {\r\n\t *     const {firstVisibleIndex, lastVisibleIndex} = moreInfo;\r\n\t *     // do something with firstVisibleIndex and lastVisibleIndex\r\n\t * }\r\n\t *\r\n\t * render = () => (\r\n\t *     <VirtualList\r\n\t *         ...\r\n\t *         onScrollStop={this.onScrollStop}\r\n\t *         ...\r\n\t *     />\r\n\t * )\r\n\t * ```\r\n\t *\r\n\t * @type {Function}\r\n\t * @param {Object} event\r\n\t * @param {Number} event.scrollLeft Scroll left value.\r\n\t * @param {Number} event.scrollTop Scroll top value.\r\n\t * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\r\n\t * @public\r\n\t */\r\n\tonScrollStop: PropTypes.func,\r\n\r\n\t/**\r\n\t * Specifies overscroll effects shows on which type of inputs.\r\n\t *\r\n\t * @type {Object}\r\n\t * @default {\r\n\t *\tarrowKey: false,\r\n\t *\tdrag: false,\r\n\t *\tpageKey: false,\r\n\t *\ttrack: false,\r\n\t *\twheel: true\r\n\t * }\r\n\t * @private\r\n\t */\r\n\toverscrollEffectOn: PropTypes.shape({\r\n\t\tarrowKey: PropTypes.bool,\r\n\t\tdrag: PropTypes.bool,\r\n\t\tpageKey: PropTypes.bool,\r\n\t\ttrack: PropTypes.bool,\r\n\t\twheel: PropTypes.bool\r\n\t}),\r\n\r\n\t/**\r\n\t * When `true`, the list will scroll by page. Otherwise the list will scroll by item.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @private\r\n\t */\r\n\tpageScroll: PropTypes.bool,\r\n\r\n\t/**\r\n\t * The ARIA role for the list.\r\n\t *\r\n\t * @type {String}\r\n\t * @default 'list'\r\n\t * @public\r\n\t */\r\n\trole: PropTypes.string,\r\n\r\n\t/**\r\n\t * Specifies how to scroll.\r\n\t *\r\n\t * Valid values are:\r\n\t * * `'translate'`,\r\n\t * * `'native'`.\r\n\t *\r\n\t * @type {String}\r\n\t * @default 'native'\r\n\t * @public\r\n\t */\r\n\tscrollMode: PropTypes.string,\r\n\r\n\t/**\r\n\t * Spotlight Id.\r\n\t *\r\n\t * @type {String}\r\n\t * @private\r\n\t */\r\n\tspotlightId: PropTypes.string,\r\n\r\n\t/**\r\n\t * Specifies how to show vertical scrollbar.\r\n\t *\r\n\t * Valid values are:\r\n\t * * `'auto'`,\r\n\t * * `'visible'`, and\r\n\t * * `'hidden'`.\r\n\t *\r\n\t * @type {('auto'|'visible'|'hidden')}\r\n\t * @default 'auto'\r\n\t * @public\r\n\t */\r\n\tverticalScrollbar: PropTypes.oneOf(['auto', 'visible', 'hidden']),\r\n\r\n\t/**\r\n\t * Sets the hint string read when focusing the scroll thumb in the vertical scroll bar.\r\n\t *\r\n\t * @type {String}\r\n\t * @default $L('scroll left or right with left right button')\r\n\t * @public\r\n\t */\r\n\tverticalScrollThumbAriaLabel: PropTypes.string,\r\n\r\n\t/**\r\n\t * When it's `true` and the spotlight focus cannot move to the given direction anymore by 5-way keys,\r\n\t * a list is scrolled with an animation to the other side and the spotlight focus moves in wraparound manner.\r\n\t *\r\n\t * When it's `'noAnimation'`, the spotlight focus moves in wraparound manner as same as when it's `true`\r\n\t * except that a list is scrolled without an animation.\r\n\t *\r\n\t * Valid values are:\r\n\t * * `false`,\r\n\t * * `true`, and\r\n\t * * `'noAnimation'`\r\n\t * @type {Boolean|'noAnimation'}\r\n\t * @default false\r\n\t * @public\r\n\t */\r\n\twrap: PropTypes.oneOfType([\r\n\t\tPropTypes.bool,\r\n\t\tPropTypes.oneOf(['noAnimation'])\r\n\t])\r\n};\r\n\r\nVirtualList = Skinnable(\r\n\tSpotlightContainerDecorator(\r\n\t\t{\r\n\t\t\toverflow: true,\r\n\t\t\tpreserveId: true,\r\n\t\t\trestrict: 'self-first'\r\n\t\t},\r\n\t\tI18nContextDecorator(\r\n\t\t\t{rtlProp: 'rtl'},\r\n\t\t\tVirtualList\r\n\t\t)\r\n\t)\r\n);\r\n\r\nVirtualList.defaultProps = {\r\n\t'data-spotlight-container-disabled': false,\r\n\tcbScrollTo: nop,\r\n\tdirection: 'vertical',\r\n\thorizontalScrollbar: 'auto',\r\n\tnoAffordance: false,\r\n\tnoScrollByDrag: false,\r\n\tnoScrollByWheel: false,\r\n\tonScroll: nop,\r\n\tonScrollStart: nop,\r\n\tonScrollStop: nop,\r\n\toverscrollEffectOn: {\r\n\t\tarrowKey: false,\r\n\t\tdrag: false,\r\n\t\tpageKey: false,\r\n\t\ttrack: false,\r\n\t\twheel: true\r\n\t},\r\n\tpageScroll: false,\r\n\trole: 'list',\r\n\tscrollMode: 'native',\r\n\tverticalScrollbar: 'auto',\r\n\twrap: false\r\n};\r\n\r\n/**\r\n * A Sandstone-styled scrollable and spottable virtual grid list component.\r\n *\r\n * @class VirtualGridList\r\n * @memberof sandstone/VirtualList\r\n * @extends ui/VirtualList.VirtualListBasic\r\n * @ui\r\n * @public\r\n */\r\nlet VirtualGridList = (props) => {\r\n\tconst {\r\n\t\t// Variables\r\n\t\tscrollContentWrapper: ScrollContentWrapper,\r\n\t\tscrollContentHandle,\r\n\t\tisHorizontalScrollbarVisible,\r\n\t\tisVerticalScrollbarVisible,\r\n\r\n\t\t// Child Props\r\n\t\tresizeContextProps,\r\n\t\tscrollContainerProps,\r\n\t\tscrollContentWrapperProps,\r\n\t\tscrollContentProps,\r\n\t\tverticalScrollbarProps,\r\n\t\thorizontalScrollbarProps\r\n\t} = useScroll(props);\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\t...scrollContentWrapperRest\r\n\t} = scrollContentWrapperProps;\r\n\r\n\tconst themeScrollContentProps = useThemeVirtualList({...scrollContentProps, className: classnames(className, scrollContentProps.className)});\r\n\r\n\treturn (\r\n\t\t<ResizeContext.Provider {...resizeContextProps}>\r\n\t\t\t<ScrollContentWrapper {...scrollContainerProps} {...scrollContentWrapperRest}>\r\n\t\t\t\t<UiVirtualListBasic {...themeScrollContentProps} ref={scrollContentHandle} />\r\n\t\t\t\t{isVerticalScrollbarVisible ? <Scrollbar {...verticalScrollbarProps} /> : null}\r\n\t\t\t\t{isHorizontalScrollbarVisible ? <Scrollbar {...horizontalScrollbarProps} /> : null}\r\n\t\t\t</ScrollContentWrapper>\r\n\t\t</ResizeContext.Provider>\r\n\t);\r\n};\r\n\r\nVirtualGridList.displayName = 'VirtualGridList';\r\n\r\nVirtualGridList.propTypes = /** @lends sandstone/VirtualList.VirtualGridList.prototype */ {\r\n\t/**\r\n\t * Size of an item for the VirtualGridList; valid value is an object that has `minWidth`\r\n\t * and `minHeight` as properties.\r\n\t *\r\n\t * Usage:\r\n\t * ```\r\n\t * <VirtualGridList\r\n\t * \titemSize={{\r\n\t * \t\tminWidth: ri.scale(360),\r\n\t * \t\tminHeight: ri.scale(540)\r\n\t * \t}}\r\n\t * />\r\n\t * ```\r\n\t *\r\n\t * @type {ui/VirtualList.gridListItemSizeShape}\r\n\t * @required\r\n\t * @public\r\n\t */\r\n\titemSize: gridListItemSizeShape.isRequired,\r\n\r\n\t/**\r\n\t * A callback function that receives a reference to the `scrollTo` feature.\r\n\t *\r\n\t * Once received, the `scrollTo` method can be called as an imperative interface.\r\n\t *\r\n\t * The `scrollTo` function accepts the following parameters:\r\n\t * - {position: {x, y}} - Pixel value for x and/or y position\r\n\t * - {align} - Where the scroll area should be aligned. Values are:\r\n\t *   `'left'`, `'right'`, `'top'`, `'bottom'`,\r\n\t *   `'topleft'`, `'topright'`, `'bottomleft'`, and `'bottomright'`.\r\n\t * - {index} - Index of specific item. (`0` or positive integer)\r\n\t *   This option is available for only `VirtualList` kind.\r\n\t * - {node} - Node to scroll into view\r\n\t * - {animate} - When `true`, scroll occurs with animation. When `false`, no\r\n\t *   animation occurs.\r\n\t * - {focus} - When `true`, attempts to focus item after scroll. Only valid when scrolling\r\n\t *   by `index` or `node`.\r\n\t * > Note: Only specify one of: `position`, `align`, `index` or `node`\r\n\t *\r\n\t * Example:\r\n\t * ```\r\n\t *\t// If you set cbScrollTo prop like below;\r\n\t *\tcbScrollTo: (fn) => {this.scrollTo = fn;}\r\n\t *\t// You can simply call like below;\r\n\t *\tthis.scrollTo({align: 'top'}); // scroll to the top\r\n\t * ```\r\n\t *\r\n\t * @type {Function}\r\n\t * @public\r\n\t */\r\n\tcbScrollTo: PropTypes.func,\r\n\r\n\t/**\r\n\t * This is set to `true` by SpotlightContainerDecorator\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @private\r\n\t */\r\n\t'data-spotlight-container': PropTypes.bool,\r\n\r\n\t/**\r\n\t * `false` if the content of the list could get focus\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @private\r\n\t */\r\n\t'data-spotlight-container-disabled': PropTypes.bool,\r\n\r\n\t/**\r\n\t * This is passed onto the wrapped component to allow\r\n\t * it to customize the spotlight container for its use case.\r\n\t *\r\n\t * @type {String}\r\n\t * @private\r\n\t */\r\n\t'data-spotlight-id': PropTypes.string,\r\n\r\n\t/**\r\n\t * The layout direction of the list.\r\n\t *\r\n\t * @type {('horizontal'|'vertical')}\r\n\t * @default 'vertical'\r\n\t * @public\r\n\t */\r\n\tdirection: PropTypes.oneOf(['horizontal', 'vertical']),\r\n\r\n\t/**\r\n\t * Specifies how to show horizontal scrollbar.\r\n\t *\r\n\t * @type {('auto'|'visible'|'hidden')}\r\n\t * @default 'auto'\r\n\t * @public\r\n\t */\r\n\thorizontalScrollbar: PropTypes.oneOf(['auto', 'visible', 'hidden']),\r\n\r\n\t/**\r\n\t * Sets the hint string read when focusing the scroll thumb in the horizontal scroll bar.\r\n\t *\r\n\t * @type {String}\r\n\t * @default $L('scroll up or down with up down button')\r\n\t * @public\r\n\t */\r\n\thorizontalScrollThumbAriaLabel: PropTypes.string,\r\n\r\n\t/**\r\n\t * Unique identifier for the component.\r\n\t *\r\n\t * When defined and when the `VirtualGridList` is within a [Panel]{@link sandstone/Panels.Panel},\r\n\t * the `VirtualGridList` will store its scroll position and restore that position when returning to\r\n\t * the `Panel`.\r\n\t *\r\n\t * @type {String}\r\n\t * @public\r\n\t */\r\n\tid: PropTypes.string,\r\n\r\n\t/**\r\n\t * Prop to check if horizontal Scrollbar exists or not.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @private\r\n\t */\r\n\tisHorizontalScrollbarVisible: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Prop to check if vertical Scrollbar exists or not.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @private\r\n\t */\r\n\tisVerticalScrollbarVisible: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Removes affordance area on the list.\r\n\t * Set this to `true` only if the item needs to stick to the bottom for vertical direction,\r\n\t * to the right for horizontal direction, when scrolling by keys.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @public\r\n\t */\r\n\tnoAffordance: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Prevents scroll by dragging or flicking on the list.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @private\r\n\t */\r\n\tnoScrollByDrag: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Prevents scroll by wheeling on the list.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @public\r\n\t */\r\n\tnoScrollByWheel: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Called when scrolling.\r\n\t *\r\n\t * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\r\n\t * It is not recommended to set this prop since it can cause performance degradation.\r\n\t * Use `onScrollStart` or `onScrollStop` instead.\r\n\t *\r\n\t * @type {Function}\r\n\t * @param {Object} event\r\n\t * @param {Number} event.scrollLeft Scroll left value.\r\n\t * @param {Number} event.scrollTop Scroll top value.\r\n\t * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\r\n\t * @public\r\n\t */\r\n\tonScroll: PropTypes.func,\r\n\r\n\t/**\r\n\t * Called when scroll starts.\r\n\t *\r\n\t * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\r\n\t * You can get firstVisibleIndex and lastVisibleIndex from VirtualGridList with `moreInfo`.\r\n\t *\r\n\t * Example:\r\n\t * ```\r\n\t * onScrollStart = ({scrollLeft, scrollTop, moreInfo}) => {\r\n\t *     const {firstVisibleIndex, lastVisibleIndex} = moreInfo;\r\n\t *     // do something with firstVisibleIndex and lastVisibleIndex\r\n\t * }\r\n\t *\r\n\t * render = () => (\r\n\t *     <VirtualGridList\r\n\t *         ...\r\n\t *         onScrollStart={this.onScrollStart}\r\n\t *         ...\r\n\t *     />\r\n\t * )\r\n\t * ```\r\n\t *\r\n\t * @type {Function}\r\n\t * @param {Object} event\r\n\t * @param {Number} event.scrollLeft Scroll left value.\r\n\t * @param {Number} event.scrollTop Scroll top value.\r\n\t * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\r\n\t * @public\r\n\t */\r\n\tonScrollStart: PropTypes.func,\r\n\r\n\t/**\r\n\t * Called when scroll stops.\r\n\t *\r\n\t * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\r\n\t * You can get firstVisibleIndex and lastVisibleIndex from VirtualGridList with `moreInfo`.\r\n\t *\r\n\t * Example:\r\n\t * ```\r\n\t * onScrollStop = ({scrollLeft, scrollTop, moreInfo}) => {\r\n\t *     const {firstVisibleIndex, lastVisibleIndex} = moreInfo;\r\n\t *     // do something with firstVisibleIndex and lastVisibleIndex\r\n\t * }\r\n\t *\r\n\t * render = () => (\r\n\t *     <VirtualGridList\r\n\t *         ...\r\n\t *         onScrollStop={this.onScrollStop}\r\n\t *         ...\r\n\t *     />\r\n\t * )\r\n\t * ```\r\n\t *\r\n\t * @type {Function}\r\n\t * @param {Object} event\r\n\t * @param {Number} event.scrollLeft Scroll left value.\r\n\t * @param {Number} event.scrollTop Scroll top value.\r\n\t * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\r\n\t * @public\r\n\t */\r\n\tonScrollStop: PropTypes.func,\r\n\r\n\t/**\r\n\t * Specifies overscroll effects shows on which type of inputs.\r\n\t *\r\n\t * @type {Object}\r\n\t * @default {\r\n\t *\tarrowKey: false,\r\n\t *\tdrag: false,\r\n\t *\tpageKey: false,\r\n\t *\ttrack: false,\r\n\t *\twheel: true\r\n\t * }\r\n\t * @private\r\n\t */\r\n\toverscrollEffectOn: PropTypes.shape({\r\n\t\tarrowKey: PropTypes.bool,\r\n\t\tdrag: PropTypes.bool,\r\n\t\tpageKey: PropTypes.bool,\r\n\t\ttrack: PropTypes.bool,\r\n\t\twheel: PropTypes.bool\r\n\t}),\r\n\r\n\t/**\r\n\t * When `true`, the list will scroll by page. Otherwise the list will scroll by item.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @private\r\n\t */\r\n\tpageScroll: PropTypes.bool,\r\n\r\n\t/**\r\n\t * The ARIA role for the list.\r\n\t *\r\n\t * @type {String}\r\n\t * @default 'list'\r\n\t * @public\r\n\t */\r\n\trole: PropTypes.string,\r\n\r\n\t/**\r\n\t * Specifies how to scroll.\r\n\t *\r\n\t * Valid values are:\r\n\t * * `'translate'`,\r\n\t * * `'native'`.\r\n\t *\r\n\t * @type {String}\r\n\t * @default 'native'\r\n\t * @public\r\n\t */\r\n\tscrollMode: PropTypes.string,\r\n\r\n\t/**\r\n\t * Spotlight Id.\r\n\t *\r\n\t * @type {String}\r\n\t * @private\r\n\t */\r\n\tspotlightId: PropTypes.string,\r\n\r\n\t/**\r\n\t * Specifies how to show vertical scrollbar.\r\n\t *\r\n\t * Valid values are:\r\n\t * * `'auto'`,\r\n\t * * `'visible'`, and\r\n\t * * `'hidden'`.\r\n\t *\r\n\t * @type {('auto'|'visible'|'hidden')}\r\n\t * @default 'auto'\r\n\t * @public\r\n\t */\r\n\tverticalScrollbar: PropTypes.oneOf(['auto', 'visible', 'hidden']),\r\n\r\n\t/**\r\n\t * Sets the hint string read when focusing the scroll thumb in the vertical scroll bar.\r\n\t *\r\n\t * @type {String}\r\n\t * @default $L('scroll left or right with left right button')\r\n\t * @public\r\n\t */\r\n\tverticalScrollThumbAriaLabel: PropTypes.string,\r\n\r\n\t/**\r\n\t * When it's `true` and the spotlight focus cannot move to the given direction anymore by 5-way keys,\r\n\t * a list is scrolled with an animation to the other side and the spotlight focus moves in wraparound manner.\r\n\t *\r\n\t * When it's `'noAnimation'`, the spotlight focus moves in wraparound manner as same as when it's `true`\r\n\t * except that a list is scrolled without an animation.\r\n\t *\r\n\t * Valid values are:\r\n\t * * `false`,\r\n\t * * `true`, and\r\n\t * * `'noAnimation'`\r\n\t *\r\n\t * @type {Boolean|'noAnimation'}\r\n\t * @default false\r\n\t * @public\r\n\t */\r\n\twrap: PropTypes.oneOfType([\r\n\t\tPropTypes.bool,\r\n\t\tPropTypes.oneOf(['noAnimation'])\r\n\t])\r\n};\r\n\r\nVirtualGridList = Skinnable(\r\n\tSpotlightContainerDecorator(\r\n\t\t{\r\n\t\t\toverflow: true,\r\n\t\t\tpreserveId: true,\r\n\t\t\trestrict: 'self-first'\r\n\t\t},\r\n\t\tI18nContextDecorator(\r\n\t\t\t{rtlProp: 'rtl'},\r\n\t\t\tVirtualGridList\r\n\t\t)\r\n\t)\r\n);\r\n\r\nVirtualGridList.defaultProps = {\r\n\t'data-spotlight-container-disabled': false,\r\n\tcbScrollTo: nop,\r\n\tdirection: 'vertical',\r\n\thorizontalScrollbar: 'auto',\r\n\tnoAffordance: false,\r\n\tnoScrollByDrag: false,\r\n\tnoScrollByWheel: false,\r\n\tonScroll: nop,\r\n\tonScrollStart: nop,\r\n\tonScrollStop: nop,\r\n\toverscrollEffectOn: {\r\n\t\tarrowKey: false,\r\n\t\tdrag: false,\r\n\t\tpageKey: false,\r\n\t\ttrack: false,\r\n\t\twheel: true\r\n\t},\r\n\tpageScroll: false,\r\n\trole: 'list',\r\n\tscrollMode: 'native',\r\n\tverticalScrollbar: 'auto',\r\n\twrap: false\r\n};\r\n\r\nexport default VirtualList;\r\nexport {\r\n\tVirtualGridList,\r\n\tVirtualList\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\index.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Button\\ButtonBase\\BaseButton.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\captureKeys.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\DivButton\\Button.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\Panels\\TransitionDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\util\\util.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Icon\\Icon.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\Marquee.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TooltipDecorator\\TooltipDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ImageItem\\ImageItem.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ImageItem\\ImageItemBase.js",["1540","1541"],"import EnactPropTypes from '@enact/core/internal/prop-types';\r\nimport {Row, Column, Cell} from '@enact/ui/Layout';\r\nimport ComponentOverride from '@enact/ui/ComponentOverride';\r\nimport _propTypes from '@enact/core/internal/prop-types';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport Icon from '../Icon';\r\nimport Image from '../Image/Image';\r\nimport {Marquee} from '../Marquee';\r\nimport classes from './ImageItem.module.less';\r\n\r\nconst defaultPlaceholder =\r\n\t'data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC' +\r\n\t'9zdmciPjxyZWN0IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjEwMCUiIHN0cm9rZT0iIzU1NSIgZmlsbD0iI2FhYSIg' +\r\n\t'ZmlsbC1vcGFjaXR5PSIwLjIiIHN0cm9rZS1vcGFjaXR5PSIwLjgiIHN0cm9rZS13aWR0aD0iNiIgLz48L3N2Zz' +\r\n\t'4NCg==';\r\n\r\nfunction _objectWithoutProperties (source, excluded) {\r\n\tif (source == null) return {};\r\n\tlet target = _objectWithoutPropertiesLoose(source, excluded);\r\n\tlet key, i;\r\n\tif (Object.getOwnPropertySymbols) {\r\n\t\tlet sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n\t\tfor (i = 0; i < sourceSymbolKeys.length; i++) {\r\n\t\t\tkey = sourceSymbolKeys[i];\r\n\t\t\tif (excluded.indexOf(key) >= 0) continue;\r\n\t\t\tif (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\r\n\t\t\ttarget[key] = source[key];\r\n\t\t}\r\n\t}\r\n\treturn target;\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose (source, excluded) {\r\n\tif (source == null) return {};\r\n\tlet target = {};\r\n\tlet sourceKeys = Object.keys(source);\r\n\tlet key, i;\r\n\tfor (i = 0; i < sourceKeys.length; i++) {\r\n\t\tkey = sourceKeys[i];\r\n\t\tif (excluded.indexOf(key) >= 0) continue;\r\n\t\ttarget[key] = source[key];\r\n\t}\r\n\treturn target;\r\n}\r\n\r\nconst ImageItemBase = ({children, orientation, placeholder, src, showSelection, SelectionComponent, imageIconComponent, itemSize, imageIconSrc, label, selected, ...rest}) => {\r\n\r\n\tconst isHorizontal = orientation === 'horizontal';\r\n\tconst Component = isHorizontal ? Row : Column;\r\n\tconst hasImageIcon = imageIconSrc && orientation === 'vertical';\r\n\r\n\tconst imageComponent = <Image>\r\n\t\t{showSelection ? (\r\n\t\t\t<div className={classes.selectionContainer}>\r\n\t\t\t\t{SelectionComponent ? (\r\n\t\t\t\t\t<SelectionComponent />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t\t<Icon className={classes.selectionIcon}>check</Icon>\r\n\t\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t) : null}\r\n\t</Image>;\r\n\r\n\t// Adapts ComponentOverride to work within Cell since both use the component prop\r\n\tfunction ImageOverride (_ref) {\r\n\t\tlet _refRest = _objectWithoutProperties(_ref, ['imageComponent', 'children']);\r\n\t\treturn ComponentOverride({..._refRest, component: imageComponent});\r\n\t}\r\n\r\n\tlet cx = classNames.bind(classes);\r\n\tdelete rest.imageComponent\r\n\treturn (\r\n\t\t<Component\r\n\t\t\tclassName={cx({\r\n\t\t\t\t[classes.imageItem]: true,\r\n\t\t\t\t[classes.vertical]: !isHorizontal,\r\n\t\t\t\t[classes.horizontal]: isHorizontal,\r\n\t\t\t\t[classes.selected]: selected\r\n\t\t\t})}\r\n\t\t\tdata-webos-voice-intent=\"Select\"\r\n\t\t\tselected={selected} {...rest}\r\n\t\t>\r\n\t\t\t<Cell\r\n\t\t\t\tclassName={classes.image}\r\n\t\t\t\timageComponent={imageComponent}\r\n\t\t\t\tcomponent={ImageOverride}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tshrink={isHorizontal}\r\n\t\t\t\tsrc={src}\r\n\t\t\t/>\r\n\t\t\t{children && <Cell\r\n\t\t\t\tclassName={classes.caption}\r\n\t\t\t\tshrink={!isHorizontal}\r\n\t\t\t\talign={isHorizontal ? 'center' : undefined}\r\n\t\t\t>\r\n\t\t\t\t<Row className={classes.captions}>\r\n\t\t\t\t\t{hasImageIcon ? (\r\n\t\t\t\t\t\t<Cell\r\n\t\t\t\t\t\t\tclassName={classes.imageIcon}\r\n\t\t\t\t\t\t\tcomponent={imageIconComponent}\r\n\t\t\t\t\t\t\tsrc={imageIconSrc}\r\n\t\t\t\t\t\t\tshrink\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t\t<Cell>\r\n\t\t\t\t\t\t<Marquee className={classes.caption} marqueeOn=\"hover\">{children}</Marquee>\r\n\t\t\t\t\t\t<Marquee className={classes.label} marqueeOn=\"hover\">{label}</Marquee>\r\n\t\t\t\t\t</Cell>\r\n\t\t\t\t</Row>\r\n\t\t\t</Cell>}\r\n\t\t</Component>\r\n\t);\r\n};\r\n\r\nImageItemBase.propTypes = {\r\n\t/**\r\n\t * The caption displayed with the image.\r\n\t *\r\n\t * @type {Node}\r\n\t * @public\r\n\t */\r\n\tchildren: PropTypes.node,\r\n\r\n\t/**\r\n\t\t * The voice control intent.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default 'Select'\r\n\t\t * @memberof goldstone/ImageItem.ImageItemBase.prototype\r\n\t\t * @public\r\n\t\t */\r\n\t'data-webos-voice-intent': PropTypes.string,\r\n\r\n\t/**\r\n\t\t * The component used to render the image icon component.\r\n\t\t *\r\n\t\t * @type {Component}\r\n\t\t * @default sandstone/Image.Image\r\n\t\t * @private\r\n\t\t */\r\n\timageIconComponent: EnactPropTypes.component,\r\n\r\n\t/**\r\n\t\t * Source for the image icon.\r\n\t\t * String value or Object of values used to determine which image will appear on\r\n\t\t * a specific screenSize.\r\n\t\t * This feature is only valid when `orientation` is `'vertical'.\r\n\t\t *\r\n\t\t * @type {String|Object}\r\n\t\t * @private\r\n\t\t */\r\n\timageIconSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n\r\n\t/**\r\n\t * The component used to render the image component.\r\n\t *\r\n\t * @type {Component|Element}\r\n\t * @public\r\n\t */\r\n\timageComponent: _propTypes.componentOverride,\r\n\r\n\t/**\r\n\t\t * A secondary caption displayed with the image.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @public\r\n\t\t */\r\n\tlabel: PropTypes.string,\r\n\r\n\t/**\r\n\t * The layout orientation of the component.\r\n\t *\r\n\t * @type {('horizontal'|'vertical')}\r\n\t * @default 'vertical'\r\n\t * @public\r\n\t */\r\n\torientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n\r\n\t/**\r\n\t * A placeholder image to be displayed before the image is loaded.\r\n\t *\r\n\t * @type {String}\r\n\t * @public\r\n\t */\r\n\tplaceholder: PropTypes.string,\r\n\r\n\t/**\r\n\t * Applies a selected visual effect to the image.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @public\r\n\t */\r\n\tselected: PropTypes.bool,\r\n\r\n\t/**\r\n\t\t * The custom selection component to render. A component can be a stateless functional\r\n\t\t * component, `kind()` or React component. The following is an example with custom selection\r\n\t\t * kind.\r\n\t\t *\r\n\t\t * Usage:\r\n\t\t * ```\r\n\t\t * const SelectionComponent = kind({\r\n\t\t *   render: () => <div>custom selection component</div>\r\n\t\t * });\r\n\t\t *\r\n\t\t * <ImageItem selectionComponent={SelectionComponent} />\r\n\t\t * ```\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\tselectionComponent: PropTypes.func,\r\n\r\n\t/**\r\n\t\t * Shows a selection component with a centered icon. When `selected` is true, a check mark is shown.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @default false\r\n\t\t * @public\r\n\t\t */\r\n\tshowSelection: PropTypes.bool,\r\n\t/**\r\n\t * String value or Object of values used to determine which image will appear on a specific\r\n\t * screenSize.\r\n\t *\r\n\t * @type {String|Object}\r\n\t * @public\r\n\t */\r\n\tsrc: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\r\n};\r\n\r\nImageItemBase.defaultProps = {\r\n\t'data-webos-voice-intent': 'Select',\r\n\timageComponent: Image,\r\n\timageIconComponent: Image,\r\n\torientation: 'vertical',\r\n\tplaceholder: defaultPlaceholder,\r\n\tselected: false\r\n};\r\n\r\nImageItemBase.displayName = 'ImageItem';\r\n\r\nexport default ImageItemBase;\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\DebounceDecorator\\DebounceDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Scroller\\Scroller.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Sprite\\Sprite.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ImageItem\\ImageItemDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\useThemeVirtualList.js",["1542"],"import Spotlight, {getDirection} from '@enact/spotlight';\r\nimport Accelerator from '@enact/spotlight/Accelerator';\r\nimport Pause from '@enact/spotlight/Pause';\r\nimport {getTargetByDirectionFromElement} from '@enact/spotlight/src/target';\r\nimport {Spottable} from '@enact/spotlight/Spottable';\r\nimport ri from '@enact/ui/resolution';\r\nimport utilDOM from '@enact/ui/useScroll/utilDOM';\r\nimport React, {useCallback, useEffect, useRef} from 'react';\r\n\r\nimport {affordanceSize, dataIndexAttribute} from '../useScroll';\r\n\r\nimport {useEventKey, useEventFocus} from './useEvent';\r\nimport usePreventScroll from './usePreventScroll';\r\nimport {useSpotlightConfig, useSpotlightRestore} from './useSpotlight';\r\n\r\nconst SpotlightAccelerator = new Accelerator();\r\nconst SpotlightPlaceholder = Spottable('div');\r\n\r\nconst\r\n\tnop = () => {},\r\n\tgetNumberValue = (index) => {\r\n\t\t// using '+ operator' for string > number conversion based on performance: https://jsperf.com/convert-string-to-number-techniques/7\r\n\t\tlet number = +index;\r\n\t\t// should return -1 if index is not a number or a negative value\r\n\t\treturn number >= 0 ? number : -1;\r\n\t};\r\n\r\nconst useSpottable = (props, instances) => {\r\n\tconst {noAffordance, scrollMode} = props;\r\n\tconst {itemRefs, scrollContainerRef, scrollContentHandle} = instances;\r\n\tconst getItemNode = (index) => {\r\n\t\tconst itemNode = itemRefs.current[index % scrollContentHandle.current.state.numOfItems];\r\n\t\treturn (itemNode && parseInt(itemNode.dataset.index) === index) ? itemNode : null;\r\n\t};\r\n\r\n\t// Mutable value\r\n\r\n\tconst mutableRef = useRef({\r\n\t\tisScrolledBy5way: false,\r\n\t\tisScrolledByJump: false,\r\n\t\tisWrappedBy5way: false,\r\n\t\tlastFocusedIndex: null,\r\n\t\tpause: new Pause('VirtualListBasic')\r\n\t});\r\n\r\n\tconst {pause} = mutableRef.current;\r\n\r\n\t// Hooks\r\n\r\n\tuseSpotlightConfig(props, {spottable: mutableRef});\r\n\r\n\tconst {addGlobalKeyDownEventListener, removeGlobalKeyDownEventListener} = useEventKey(props, instances, {\r\n\t\thandlePageUpDownKeyDown: () => {\r\n\t\t\tmutableRef.current.isScrolledBy5way = false;\r\n\t\t},\r\n\t\thandleDirectionKeyDown: (ev, eventType, param) => {\r\n\t\t\tswitch (eventType) {\r\n\t\t\t\tcase 'acceleratedKeyDown':\r\n\t\t\t\t\tonAcceleratedKeyDown(param);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'keyDown':\r\n\t\t\t\t\tif (Spotlight.move(param.direction)) {\r\n\t\t\t\t\t\tconst nextTargetIndex = Spotlight.getCurrent().dataset.index;\r\n\r\n\t\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\t\tev.stopPropagation();\r\n\r\n\t\t\t\t\t\tif (typeof nextTargetIndex === 'string') {\r\n\t\t\t\t\t\t\tonAcceleratedKeyDown({...param, nextIndex: getNumberValue(nextTargetIndex)});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'keyLeave':\r\n\t\t\t\t\tSpotlightAccelerator.reset();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\thandle5WayKeyUp: () => {\r\n\t\t\tSpotlightAccelerator.reset();\r\n\t\t},\r\n\t\tspotlightAcceleratorProcessKey: (ev) => {\r\n\t\t\treturn SpotlightAccelerator.processKey(ev, nop);\r\n\t\t}\r\n\t});\r\n\r\n\tuseEventFocus(props, instances);\r\n\r\n\tconst {\r\n\t\thandlePlaceholderFocus,\r\n\t\thandleRestoreLastFocus,\r\n\t\tsetPreservedIndex,\r\n\t\tupdateStatesAndBounds\r\n\t} = useSpotlightRestore(props, {...instances, spottable: mutableRef}, {focusByIndex, getItemNode});\r\n\r\n\tfunction pauseSpotlight (bool) {\r\n\t\tif (bool) {\r\n\t\t\tpause.pause();\r\n\t\t} else {\r\n\t\t\tpause.resume();\r\n\t\t}\r\n\t}\r\n\r\n\tconst setContainerDisabled = useCallback((bool) => {\r\n\t\tif (scrollContainerRef.current) {\r\n\t\t\tscrollContainerRef.current.dataset.spotlightContainerDisabled = bool;\r\n\r\n\t\t\tif (bool) {\r\n\t\t\t\taddGlobalKeyDownEventListener(handleGlobalKeyDown);\r\n\t\t\t} else {\r\n\t\t\t\tremoveGlobalKeyDownEventListener();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addGlobalKeyDownEventListener, handleGlobalKeyDown, removeGlobalKeyDownEventListener, scrollContainerRef]);\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tfunction handleGlobalKeyDown (ev) {\r\n\t\t// To prevent scrolling by native scroller\r\n\t\tif (scrollMode === 'native') {\r\n\t\t\tev.preventDefault();\r\n\t\t\tev.stopPropagation();\r\n\t\t}\r\n\r\n\t\tsetContainerDisabled(false);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\t// TODO: Fix eslint\r\n\t\t\tpause.resume(); // eslint-disable-line react-hooks/exhaustive-deps\r\n\t\t\tSpotlightAccelerator.reset();\r\n\r\n\t\t\tsetContainerDisabled(false);\r\n\t\t};\r\n\t}, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\t// Functions\r\n\r\n\tfunction onAcceleratedKeyDown ({isWrapped, keyCode, nextIndex, repeat, target}) {\r\n\t\tconst {cbScrollTo, wrap} = props;\r\n\t\tconst {dimensionToExtent, primary: {clientSize, itemSize}, scrollPosition, scrollPositionTarget} = scrollContentHandle.current;\r\n\t\tconst index = getNumberValue(target.dataset.index);\r\n\t\tconst direction = getDirection(keyCode);\r\n\r\n\t\tmutableRef.current.isScrolledBy5way = false;\r\n\t\tmutableRef.current.isScrolledByJump = false;\r\n\r\n\t\tif (nextIndex >= 0 && index >= 0) {\r\n\t\t\tconst\r\n\t\t\t\trow = Math.floor(index / dimensionToExtent),\r\n\t\t\t\tnextRow = Math.floor(nextIndex / dimensionToExtent),\r\n\t\t\t\tstart = scrollContentHandle.current.getGridPosition(nextIndex).primaryPosition,\r\n\t\t\t\tend = props.itemSizes ? scrollContentHandle.current.getItemBottomPosition(nextIndex) : start + itemSize,\r\n\t\t\t\tstartBoundary = (scrollMode === 'native') ? scrollPosition : scrollPositionTarget,\r\n\t\t\t\tendBoundary = startBoundary + clientSize - (noAffordance ? 0 : ri.scale(affordanceSize));\r\n\r\n\t\t\tmutableRef.current.lastFocusedIndex = nextIndex;\r\n\r\n\t\t\tif (start >= startBoundary && end <= endBoundary) {\r\n\t\t\t\t// The next item could be still out of viewport. So we need to prevent scrolling into view with `isScrolledBy5way` flag.\r\n\t\t\t\tmutableRef.current.isScrolledBy5way = true;\r\n\t\t\t\tfocusByIndex(nextIndex, direction);\r\n\t\t\t\tmutableRef.current.isScrolledBy5way = false;\r\n\t\t\t} else if (row === nextRow) {\r\n\t\t\t\tfocusByIndex(nextIndex, direction);\r\n\t\t\t} else {\r\n\t\t\t\tconst itemNode = getItemNode(nextIndex);\r\n\t\t\t\tconst stickTo = Math.abs(endBoundary - end) < Math.abs(startBoundary - start) ? 'end' : 'start';\r\n\r\n\t\t\t\tmutableRef.current.isScrolledBy5way = true;\r\n\t\t\t\tmutableRef.current.isWrappedBy5way = isWrapped;\r\n\r\n\t\t\t\tif (isWrapped && wrap === true && itemNode === null) {\r\n\t\t\t\t\tpause.pause();\r\n\t\t\t\t\ttarget.blur();\r\n\t\t\t\t}\r\n\t\t\t\tfocusByIndex(nextIndex, direction);\r\n\r\n\t\t\t\tcbScrollTo({\r\n\t\t\t\t\tindex: nextIndex,\r\n\t\t\t\t\tstickTo,\r\n\t\t\t\t\toffset: (!noAffordance && stickTo === 'end') ? ri.scale(affordanceSize) : 0,\r\n\t\t\t\t\tanimate: !(isWrapped && wrap === 'noAnimation')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (!repeat && Spotlight.move(direction)) {\r\n\t\t\tSpotlightAccelerator.reset();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction focusOnNode (node) {\r\n\t\tif (node) {\r\n\t\t\treturn Spotlight.focus(node);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfunction focusByIndex (index, direction) {\r\n\t\tconst itemNode = getItemNode(index);\r\n\t\tlet returnVal = false;\r\n\r\n\t\tif (!itemNode && index >= 0 && index < props.dataSize) {\r\n\t\t\t// Item is valid but since the the dom doesn't exist yet, we set the index to focus after the ongoing update\r\n\t\t\tsetPreservedIndex(index, direction);\r\n\t\t} else {\r\n\t\t\tconst\r\n\t\t\t\tcurrent = Spotlight.getCurrent(),\r\n\t\t\t\tcandidate = current ? getTargetByDirectionFromElement(direction, current) : itemNode;\r\n\r\n\t\t\t// Remove any preservedIndex\r\n\t\t\tsetPreservedIndex(-1);\r\n\r\n\t\t\tif (mutableRef.current.isWrappedBy5way) {\r\n\t\t\t\tSpotlightAccelerator.reset();\r\n\t\t\t\tmutableRef.current.isWrappedBy5way = false;\r\n\t\t\t}\r\n\r\n\t\t\tpause.resume();\r\n\t\t\tif (utilDOM.containsDangerously(itemNode, candidate)) {\r\n\t\t\t\treturnVal = focusOnNode(candidate);\r\n\t\t\t} else {\r\n\t\t\t\treturnVal = focusOnNode(itemNode);\r\n\t\t\t}\r\n\t\t\tmutableRef.current.isScrolledBy5way = false;\r\n\t\t\tmutableRef.current.isScrolledByJump = false;\r\n\t\t}\r\n\r\n\t\treturn returnVal;\r\n\t}\r\n\r\n\tfunction calculatePositionOnFocus ({item, scrollPosition = scrollContentHandle.current.scrollPosition}) {\r\n\t\tconst\r\n\r\n\t\t\t{pageScroll} = props,\r\n\t\t\t{state: {numOfItems}, primary} = scrollContentHandle.current,\r\n\t\t\toffsetToClientEnd = primary.clientSize - primary.itemSize - (noAffordance ? 0 : ri.scale(affordanceSize)),\r\n\t\t\tfocusedIndex = getNumberValue(item.getAttribute(dataIndexAttribute));\r\n\r\n\t\tif (focusedIndex >= 0) {\r\n\t\t\tlet gridPosition = scrollContentHandle.current.getGridPosition(focusedIndex);\r\n\r\n\t\t\tif (numOfItems > 0 && focusedIndex % numOfItems !== mutableRef.current.lastFocusedIndex % numOfItems) {\r\n\t\t\t\tconst itemNode = getItemNode(mutableRef.current.lastFocusedIndex);\r\n\r\n\t\t\t\tif (itemNode) {\r\n\t\t\t\t\titemNode.blur();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmutableRef.current.lastFocusedIndex = focusedIndex;\r\n\r\n\t\t\tif (primary.clientSize >= primary.itemSize) {\r\n\t\t\t\tif (gridPosition.primaryPosition > scrollPosition + offsetToClientEnd) { // forward over\r\n\t\t\t\t\tgridPosition.primaryPosition -= pageScroll ? 0 : offsetToClientEnd;\r\n\t\t\t\t} else if (gridPosition.primaryPosition >= scrollPosition) { // inside of client\r\n\t\t\t\t\tif (scrollMode === 'translate') {\r\n\t\t\t\t\t\tgridPosition.primaryPosition = scrollPosition;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// This code uses the trick to change the target position slightly which will not affect the actual result\r\n\t\t\t\t\t\t// since a browser ignore `scrollTo` method if the target position is same as the current position.\r\n\t\t\t\t\t\tgridPosition.primaryPosition = scrollPosition + (scrollContentHandle.current.scrollPosition === scrollPosition ? 0.1 : 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { // backward over\r\n\t\t\t\t\tgridPosition.primaryPosition -= pageScroll ? offsetToClientEnd : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Since the result is used as a target position to be scrolled,\r\n\t\t\t// scrondaryPosition should be 0 here.\r\n\t\t\tgridPosition.secondaryPosition = 0;\r\n\r\n\t\t\treturn scrollContentHandle.current.gridPositionToItemPosition(gridPosition);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction shouldPreventScrollByFocus () {\r\n\t\treturn ((scrollMode === 'translate') ? (mutableRef.current.isScrolledBy5way) : (mutableRef.current.isScrolledBy5way || mutableRef.current.isScrolledByJump));\r\n\t}\r\n\r\n\tfunction shouldPreventOverscrollEffect () {\r\n\t\treturn mutableRef.current.isWrappedBy5way;\r\n\t}\r\n\r\n\tfunction setLastFocusedNode (node) {\r\n\t\tmutableRef.current.lastFocusedIndex = node.dataset && getNumberValue(node.dataset.index);\r\n\t}\r\n\r\n\tfunction getScrollBounds () {\r\n\t\treturn scrollContentHandle.current.getScrollBounds();\r\n\t}\r\n\r\n\t// Return\r\n\r\n\treturn {\r\n\t\tcalculatePositionOnFocus,\r\n\t\tfocusByIndex,\r\n\t\tfocusOnNode,\r\n\t\tgetScrollBounds,\r\n\t\thandlePlaceholderFocus,\r\n\t\thandleRestoreLastFocus,\r\n\t\tpauseSpotlight,\r\n\t\tsetContainerDisabled,\r\n\t\tsetLastFocusedNode,\r\n\t\tshouldPreventOverscrollEffect,\r\n\t\tshouldPreventScrollByFocus,\r\n\t\tupdateStatesAndBounds\r\n\t};\r\n};\r\n\r\nconst useThemeVirtualList = (props) => {\r\n\tconst {itemRefs, scrollContainerRef, scrollContentHandle, scrollContentRef} = props;\r\n\r\n\t// Hooks\r\n\r\n\tconst instance = {itemRefs, scrollContainerRef, scrollContentHandle, scrollContentRef};\r\n\r\n\tconst {\r\n\t\tcalculatePositionOnFocus,\r\n\t\tfocusByIndex,\r\n\t\tfocusOnNode,\r\n\t\tgetScrollBounds,\r\n\t\thandlePlaceholderFocus,\r\n\t\thandleRestoreLastFocus,\r\n\t\tpauseSpotlight,\r\n\t\tsetContainerDisabled,\r\n\t\tsetLastFocusedNode,\r\n\t\tshouldPreventOverscrollEffect,\r\n\t\tshouldPreventScrollByFocus,\r\n\t\tupdateStatesAndBounds\r\n\t} = useSpottable(props, instance);\r\n\r\n\tusePreventScroll(props, instance);\r\n\r\n\tconst handle = {\r\n\t\tcalculatePositionOnFocus,\r\n\t\tfocusByIndex,\r\n\t\tfocusOnNode,\r\n\t\tgetScrollBounds,\r\n\t\tpauseSpotlight,\r\n\t\tsetContainerDisabled,\r\n\t\tsetLastFocusedNode,\r\n\t\tshouldPreventOverscrollEffect,\r\n\t\tshouldPreventScrollByFocus\r\n\t};\r\n\r\n\tprops.setThemeScrollContentHandle(handle);\r\n\r\n\r\n\tfunction getAffordance () {\r\n\t\t// To add space for the last item margin bottom\r\n\t\treturn props.noAffordance ? 0 : ri.scale(30);\r\n\t}\r\n\r\n\t// Render\r\n\r\n\tconst {itemRenderer, ...rest} = props;\r\n\r\n\tdelete rest.noAffordance;\r\n\tdelete rest.scrollContainerContainsDangerously;\r\n\tdelete rest.scrollContainerHandle;\r\n\tdelete rest.scrollContainerRef;\r\n\tdelete rest.scrollContentHandle;\r\n\tdelete rest.spotlightId;\r\n\tdelete rest.wrap;\r\n\r\n\treturn {\r\n\t\t...rest,\r\n\t\tgetAffordance,\r\n\t\titemRenderer: ({index, ...itemRest}) => (\r\n\t\t\titemRenderer({\r\n\t\t\t\t...itemRest,\r\n\t\t\t\t[dataIndexAttribute]: index,\r\n\t\t\t\tindex\r\n\t\t\t})\r\n\t\t),\r\n\t\tplaceholderRenderer: (primary) => {\r\n\t\t\treturn placeholderRenderer({\r\n\t\t\t\thandlePlaceholderFocus,\r\n\t\t\t\tprimary\r\n\t\t\t});\r\n\t\t},\r\n\t\tonUpdateItems: handleRestoreLastFocus,\r\n\t\tupdateStatesAndBounds: updateStatesAndBounds\r\n\t};\r\n};\r\n\r\n/* eslint-disable enact/prop-types */\r\nfunction placeholderRenderer ({\r\n\thandlePlaceholderFocus,\r\n\tprimary\r\n}) {\r\n\treturn (primary ? null : (\r\n\t\t<SpotlightPlaceholder\r\n\t\t\tdata-index={0}\r\n\t\t\tdata-vl-placeholder\r\n\t\t\tkey=\"placeholder\"\r\n\t\t\t// a zero width/height element can't be focused by spotlight so we're giving\r\n\t\t\t// the placeholder a small size to ensure it is navigable\r\n\t\t\tonFocus={handlePlaceholderFocus}\r\n\t\t\tstyle={{width: 10}}\r\n\t\t/>\r\n\t));\r\n}\r\n/* eslint-enable enact/prop-types */\r\n\r\nexport default useThemeVirtualList;\r\nexport {\r\n\tuseThemeVirtualList\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\device.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\audio.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\video.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Popup\\Popup.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\Scrollbar.js",["1543"],"import {useScrollbar as useScrollbarBase} from '@enact/ui/useScroll/Scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport React, {memo, useCallback} from 'react';\r\n\r\nimport ScrollbarTrack from './ScrollbarTrack';\r\nimport Skinnable from '../Skinnable';\r\n\r\nimport componentCss from './Scrollbar.module.less';\r\n\r\nconst useThemeScrollbar = (props) => {\r\n\tconst {\r\n\t\trestProps,\r\n\t\tscrollbarProps,\r\n\t\tscrollbarTrackProps\r\n\t} = useScrollbarBase(props);\r\n\r\n\tconst {\r\n\t\t'aria-label': ariaLabel,\r\n\t\tcbAlertScrollbarTrack,\r\n\t\tfocusableScrollbar,\r\n\t\tonInteractionForScroll,\r\n\t\trtl,\r\n\t\t...rest\r\n\t} = restProps;\r\n\r\n\tconst\r\n\t\t{ref: scrollbarContainerRef} = scrollbarProps,\r\n\t\t{ref: scrollbarTrackRef} = scrollbarTrackProps,\r\n\t\t{vertical} = props;\r\n\r\n\tconst onClick = useCallback((ev) => {\r\n\t\t// Click on bodyText scrollbar.\r\n\t\tconst {nativeEvent, target} = ev;\r\n\r\n\t\tif (!focusableScrollbar || !scrollbarTrackRef.current) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Click the scrollbar area. If user click the thumb, do nothing.\r\n\t\tif ((target === scrollbarContainerRef.current) ||\r\n\t\t\t(target === scrollbarTrackRef.current)) {\r\n\t\t\tconst\r\n\t\t\t\tclickPoint = nativeEvent[vertical ? 'offsetY' : 'offsetX'],\r\n\t\t\t\tthumb = scrollbarTrackRef.current.children[0],\r\n\t\t\t\tthumbPosition = thumb[vertical ? 'offsetTop' : 'offsetLeft'],\r\n\t\t\t\tthumbSize = thumb[vertical ? 'offsetHeight' : 'offsetWidth'],\r\n\t\t\t\tclickThumb = clickPoint > thumbPosition && clickPoint < thumbPosition + thumbSize;\r\n\r\n\t\t\tif (!clickThumb) {\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tev.nativeEvent.stopImmediatePropagation();\r\n\t\t\t\tonInteractionForScroll({\r\n\t\t\t\t\tinputType: 'track',\r\n\t\t\t\t\tisForward: clickPoint > thumbPosition,\r\n\t\t\t\t\tisPagination: true,\r\n\t\t\t\t\tisVerticalScrollBar: vertical\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [focusableScrollbar, onInteractionForScroll, scrollbarContainerRef, scrollbarTrackRef, vertical]);\r\n\r\n\treturn {\r\n\t\trestProps: rest,\r\n\t\tscrollbarProps: {\r\n\t\t\t...scrollbarProps,\r\n\t\t\tonClick\r\n\t\t},\r\n\t\tscrollbarTrackProps: {\r\n\t\t\t...scrollbarTrackProps,\r\n\t\t\t'aria-label': ariaLabel,\r\n\t\t\tcbAlertScrollbarTrack,\r\n\t\t\tfocusableScrollbar,\r\n\t\t\tonInteractionForScroll,\r\n\t\t\trtl\r\n\t\t}\r\n\t};\r\n};\r\n\r\n/**\r\n * A Sandstone-styled scrollbar base component.\r\n *\r\n * @class ScrollbarBase\r\n * @memberof sandstone/useScroll\r\n * @ui\r\n * @private\r\n */\r\nconst ScrollbarBase = memo((props) => {\r\n\tconst {\r\n\t\trestProps,\r\n\t\tscrollbarProps,\r\n\t\tscrollbarTrackProps\r\n\t} = useThemeScrollbar(props);\r\n\r\n\treturn (\r\n\t\t<div {...restProps} {...scrollbarProps}>\r\n\t\t\t<ScrollbarTrack {...scrollbarTrackProps} />\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nScrollbarBase.displayName = 'ScrollbarBase';\r\n\r\nScrollbarBase.propTypes = /** @lends sandstone/useScroll.Scrollbar.prototype */ {\r\n\t/**\r\n\t * Customizes the component by mapping the supplied collection of CSS class names to the\r\n\t * corresponding internal elements and states of this component.\r\n\t *\r\n\t * The following classes are supported:\r\n\t *\r\n\t * * `scrollbar` - The scrollbar component class\r\n\t *\r\n\t * @type {Object}\r\n\t * @public\r\n\t */\r\n\tcss: PropTypes.object,\r\n\r\n\t/**\r\n\t * The minimum size of the thumb.\r\n\t * This value will be applied ri.scale.\r\n\t *\r\n\t * @type {number}\r\n\t * @public\r\n\t */\r\n\tminThumbSize: PropTypes.number,\r\n\r\n\t/**\r\n\t * The scrollbar will be oriented vertically.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default true\r\n\t * @public\r\n\t */\r\n\tvertical: PropTypes.bool\r\n};\r\n\r\nScrollbarBase.defaultProps = {\r\n\tcss: componentCss,\r\n\tminThumbSize: 120,\r\n\tvertical: true\r\n};\r\n\r\n/**\r\n * A Sandstone-styled scroll bar.\r\n *\r\n * @class Scrollbar\r\n * @memberof sandstone/useScroll\r\n * @ui\r\n * @private\r\n */\r\nconst Scrollbar = Skinnable(ScrollbarBase);\r\n\r\nScrollbar.displayName = 'Scrollbar';\r\n\r\nexport default Scrollbar;\r\nexport {\r\n\tScrollbar,\r\n\tScrollbarBase\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useScroll.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Icon\\IconList.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TooltipDecorator\\Tooltip.js",["1544"],"import kind from '@enact/core/kind';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Skinnable from '../Skinnable';\r\n\r\nimport TooltipLabel from './TooltipLabel';\r\nimport componentCss from './Tooltip.module.less';\r\n\r\n/**\r\n * A stateless tooltip component with Sandstone styling applied.\r\n *\r\n * @class TooltipBase\r\n * @memberof sandstone/TooltipDecorator\r\n * @ui\r\n * @public\r\n */\r\nconst TooltipBase = kind({\r\n\tname: 'Tooltip',\r\n\r\n\tpropTypes: /** @lends sandstone/TooltipDecorator.TooltipBase.prototype */ {\r\n\t\t/**\r\n\t\t * The node to be displayed as the main content of the tooltip.\r\n\t\t *\r\n\t\t * @type {Node}\r\n\t\t * @required\r\n\t\t */\r\n\t\tchildren: PropTypes.node.isRequired,\r\n\r\n\t\t/**\r\n\t\t * Position of tooltip arrow in relation to the activator.\r\n\t\t *\r\n\t\t * Note that `'left'`, `'center'`, `'right'` are applicable when direction is in vertical\r\n\t\t * orientation (i.e. `'above'`, `'below'`), and `'top'`, `'middle'`, and `'bottom'` are\r\n\t\t * applicable when direction is in horizontal orientation (i.e. `'left'`, `'right'`)\r\n\t\t *\r\n\t\t * @type {('left'|'center'|'right'|'top'|'middle'|'bottom')}\r\n\t\t * @default 'right'\r\n\t\t * @public\r\n\t\t */\r\n\t\tarrowAnchor: PropTypes.oneOf(['left', 'center', 'right', 'top', 'middle', 'bottom']),\r\n\r\n\t\t/**\r\n\t\t * Customizes the component by mapping the supplied collection of CSS class names to the\r\n\t\t * corresponding internal elements and states of this component.\r\n\t\t *\r\n\t\t * The following classes are supported:\r\n\t\t *\r\n\t\t * * `tooltip` - The root component class\r\n\t\t * * `tooltipLabel` - Applied the label node\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @public\r\n\t\t */\r\n\t\tcss: PropTypes.object,\r\n\r\n\t\t/**\r\n\t\t * Direction of label in relation to the activator.\r\n\t\t *\r\n\t\t * @type {('above'|'below'|'left'|'right')}\r\n\t\t * @default 'above'\r\n\t\t * @public\r\n\t\t */\r\n\t\tdirection: PropTypes.oneOf(['above', 'below', 'left', 'right']),\r\n\r\n\t\t/**\r\n\t\t * A value representing the amount to offset the label portion of the tooltip.\r\n\t\t *\r\n\t\t * In a \"center\" aligned tooltip, the label may be desirable to offset to one side or the\r\n\t\t * other. This prop accepts a value between -0.5 and 0.5 (representing 50% to the left or\r\n\t\t * right). This defaults to 0 offset (centered). It also automatically caps the value so it\r\n\t\t * never positions the tooltip label past the anchored arrow. If the tooltip label or arrow\r\n\t\t * has non-rectangular geometry (rounded corners, a wide tail, etc), you'll need to manually\r\n\t\t * account for that in your provided offset value.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @default 0\r\n\t\t * @public\r\n\t\t */\r\n\t\tlabelOffset: PropTypes.number,\r\n\r\n\t\t/**\r\n\t\t * Style object for tooltip position.\r\n\t\t *\r\n\t\t * @type {Object}\r\n\t\t * @public\r\n\t\t */\r\n\t\tposition: PropTypes.shape({\r\n\t\t\tbottom: PropTypes.number,\r\n\t\t\tleft: PropTypes.number,\r\n\t\t\tright: PropTypes.number,\r\n\t\t\ttop: PropTypes.number\r\n\t\t}),\r\n\r\n\t\t/**\r\n\t\t * Anchors the tooltip relative to its container.\r\n\t\t *\r\n\t\t * Reconfigures the component to anchor itself to the designated edge of its container.\r\n\t\t * When this is not specified, the implication is that the component is \"absolutely\"\r\n\t\t * positioned, relative to the viewport, rather than its parent layer.\r\n\t\t *\r\n\t\t * @type {Boolean}\r\n\t\t * @public\r\n\t\t */\r\n\t\trelative: PropTypes.bool,\r\n\r\n\t\t/**\r\n\t\t * Called when the tooltip mounts/unmounts, giving a reference to the DOM.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\t\ttooltipRef: PropTypes.func,\r\n\r\n\t\t/**\r\n\t\t * The width of tooltip content in pixels (px).\r\n\t\t *\r\n\t\t * If the content goes over the given width, then it will automatically wrap. When `null`,\r\n\t\t * content does not wrap.\r\n\t\t *\r\n\t\t * @type {Number|null}\r\n\t\t * @public\r\n\t\t */\r\n\t\twidth: PropTypes.number\r\n\t},\r\n\r\n\tdefaultProps: {\r\n\t\tarrowAnchor: 'right',\r\n\t\tdirection: 'above',\r\n\t\tlabelOffset: 0\r\n\t},\r\n\r\n\tstyles: {\r\n\t\tcss: componentCss,\r\n\t\tclassName: 'tooltip',\r\n\t\tpublicClassNames: ['tooltip', 'tooltipLabel']\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tlabelOffset: ({labelOffset}) => {\r\n\t\t\tif (labelOffset) {\r\n\t\t\t\tconst cappedPosition = Math.max(-0.5, Math.min(0.5, labelOffset));\r\n\t\t\t\treturn {transform: `translateX(${cappedPosition * 100}%)`};\r\n\t\t\t}\r\n\t\t},\r\n\t\tclassName: ({direction, arrowAnchor, relative, styler}) => styler.append(direction, `${arrowAnchor}Arrow`, {relative, absolute: !relative}),\r\n\t\tstyle: ({position, style}) => {\r\n\t\t\treturn {\r\n\t\t\t\t...style,\r\n\t\t\t\t...position\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\trender: ({children, css, tooltipRef, width, labelOffset, ...rest}) => {\r\n\t\tdelete rest.arrowAnchor;\r\n\t\tdelete rest.labelOffset;\r\n\t\tdelete rest.direction;\r\n\t\tdelete rest.position;\r\n\t\tdelete rest.relative;\r\n\r\n\t\treturn (\r\n\t\t\t<div {...rest}>\r\n\t\t\t\t<div className={css.tooltipAnchor} ref={tooltipRef} >\r\n\t\t\t\t\t<div className={css.tooltipArrow} />\r\n\t\t\t\t\t<TooltipLabel className={css.tooltipLabel} width={width} style={labelOffset}>\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</TooltipLabel>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n});\r\n\r\n/**\r\n * A tooltip component with Sandstone styling applied.\r\n *\r\n * @class Tooltip\r\n * @memberof sandstone/TooltipDecorator\r\n * @ui\r\n * @public\r\n */\r\nconst Tooltip = Skinnable(TooltipBase);\r\n\r\nexport default Tooltip;\r\nexport {Tooltip, TooltipBase};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TooltipDecorator\\util.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Scroller\\useThemeScroller.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\usePreventScroll.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\useSpotlight.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\VirtualList\\useEvent.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\services\\Luna\\request.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Image\\Image.js",["1545"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport {selectSrc} from '../resolution';\r\nimport classes from './Image.module.less';\r\n\r\n/**\r\n * A basic image component designed to display images conditionally based on screen size.\r\n *\r\n * Example:\r\n * ```\r\n * const src = {\r\n *   'hd': 'http://lorempixel.com/64/64/city/1/',\r\n *   'fhd': 'http://lorempixel.com/128/128/city/1/',\r\n *   'uhd': 'http://lorempixel.com/256/256/city/1/'\r\n * };\r\n *\r\n * <Image className={css.myImage} src={src} sizing=\"fill\" />\r\n * ```\r\n *\r\n * `ui/Image` is based on the `div` element, but it uses `img` to provide `onError` and `onLoad`\r\n * events. The image that you see on screen is a `background-image` from the `div` element, not the\r\n * `img` element.\r\n *\r\n * > If you need a naturally sized image, you can use the native `<img>` element instead.\r\n *\r\n * @class Image\r\n * @memberof goldstone/Image\r\n * @ui\r\n * @public\r\n */\r\n\r\nconst Image = ({alt, children, className, onLoad, onError, placeholder, sizing, src, style}) => {\r\n\r\n\tconst getImageSrc = () => {\r\n\t\tconst imageSrc = selectSrc(src) || placeholder;\r\n\t\tif (!imageSrc) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (placeholder && placeholder !== imageSrc) {\r\n\t\t\treturn `url(${imageSrc}), url(${placeholder})`;\r\n\t\t}\r\n\t\treturn `url(${imageSrc})`;\r\n\t};\r\n\r\n\tconst backgroundImage = getImageSrc();\r\n\tlet cx = classNames.bind(classes);\r\n\tlet imageContainer = cx({\r\n\t\t[classes.image]:true,\r\n\t\t[classes.fit]: sizing === 'fit',\r\n\t\t[classes.fill]: sizing === 'fill'\r\n\t});\r\n\timageContainer = className + ' ' + imageContainer;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"img\"\r\n\t\t\tdraggable=\"false\"\r\n\t\t\tclassName={imageContainer}\r\n\t\t\taria-label={['aria-label'] || alt}\r\n\t\t\tstyle={{...style, backgroundImage:backgroundImage}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t<img\r\n\t\t\t\tclassName={classes.img}\r\n\t\t\t\tsrc={backgroundImage}\r\n\t\t\t\talt={alt}\r\n\t\t\t\tonLoad={onLoad}\r\n\t\t\t\tonError={onError}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nImage.propTypes = {\r\n\t/**\r\n\t\t * String value for the alt attribute of the image.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @public\r\n\t\t */\r\n\talt:PropTypes.string,\r\n\r\n\t/**\r\n\t\t * The aria-label for the image.\r\n\t\t *\r\n\t\t * If unset, it defaults to the value of `alt`.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @public\r\n\t\t * @memberof ui/Image.Image.prototype\r\n\t\t */\r\n\t'aria-label':PropTypes.string,\r\n\r\n\t/**\r\n\t\t * Node for the children of an `Image`. Useful for overlays.\r\n\t\t *\r\n\t\t * @type {Node}\r\n\t\t * @public\r\n\t\t */\r\n\tchildren: PropTypes.node,\r\n\r\n\t/**\r\n\t\t * Called if the image has an error.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\tonError: PropTypes.func,\r\n\r\n\t/**\r\n\t\t * Called once the image is loaded.\r\n\t\t *\r\n\t\t * @type {Function}\r\n\t\t * @public\r\n\t\t */\r\n\tonLoad: PropTypes.func,\r\n\r\n\t/**\r\n\t\t * A placeholder image to be displayed before the image is loaded.\r\n\t\t *\r\n\t\t * For performance purposes, it should be pre-loaded or be a data url. If `src` is\r\n\t\t * unset, this value will be used as the `background-image`.\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default ''\r\n\t\t * @public\r\n\t\t */\r\n\tplaceholder: PropTypes.string,\r\n\r\n\t/**\r\n\t\t * Used to set the `background-size` of an `Image`.\r\n\t\t *\r\n\t\t * * `'fill'` - sets `background-size: cover`\r\n\t\t * * `'fit'` - sets `background-size: contain`\r\n\t\t * * `'none'` - uses the image's natural size\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default 'fill'\r\n\t\t * @public\r\n\t\t */\r\n\tsizing: PropTypes.oneOf(['fit', 'fill', 'none']),\r\n\r\n\t/**\r\n\t\t * String value or Object of values used to determine which image will appear on\r\n\t\t * a specific screenSize.\r\n\t\t *\r\n\t\t * @type {String|Object}\r\n\t\t * @public\r\n\t\t */\r\n\tsrc: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n\t/**\r\n\t\t * Used to set the `allignment` of an `Image` and `Title`.\r\n\t\t *\r\n\t\t * * `'horizontal'` - sets `image` and `title` horizontally\r\n\t\t * * `'vertical'` - sets `image` and `title` vertically\r\n\t\t *\r\n\t\t * @type {String}\r\n\t\t * @default 'horizontal'\r\n\t\t * @public\r\n\t\t */\r\n\ttype: PropTypes.oneOf(['horizontal', 'vertical'])\r\n};\r\n\r\nImage.defaultProps = {\r\n\tplaceholder: '',\r\n\tsizing: 'fill',\r\n\ttype:'horizontal'\r\n};\r\n\r\nexport default Image;\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\ScrollbarTrack.js",["1546"],"import classNames from 'classnames';\r\nimport {is} from '@enact/core/keymap';\r\nimport Accelerator from '@enact/spotlight/Accelerator';\r\nimport Spottable from '@enact/spotlight/Spottable';\r\nimport {Announce} from '@enact/ui/AnnounceDecorator';\r\nimport PropTypes from 'prop-types';\r\nimport React, {forwardRef, useCallback, useEffect, useRef} from 'react';\r\n\r\nimport $L from '../internal/$L';\r\n\r\nimport css from './ScrollbarTrack.module.less';\r\n\r\nconst nop = () => {};\r\nconst\r\n\tisDown = is('down'),\r\n\tisLeft = is('left'),\r\n\tisPageUp = is('pageUp'),\r\n\tisPageDown = is('pageDown'),\r\n\tisRight = is('right'),\r\n\tisUp = is('up');\r\n\r\nconst SpotlightAccelerator = new Accelerator();\r\nconst SpottableDiv = Spottable('div');\r\n\r\n/**\r\n * A Sandstone-styled scrollbar track with sandstone behavior\r\n *\r\n * @class ScrollbarTrack\r\n * @memberof sandstone/useScroll\r\n * @ui\r\n * @private\r\n */\r\nconst ScrollbarTrack = forwardRef((props, ref) => {\r\n\tconst\r\n\t\t{'aria-label': ariaLabel, cbAlertScrollbarTrack, focusableScrollbar, onInteractionForScroll, rtl, vertical, ...rest} = props,\r\n\t\tclassName = classNames(css.scrollbarTrack, {[css.vertical]: vertical, [css.focusableScrollbar]: focusableScrollbar}),\r\n\t\tScrollbarThumb = focusableScrollbar ? SpottableDiv : 'div',\r\n\t\tannounceRef = useRef({});\r\n\r\n\tuseEffect (() => {\r\n\t\tcbAlertScrollbarTrack();\r\n\t\tSpotlightAccelerator.reset();\r\n\r\n\t\treturn () => {\r\n\t\t\tSpotlightAccelerator.reset();\r\n\t\t};\r\n\t}, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\tconst consumeEventWithScroll = useCallback((scrollParam, ev) => {\r\n\t\tev.preventDefault();\r\n\t\tev.stopPropagation(); // stop propagation of React synthetic event to other components like PopupDecorator\r\n\t\tev.nativeEvent.stopImmediatePropagation(); // stop propagation of browser native event to Spotlight\r\n\t\tonInteractionForScroll(scrollParam);\r\n\t}, [onInteractionForScroll]);\r\n\r\n\tconst onKeyDown = useCallback((ev) => {\r\n\t\tif (SpotlightAccelerator.processKey(ev, nop)) {\r\n\t\t\tev.stopPropagation(); // stop propagation of React synthetic event to other components like PopupDecorator\r\n\t\t\tev.nativeEvent.stopImmediatePropagation(); // stop propagation of browser native event to Spotlight\r\n\t\t} else {\r\n\t\t\tconst\r\n\t\t\t\t{keyCode} = ev,\r\n\t\t\t\tisLeftRight = isLeft(keyCode) || isRight(keyCode),\r\n\t\t\t\tisUpDown = isUp(keyCode) || isDown(keyCode),\r\n\t\t\t\tisPageKey = isPageUp(keyCode) || isPageDown(keyCode),\r\n\t\t\t\tscrollParam = {\r\n\t\t\t\t\tinputType: isPageKey ? 'pageKey' : 'arrowKey',\r\n\t\t\t\t\tisPagination: isPageKey,\r\n\t\t\t\t\tisForward: (!rtl && isRight(keyCode)) || (rtl && isLeft(keyCode)) || isDown(keyCode) || isPageDown(keyCode),\r\n\t\t\t\t\tisVerticalScrollBar: vertical\r\n\t\t\t\t};\r\n\r\n\t\t\tif ((vertical && (isUpDown || isPageKey)) || (!vertical && (isLeftRight))) {\r\n\t\t\t\t// Do nothing when (!vertical && pageKey)\r\n\r\n\t\t\t\tif (!ev.repeat && announceRef.current.announce) {\r\n\t\t\t\t\tannounceRef.current.announce(\r\n\t\t\t\t\t\t(isDown(keyCode) || isPageDown(keyCode)) && $L('DOWN') ||\r\n\t\t\t\t\t\t(isUp(keyCode) || isPageUp(keyCode)) && $L('UP') ||\r\n\t\t\t\t\t\tisLeft(keyCode) && $L('LEFT') ||\r\n\t\t\t\t\t\t$L('RIGHT') // the case that isRight(keyCode) is true\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsumeEventWithScroll(scrollParam, ev);\r\n\t\t\t}\r\n\r\n\t\t\tif (!ev.repeat) {\r\n\t\t\t\tSpotlightAccelerator.reset();\r\n\t\t\t}\r\n\t\t}\r\n\t}, [consumeEventWithScroll, rtl, vertical]);\r\n\r\n\treturn (\r\n\t\t<div {...rest} className={className} ref={ref}>\r\n\t\t\t<ScrollbarThumb aria-label={ariaLabel} className={css.thumb} onKeyDown={onKeyDown}>\r\n\t\t\t\t<div className={classNames(css.directionIndicator, css.backward)} />\r\n\t\t\t\t<div className={classNames(css.directionIndicator, css.forward)} />\r\n\t\t\t</ScrollbarThumb>\r\n\t\t\t<Announce\r\n\t\t\t\tkey=\"announce\"\r\n\t\t\t\tref={announceRef}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nScrollbarTrack.displayName = 'ScrollbarTrack';\r\n\r\nScrollbarTrack.propTypes = /** @lends sandstone/useScroll.ScrollbarTrack.prototype */ {\r\n\t/**\r\n\t * Called when [ScrollbarTrack]{@link sandstone/useScroll.ScrollbarTrack} is updated.\r\n\t *\r\n\t * @type {Function}\r\n\t * @private\r\n\t */\r\n\tcbAlertScrollbarTrack: PropTypes.func,\r\n\r\n\t/**\r\n\t * `true` if scroll thumb is spottable.\r\n\t *\r\n\t * @type {Boolean|'byEnter'}\r\n\t * @private\r\n\t */\r\n\tfocusableScrollbar: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['byEnter'])]),\r\n\r\n\t/**\r\n\t * Called when the user requests scroll.\r\n\t *\r\n\t * @type {Function}\r\n\t * @private\r\n\t */\r\n\tonInteractionForScroll: PropTypes.func,\r\n\r\n\t/**\r\n\t * `true` if rtl, `false` if ltr.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @private\r\n\t */\r\n\trtl: PropTypes.bool,\r\n\r\n\t/**\r\n\t * `true` if vertical scroll, `false` if horizontal scroll.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @private\r\n\t */\r\n\tvertical: PropTypes.bool\r\n};\r\n\r\nScrollbarTrack.defaultProps = {\r\n\tcbAlertScrollbarTrack: nop,\r\n\tfocusableScrollbar: false,\r\n\tonInteractionForScroll: nop,\r\n\trtl: false,\r\n\tvertical: true\r\n};\r\n\r\nexport default ScrollbarTrack;\r\nexport {\r\n\tScrollbarTrack,\r\n\tScrollbarTrack as ScrollbarTrackBase\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\util\\generateClassNames\\generateClassNames.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useSpotlight.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useOverscrollEffect.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useEvent.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\useScroll\\useThemeScrollContentHandle.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\MarqueeBase\\index.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\TooltipDecorator\\TooltipLabel.js",["1547"],"import kind from '@enact/core/kind';\r\nimport {isRtlText} from '@enact/i18n/util';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport css from './Tooltip.module.less';\r\n\r\n/**\r\n * {@link sandstone/TooltipDecorator.TooltipLabel} is a stateless tooltip component with\r\n * Sandstone styling applied.\r\n *\r\n * @class TooltipLabel\r\n * @memberof sandstone/TooltipDecorator\r\n * @ui\r\n * @private\r\n */\r\nconst TooltipLabel = kind({\r\n\tname: 'TooltipLabel',\r\n\r\n\tpropTypes: /** @lends sandstone/TooltipDecorator.TooltipLabel.prototype */ {\r\n\t\t/**\r\n\t\t * The node to be displayed as the main content of the tooltip.\r\n\t\t *\r\n\t\t * @type {Node}\r\n\t\t * @required\r\n\t\t */\r\n\t\tchildren: PropTypes.node.isRequired,\r\n\r\n\t\t/**\r\n\t\t * The width of tooltip content in pixels (px). If the content goes over the given width,\r\n\t\t * then it will automatically wrap. When `null`, content does not wrap.\r\n\t\t *\r\n\t\t * @type {Number}\r\n\t\t * @public\r\n\t\t */\r\n\t\twidth: PropTypes.number\r\n\t},\r\n\r\n\tstyles: {\r\n\t\tcss\r\n\t},\r\n\r\n\tcomputed: {\r\n\t\tclassName: ({width, styler}) => styler.append({multi: !!width}),\r\n\t\tstyle: ({children, width, style}) => {\r\n\t\t\treturn {\r\n\t\t\t\t...style,\r\n\t\t\t\tdirection: isRtlText(children) ? 'rtl' : 'ltr',\r\n\t\t\t\twidth\r\n\t\t\t};\r\n\t\t}\r\n\t},\r\n\r\n\trender: ({children, ...rest}) => {\r\n\t\tdelete rest.width;\r\n\r\n\t\treturn (\r\n\t\t\t<div {...rest}>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n});\r\n\r\nexport default TooltipLabel;\r\nexport {\r\n\tTooltipLabel\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Scroller\\useEvent.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Popup\\PopupBase\\Transition.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\MarqueeBase\\MarqueeController.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\MarqueeBase\\MarqueeBase.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Marquee\\MarqueeBase\\MarqueeDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\resolution\\resolution.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Resizable\\Resizable.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioList\\AudioList.js",["1548","1549","1550"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageItem from \"../../../goldstone/ImageItem\";\r\nimport { VirtualGridList } from \"../../../goldstone/VirtualList/VirtualList\";\r\nimport ri from \"@enact/ui/resolution\";\r\nimport placeHolderImg from \"../../../assets/images/defaultmusic.jpg\";\r\nimport { getEncodedPath } from \"../../components/AudioPlayer/AudioPlayerBase/util\";\r\n\r\nconst audioList = ({ audiolist, handleNavigate }) => {\r\n  const renderItem = ({ index, ...rest }) => {\r\n    let encodedPath = getEncodedPath(audiolist[index].thumbnail);\r\n\r\n    return (\r\n      <ImageItem\r\n        {...rest}\r\n        src={encodedPath}\r\n        placeholder={placeHolderImg}\r\n        onClick={() => handleNavigate(\"/audioplayer\", audiolist[index], index)}\r\n      >\r\n        {audiolist[index].title}\r\n      </ImageItem>\r\n    );\r\n  };\r\n  audiolist = audiolist || [];\r\n  return audiolist.length === 0 ? (\r\n    <h3>Audio fodler does not exist in storage device</h3>\r\n  ) : (\r\n    <VirtualGridList\r\n      direction=\"vertical\"\r\n      dataSize={audiolist.length}\r\n      itemRenderer={renderItem}\r\n      itemSize={{\r\n        minWidth: ri.scale(500),\r\n        minHeight: ri.scale(500),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\naudioList.propTypes = {\r\n  handleNavigate: PropTypes.func.isRequired,\r\n  audioList: PropTypes.array,\r\n};\r\n\r\naudioList.default = {\r\n  audioList: [],\r\n};\r\n\r\nexport default audioList;\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AppLog\\AppLog.js",[],["1551","1552","1553"],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\views\\AudioPanel\\AudioPanel.js",["1554","1555","1556","1557"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePath } from \"../../actions/navigationActions\";\r\nimport { getCurrentAudioMetaData } from \"../../actions/audioActions\";\r\nimport AudioPlayer from \"../../components/AudioPlayer/AudioPlayer\";\r\n\r\nconst AudioPanel = ({\r\n  audioMetaData,\r\n  audioList,\r\n  audioIndex,\r\n  handleBack,\r\n  getAudioMetaData,\r\n}) => {\r\n  const handleNextAudio = () => {\r\n    if (audioList && audioList.length > 0) {\r\n      if (audioIndex === audioList.length - 1) {\r\n        getAudioMetaData(audioList[0].uri, 0);\r\n      } else {\r\n        getAudioMetaData(audioList[audioIndex + 1].uri, audioIndex + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePreviousAudio = () => {\r\n    if (audioList && audioList.length > 0) {\r\n      if (audioIndex === 0) {\r\n        getAudioMetaData(\r\n          audioList[audioList.length - 1].uri,\r\n          audioList.length - 1\r\n        );\r\n      } else {\r\n        getAudioMetaData(audioList[audioIndex - 1].uri, audioIndex - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AudioPlayer\r\n      autoCloseTimeout={7000}\r\n      disabled={false}\r\n      feedbackHideDelay={3000}\r\n      handleBack={() => handleBack(\"home\")}\r\n      handleNext={handleNextAudio}\r\n      handlePrevious={handlePreviousAudio}\r\n      miniFeedbackHideDelay={2000}\r\n      muted={false}\r\n      noAutoPlay={false}\r\n      noAutoShowMediaControls={false}\r\n      noMediaSliderFeedback={false}\r\n      noSlider={false}\r\n      pauseAtEnd\r\n      playlist={audioMetaData}\r\n      seekDisabled={false}\r\n      spotlightDisabled={false}\r\n      thumbnailSrc={audioMetaData.thumbnail}\r\n      title={\"Goldstone AudioPlayer \"}\r\n      titleHideDelay={4000}\r\n    />\r\n  );\r\n};\r\n\r\nAudioPanel.propTypes = {\r\n  getAudioMetaData: PropTypes.func,\r\n  handleBack: PropTypes.func,\r\n  audioIndex: PropTypes.number,\r\n  audioList: PropTypes.array,\r\n  audioMetaData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  audio: { currentAudioMetaData, audioList, audioIndex },\r\n}) => {\r\n  return {\r\n    audioMetaData: currentAudioMetaData,\r\n    audioList: audioList,\r\n    audioIndex: audioIndex,\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    handleBack: (path) => dispatch(changePath(path)),\r\n    getAudioMetaData: (uri, index) =>\r\n      dispatch(\r\n        getCurrentAudioMetaData({\r\n          uri: uri,\r\n          audioIndex: index,\r\n        })\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(AudioPanel);\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Spinner\\Spinner.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ActionGuide\\ActionGuide.js",["1558"],"import Pure from '@enact/ui/internal/Pure';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'ramda/src/compose';\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport Icon from '../Icon';\r\nimport {Marquee} from '../Marquee';\r\nimport Skinnable from '../Skinnable';\r\n\r\nimport componentCss from './ActionGuide.module.less';\r\n\r\nconst ActionGuideBase = ({children, icon, ...rest}) => {\r\n\tconst appendedClassName = classNames([componentCss.actionGuide, rest.className]);\r\n\tdelete rest.className;\r\n\treturn (\r\n\t\t<div {...rest} className={appendedClassName}>\r\n\t\t\t<Icon size=\"small\" className={componentCss.icon}>{icon}</Icon>\r\n\t\t\t<Marquee className={componentCss.label} marqueeOn=\"render\" alignment=\"center\">{children}</Marquee>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nActionGuideBase.propTypes = {\r\n\t/**\r\n\t\t* The contents for the action guide.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @public\r\n\t*/\r\n\tchildren: PropTypes.string,\r\n\r\n\t/**\r\n\t\t* The icon displayed within the action guide.\r\n\t\t*\r\n\t\t* @type {String}\r\n\t\t* @default 'arrowsmalldown'\r\n\t\t* @public\r\n\t*/\r\n\ticon: PropTypes.string\r\n};\r\n\r\nActionGuideBase.defaultProps = {\r\n\ticon: 'arrowsmalldown'\r\n};\r\n\r\nconst ActionGuideDecorator = compose(\r\n\tPure,\r\n\tSkinnable\r\n);\r\n\r\nconst ActionGuide = ActionGuideDecorator(ActionGuideBase);\r\n\r\nexport default ActionGuide;\r\nexport {\r\n\tActionGuide,\r\n\tActionGuideBase,\r\n\tActionGuideDecorator\r\n};\r\n",["1559","1560","1561"],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\Slider.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\SliderBehaviorDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\utils.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\SliderBase\\SliderBase.js",["1562"],"import EnactPropTypes from '@enact/core/internal/prop-types';\r\nimport Changeable from '@enact/ui/Changeable';\r\nimport ComponentOverride from '@enact/ui/ComponentOverride';\r\nimport Touchable from '@enact/ui/Touchable';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'ramda/src/compose';\r\nimport React from 'react';\r\nimport {KnobBase} from './Knob';\r\nimport PositionDecorator from './PositionDecorator';\r\nimport componentCss from './SliderBase.module.less';\r\nimport {calcProportion} from '../../util/calcProportion';\r\nimport classNames from 'classnames';\r\nimport generateClassNames from '../../util/generateClassNames';\r\n\r\nconst SliderBase = (props) => {\r\n\tconst {\r\n\t\tbackgroundProgress,\r\n\t\tcss,\r\n\t\tdisabled,\r\n\t\torientation,\r\n\t\tnoFill,\r\n\t\tpressed,\r\n\t\tprogressBarComponent,\r\n\t\tprogressAnchor,\r\n\t\ttooltipComponent,\r\n\t\t...rest\r\n\t} = props;\r\n\tdelete rest.knobComponent;\r\n\tconst calcPercentage = ({max, min, value = min}) => calcProportion(min, max, value);\r\n\tconst calCulatedStyle = ({max, min, value = min}) => {\r\n\t\tlet proportion = calcProportion(min, max, value);\r\n\r\n\t\treturn {\r\n\t\t\t...rest.style,\r\n\t\t\t'--ui-slider-proportion-end-knob': proportion\r\n\t\t};\r\n\t};\r\n\tconst appendedClassName = [componentCss.slider, generateClassNames(componentCss, {orientation, disabled, noFill, pressed}), generateClassNames(css, {orientation, disabled, noFill, pressed}), rest.className];\r\n\tdelete rest.className;\r\n\treturn (\r\n\r\n\t\t<div\r\n\t\t\tclassName={classNames(appendedClassName, componentCss.slider, css.slider)}\r\n\t\t\tstyle={calCulatedStyle(props)}\r\n\t\t\tdisabled={disabled}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\r\n\t\t\t<ComponentOverride\r\n\t\t\t\tclassName={classNames({[css.progressBar]: true, [componentCss.progressBar]: true})}\r\n\t\t\t\tbackgroundProgress={backgroundProgress}\r\n\t\t\t\tcomponent={progressBarComponent}\r\n\t\t\t\torientation={orientation}\r\n\t\t\t\tprogress={calcPercentage(props)}\r\n\t\t\t\tprogressAnchor={progressAnchor}\r\n\t\t\t>\r\n\t\t\t\t<ComponentOverride\r\n\t\t\t\t\tclassName={classNames({[css.knob]: true, [componentCss.knob]: true})}\r\n\t\t\t\t\tcomponent={KnobBase}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\torientation={orientation}\r\n\t\t\t\t\tproportion={calcPercentage(props)}\r\n\t\t\t\t\ttooltipComponent={tooltipComponent}\r\n\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t/>\r\n\t\t\t</ComponentOverride>\r\n\t\t</div >\r\n\t);\r\n\r\n};\r\n\r\nSliderBase.propTypes = {\r\n\tprogressBarComponent: EnactPropTypes.componentOverride.isRequired,\r\n\tbackgroundProgress: PropTypes.number,\r\n\tcss: PropTypes.object,\r\n\tdisabled: PropTypes.bool,\r\n\tknobComponent: EnactPropTypes.componentOverride,\r\n\tmax: PropTypes.number,\r\n\tmin: PropTypes.number,\r\n\tnoFill: PropTypes.bool,\r\n\torientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n\tpressed: PropTypes.bool,\r\n\tprogressAnchor: PropTypes.number,\r\n\tstep: PropTypes.number,\r\n\ttooltipComponent: EnactPropTypes.componentOverride,\r\n\tvalue: PropTypes.number\r\n\r\n};\r\nSliderBase.defaultProps = {\r\n\tdisabled: false,\r\n\tknobComponent: KnobBase,\r\n\tmin: 0,\r\n\tmax: 100,\r\n\tnoFill: false,\r\n\torientation: 'horizontal',\r\n\tprogressAnchor: 0,\r\n\tstep: 1\r\n};\r\nconst SliderDecorator = compose(\r\n\tChangeable,\r\n\tPositionDecorator,\r\n\tTouchable({activeProp: 'pressed'})\r\n);\r\nconst Slider = SliderDecorator(SliderBase);\r\n\r\nexport default Slider;\r\n\r\nexport {\r\n\tKnobBase,\r\n\tSlider,\r\n\tSliderBase,\r\n\tSliderDecorator\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ProgressBar\\ProgressBarBase\\ProgressBarBase.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ProgressBar\\ProgressBarComponent.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\internal\\validators\\validators.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\SliderBase\\Knob.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\Slider\\SliderBase\\PositionDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\util\\calcProportion.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\goldstone\\ProgressBar\\ProgressBarTooltip\\ProgressBarTooltip.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayer.js",["1563"],"/**\r\n * Provides Goldstone-themed Audio player component with out of the box features.\r\n *\r\n * @exports AudioPlayer\r\n */\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useReducer } from \"react\";\r\nimport AudioPlayerBase from \"./AudioPlayerBase/AudioPlayerBase\";\r\nimport AudioPlayerReducer from \"./Reducers/AudioPlayerReducer\";\r\n\r\nconst initialState = {\r\n  current: 0,\r\n  repeat: {\r\n    type: 0,\r\n    loop: false,\r\n  },\r\n};\r\nconst AudioPlayer = ({\r\n  handleBack,\r\n  handleNext,\r\n  handlePrevious,\r\n  playlist,\r\n  ...rest\r\n}) => {\r\n  const [state] = useReducer(AudioPlayerReducer, initialState);\r\n  const getAudioType = (file_path) => {\r\n    let mimeType = \"audio/mp3\";\r\n    if (file_path && file_path.length > 0) {\r\n      let extension = file_path.substring(file_path.lastIndexOf(\".\") + 1);\r\n      if (extension && extension.length > 0) {\r\n        mimeType = \"audio/\" + extension;\r\n      }\r\n    }\r\n    return mimeType;\r\n  };\r\n  let extType = getAudioType(playlist.file_path);\r\n  return (\r\n    <AudioPlayerBase\r\n      {...rest}\r\n      onJumpForward={handleNext}\r\n      onJumpBackward={handlePrevious}\r\n      onBack={handleBack}\r\n      loop={state.repeat.loop}\r\n      poster={playlist.thumbnail}\r\n      thumbnailSrc={playlist.thumbnail}\r\n      title={playlist.title}\r\n      artist={playlist.artist}\r\n      album={playlist.album}\r\n      infoComponents={playlist.title}\r\n    >\r\n      <source src={playlist.file_path} type={extType} />\r\n    </AudioPlayerBase>\r\n  );\r\n};\r\n\r\nAudioPlayer.propTypes = {\r\n  /**\r\n   * Function to handle navigation\r\n   *\r\n   * @type {Function}\r\n   */\r\n  handleBack: PropTypes.func,\r\n\r\n  /**\r\n   * Function to handle Next audio\r\n   *\r\n   * @type {Function}\r\n   */\r\n  handleNext: PropTypes.func,\r\n\r\n  /**\r\n   * Function to handle Previous audio\r\n   *\r\n   * @type {Function}\r\n   */\r\n  handlePrevious: PropTypes.func,\r\n\r\n  /**\r\n   * Contains the list of audios to be played\r\n   *\r\n   * @type {Array}\r\n   */\r\n  playlist: PropTypes.object,\r\n};\r\n\r\nexport default AudioPlayer;\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\Reducers\\AudioPlayerReducer.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\util.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\AudioPlayerBase.js",["1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577"],"/**\r\n * Provides Goldstone-themed video player components.\r\n *\r\n * @module goldstone/VideoPlayer\r\n * @exports Video\r\n * @exports VideoPlayer\r\n * @exports VideoPlayerBase\r\n * @exports MediaControls\r\n */\r\nimport ApiDecorator from \"@enact/core/internal/ApiDecorator\";\r\nimport { on, off } from \"@enact/core/dispatcher\";\r\nimport { memoize } from \"@enact/core/util\";\r\nimport {\r\n  adaptEvent,\r\n  call,\r\n  forKey,\r\n  forward,\r\n  forwardWithPrevent,\r\n  handle,\r\n  preventDefault,\r\n  stopImmediate,\r\n  returnsTrue,\r\n} from \"@enact/core/handle\";\r\nimport { is } from \"@enact/core/keymap\";\r\nimport { platform } from \"@enact/core/platform\";\r\nimport EnactPropTypes from \"@enact/core/internal/prop-types\";\r\nimport { Job } from \"@enact/core/util\";\r\nimport { I18nContextDecorator } from \"@enact/i18n/I18nDecorator\";\r\nimport { toUpperCase } from \"@enact/i18n/util\";\r\nimport Spotlight from \"@enact/spotlight\";\r\nimport { SpotlightContainerDecorator } from \"@enact/spotlight/SpotlightContainerDecorator\";\r\nimport { Spottable } from \"@enact/spotlight/Spottable\";\r\nimport ComponentOverride from \"@enact/ui/ComponentOverride\";\r\nimport { FloatingLayerDecorator } from \"@enact/ui/FloatingLayer\";\r\nimport { FloatingLayerContext } from \"@enact/ui/FloatingLayer/FloatingLayerDecorator\";\r\nimport Slottable from \"@enact/ui/Slottable\";\r\nimport Touchable from \"@enact/ui/Touchable\";\r\nimport DurationFmt from \"ilib/lib/DurationFmt\";\r\nimport equals from \"ramda/src/equals\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useContext,\r\n  useRef,\r\n  memo,\r\n} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Skinnable from \"../../../../goldstone/Skinnable/Skinnable\";\r\nimport Spinner from \"../../../../goldstone/Spinner/Spinner\";\r\nimport Button from \"../../../../goldstone/Button/Button\";\r\nimport { calcNumberValueOfPlaybackRate } from \"./util\";\r\nimport Overlay from \"./Overlay\";\r\nimport Media from \"./Media\";\r\nimport MediaControls from \"./MediaControls\";\r\nimport MediaTitle from \"./MediaTitle\";\r\nimport MediaSlider from \"./MediaSlider\";\r\nimport Times from \"./Times\";\r\nimport Audio from \"./Audio\";\r\nimport css from \"./AudioPlayer.module.less\";\r\nimport AlbumInfo from \"./AlbumInfo\";\r\n\r\nconst SpottableDiv = Touchable(Spottable(\"div\"));\r\nconst RootContainer = memo(\r\n  SpotlightContainerDecorator(\r\n    {\r\n      enterTo: \"default-element\",\r\n      defaultElement: [`.${css.controlsHandleAbove}`, `.${css.controlsFrame}`],\r\n    },\r\n    \"div\"\r\n  )\r\n);\r\n\r\nconst ControlsContainer = memo(\r\n  SpotlightContainerDecorator(\r\n    {\r\n      enterTo: \"\",\r\n      straightOnly: true,\r\n    },\r\n    \"div\"\r\n  )\r\n);\r\n\r\nconst memoGetDurFmt = memoize(\r\n  (/* locale */) =>\r\n    new DurationFmt({\r\n      length: \"medium\",\r\n      style: \"clock\",\r\n      useNative: false,\r\n    })\r\n);\r\n\r\nconst getDurFmt = (locale) => {\r\n  if (typeof window === \"undefined\") return null;\r\n\r\n  return memoGetDurFmt(locale);\r\n};\r\n\r\nconst forwardWithState = (type) =>\r\n  adaptEvent(call(\"addStateToEvent\"), forwardWithPrevent(type));\r\n\r\n// provide forwarding of events on media controls\r\nconst forwardControlsAvailable = forward(\"onControlsAvailable\");\r\nconst forwardPlay = forward(\"onPlay\");\r\nconst forwardPause = forwardWithState(\"onPause\");\r\n\r\n// Function to get previous value from the state\r\nconst usePrevious = (value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n};\r\n\r\n/**\r\n * A player for audio\r\n *\r\n * @class AudioPlayerBase\r\n * @ui\r\n * @public\r\n */\r\nfunction AudioPlayerBase({\r\n  autoCloseTimeout,\r\n  className,\r\n  feedbackHideDelay,\r\n  disabled,\r\n  infoComponents,\r\n  jumpBy,\r\n  loading,\r\n  locale,\r\n  mediaControlsComponent,\r\n  miniFeedbackHideDelay,\r\n  noAutoPlay,\r\n  noAutoShowMediaControls,\r\n  noMediaSliderFeedback,\r\n  noSlider,\r\n  noSpinner,\r\n  onBack,\r\n  onJumpBackward,\r\n  onJumpForward,\r\n  seekDisabled,\r\n  selection,\r\n  spotlightDisabled,\r\n  spotlightId,\r\n  style,\r\n  thumbnailSrc,\r\n  title,\r\n  titleHideDelay,\r\n  videoComponent: VideoComponent,\r\n  ...mediaProps\r\n}) {\r\n  /* eslint no-use-before-define: [\"error\", { \"variables\": false }]*/\r\n  let handleSpotlightUpFromSlider = null;\r\n  const titleRef = useRef(null);\r\n  const player = useRef({});\r\n  const playbackRate = useRef(null);\r\n  // Internal State\r\n  const audio = useRef(null);\r\n  const prevCommand = useRef(noAutoPlay ? \"pause\" : \"play\");\r\n  const speedIndex = useRef(0);\r\n  const id = Math.random().toString(36).substr(2, 8);\r\n  const sliderScrubbing = useRef();\r\n  const sliderKnobProportion = useRef(0);\r\n  const pulsedPlaybackRate = useRef();\r\n  const pulsedPlaybackState = useRef();\r\n  const mediaControlsSpotlightId = useRef(`${spotlightId}_mediaControls`);\r\n  const showMiniFeedback = useRef(false);\r\n  const [state, setSettings] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    error: false,\r\n    loading: false,\r\n    paused: noAutoPlay,\r\n    playbackRate: 1,\r\n\r\n    // Non-standard state computed from properties\r\n    bottomControlsRendered: true,\r\n    feedbackAction: \"idle\",\r\n    feedbackVisible: false,\r\n    infoVisible: false,\r\n    mediaControlsVisible: true,\r\n    mediaSliderVisible: true,\r\n    miniFeedbackVisible: false,\r\n    proportionLoaded: 0,\r\n    proportionPlayed: 0,\r\n    sourceUnavailable: false,\r\n    titleVisible: true,\r\n  });\r\n\r\n  const prevStateRef = usePrevious(state);\r\n  const prevPropsRef = usePrevious(arguments[0]);\r\n  const context = useContext(FloatingLayerContext);\r\n  const floatingLayerController = useRef();\r\n  const hideFeedback = () => {\r\n    if (state.feedbackVisible && state.feedbackAction !== \"focus\") {\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        feedbackVisible: false,\r\n        feedbackAction: \"idle\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const hideTitle = () => {\r\n    setSettings((prevState) => ({ ...prevState, titleVisible: false }));\r\n  };\r\n\r\n  const stopDelayedFeedbackHide = useCallback(() => {\r\n    new Job(hideFeedback).stop();\r\n  }, [hideFeedback]);\r\n\r\n  const stopDelayedTitleHide = useCallback(() => {\r\n    new Job(hideTitle).stop();\r\n  }, [hideTitle]);\r\n\r\n  const doAutoClose = () => {\r\n    stopDelayedFeedbackHide();\r\n    stopDelayedTitleHide();\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      feedbackVisible: false,\r\n      mediaControlsVisible: false,\r\n      mediaSliderVisible:\r\n        prevState.mediaSliderVisible && prevState.miniFeedbackVisible,\r\n      infoVisible: false,\r\n    }));\r\n  };\r\n\r\n  const autoCloseJob = new Job(doAutoClose);\r\n  const startAutoCloseTimeout = useCallback(() => {\r\n    // If state.more is used as a reference for when this function should fire, timing for\r\n    // detection of when \"more\" is pressed vs when the state is updated is mismatched. Using an\r\n    // instance variable that's only set and used for this express purpose seems cleanest.\r\n    if (autoCloseTimeout && state.mediaControlsVisible) {\r\n      // autoCloseJob.startAfter(autoCloseTimeout);\r\n    }\r\n  }, [autoCloseTimeout, state.mediaControlsVisible]);\r\n\r\n  const activityDetected = useCallback(() => {\r\n    startAutoCloseTimeout();\r\n  }, [startAutoCloseTimeout]);\r\n\r\n  const startDelayedFeedbackHide = useCallback(() => {\r\n    if (feedbackHideDelay) {\r\n      new Job(hideFeedback).startAfter(feedbackHideDelay);\r\n    }\r\n  }, [feedbackHideDelay, hideFeedback]);\r\n\r\n  const startDelayedTitleHide = useCallback(() => {\r\n    if (titleHideDelay) {\r\n      new Job(hideTitle).startAfter(titleHideDelay);\r\n    }\r\n  }, [hideTitle, titleHideDelay]);\r\n\r\n  /**\r\n   * Shows media controls.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @public\r\n   */\r\n  const showControls = useCallback(() => {\r\n    if (disabled) {\r\n      return;\r\n    }\r\n    startDelayedFeedbackHide();\r\n    startDelayedTitleHide();\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      bottomControlsRendered: true,\r\n      feedbackAction: \"idle\",\r\n      feedbackVisible: true,\r\n      mediaControlsVisible: true,\r\n      mediaSliderVisible: true,\r\n      miniFeedbackVisible: false,\r\n      titleVisible: true,\r\n    }));\r\n  }, [disabled, startDelayedFeedbackHide, startDelayedTitleHide, state]);\r\n\r\n  const showControlsFromPointer = () => {\r\n    Spotlight.setPointerMode(false);\r\n    showControls();\r\n  };\r\n\r\n  const handleGlobalKeyDown = handle(\r\n    returnsTrue(activityDetected),\r\n    forKey(\"down\"),\r\n    () =>\r\n      !state.mediaControlsVisible &&\r\n      !Spotlight.getCurrent() &&\r\n      Spotlight.getPointerMode() &&\r\n      !spotlightDisabled,\r\n    preventDefault,\r\n    stopImmediate,\r\n    showControlsFromPointer\r\n  );\r\n\r\n  const showFeedback = useCallback(() => {\r\n    if (state.mediaControlsVisible) {\r\n      setSettings((prevState) => ({ ...prevState, feedbackVisible: true }));\r\n    } else {\r\n      const shouldShowSlider =\r\n        pulsedPlaybackState.current !== null ||\r\n        calcNumberValueOfPlaybackRate(playbackRate.current) !== 1;\r\n\r\n      if (\r\n        showMiniFeedback.current &&\r\n        (!state.miniFeedbackVisible ||\r\n          state.mediaSliderVisible !== shouldShowSlider)\r\n      ) {\r\n        setSettings((prevState) => ({\r\n          ...prevState,\r\n          mediaSliderVisible: shouldShowSlider && !noMediaSliderFeedback,\r\n          miniFeedbackVisible: !(\r\n            prevState.loading ||\r\n            !prevState.duration ||\r\n            prevState.error\r\n          ),\r\n        }));\r\n      }\r\n    }\r\n  }, [\r\n    noMediaSliderFeedback,\r\n    state.mediaControlsVisible,\r\n    state.mediaSliderVisible,\r\n    state.miniFeedbackVisible,\r\n  ]);\r\n\r\n  /**\r\n   * Set the media playback time index\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @param {Number} timeIndex - Time index to seek\r\n   * @public\r\n   */\r\n  const seek = useCallback(\r\n    (timeIndex) => {\r\n      if (\r\n        !seekDisabled &&\r\n        !isNaN(audio.current.duration) &&\r\n        !state.sourceUnavailable\r\n      ) {\r\n        audio.current.currentTime = timeIndex;\r\n      } else {\r\n        forward(\"onSeekFailed\", {}, arguments[0]);\r\n      }\r\n    },\r\n    [seekDisabled, state.sourceUnavailable]\r\n  );\r\n\r\n  const hideMiniFeedback = () => {\r\n    if (state.miniFeedbackVisible) {\r\n      showMiniFeedback.current = false;\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        mediaSliderVisible: false,\r\n        miniFeedbackVisible: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const hideMiniFeedbackJob = new Job(hideMiniFeedback);\r\n\r\n  const startDelayedMiniFeedbackHide = useCallback(\r\n    (delay = miniFeedbackHideDelay) => {\r\n      if (delay) {\r\n        hideMiniFeedbackJob.startAfter(delay);\r\n      }\r\n    },\r\n    [hideMiniFeedbackJob, miniFeedbackHideDelay]\r\n  );\r\n\r\n  /**\r\n   * Step a given amount of time away from the current playback position.\r\n   * Like [seek]{@link goldstone/VideoPlayer.VideoPlayer#seek} but relative.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @param {Number} distance - Time value to jump\r\n   * @public\r\n   */\r\n  const jump = useCallback(\r\n    (distance) => {\r\n      if (state.sourceUnavailable) {\r\n        return;\r\n      }\r\n\r\n      pulsedPlaybackRate.current = toUpperCase(\r\n        new DurationFmt({ length: \"long\" }).format({ second: jumpBy })\r\n      );\r\n      pulsedPlaybackState.current =\r\n        distance > 0 ? \"jumpForward\" : \"jumpBackward\";\r\n      showFeedback();\r\n      startDelayedFeedbackHide();\r\n      seek(state.currentTime + distance);\r\n      startDelayedMiniFeedbackHide();\r\n    },\r\n    [\r\n      jumpBy,\r\n      seek,\r\n      showFeedback,\r\n      startDelayedFeedbackHide,\r\n      startDelayedMiniFeedbackHide,\r\n      state.currentTime,\r\n      state.sourceUnavailable,\r\n    ]\r\n  );\r\n\r\n  const stopDelayedMiniFeedbackHide = useCallback(() => {\r\n    hideMiniFeedbackJob.stop();\r\n  }, [hideMiniFeedbackJob]);\r\n\r\n  const clearPulsedPlayback = () => {\r\n    pulsedPlaybackRate.current = null;\r\n    pulsedPlaybackState.current = null;\r\n  };\r\n\r\n  const stopAutoCloseTimeout = useCallback(() => {\r\n    autoCloseJob.stop();\r\n  }, [autoCloseJob]);\r\n\r\n  const renderBottomControl = new Job(() => {\r\n    if (!state.bottomControlsRendered) {\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        bottomControlsRendered: true,\r\n      }));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    on(\"mousemove\", activityDetected);\r\n    if (platform.touch) {\r\n      on(\"touchmove\", activityDetected);\r\n    }\r\n    document.addEventListener(\"keydown\", handleGlobalKeyDown, {\r\n      capture: true,\r\n    });\r\n    document.addEventListener(\"wheel\", activityDetected, { capture: true });\r\n    startDelayedFeedbackHide();\r\n    if (context && typeof context === \"function\") {\r\n      floatingLayerController.current = context(() => {});\r\n    }\r\n\r\n    // Cleanup\r\n    return () => {\r\n      off(\"mousemove\", activityDetected);\r\n      if (platform.touch) {\r\n        off(\"touchmove\", activityDetected);\r\n      }\r\n      document.removeEventListener(\"keydown\", handleGlobalKeyDown, {\r\n        capture: true,\r\n      });\r\n      document.removeEventListener(\"wheel\", activityDetected, {\r\n        capture: true,\r\n      });\r\n      stopAutoCloseTimeout();\r\n      stopDelayedTitleHide();\r\n      stopDelayedFeedbackHide();\r\n      stopDelayedMiniFeedbackHide();\r\n      renderBottomControl.stop();\r\n      if (floatingLayerController.current) {\r\n        floatingLayerController.current.unregister();\r\n      }\r\n    };\r\n  }, [\r\n    activityDetected,\r\n    context,\r\n    handleGlobalKeyDown,\r\n    renderBottomControl,\r\n    startDelayedFeedbackHide,\r\n    stopAutoCloseTimeout,\r\n    stopDelayedFeedbackHide,\r\n    stopDelayedMiniFeedbackHide,\r\n    stopDelayedTitleHide,\r\n  ]);\r\n\r\n  const getHeightForElement = (elementName) => {\r\n    const element = player.current.querySelector(`.${css[elementName]}`);\r\n    if (element) {\r\n      return element.offsetHeight;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      titleRef.current &&\r\n      state.infoVisible &&\r\n      (!prevStateRef.infoVisible ||\r\n        !equals(infoComponents, prevPropsRef.infoComponents))\r\n    ) {\r\n      titleRef.current.style.setProperty(\r\n        \"--infoComponentsOffset\",\r\n        `${getHeightForElement(\"infoComponents\")}px`\r\n      );\r\n    }\r\n\r\n    if (\r\n      (!state.mediaControlsVisible &&\r\n        prevStateRef &&\r\n        prevStateRef.mediaControlsVisible !== state.mediaControlsVisible) ||\r\n      (!state.mediaSliderVisible &&\r\n        prevStateRef &&\r\n        prevStateRef.mediaSliderVisible !== state.mediaSliderVisible)\r\n    ) {\r\n      if (typeof floatingLayerController.current !== \"undefined\") {\r\n        floatingLayerController.current.notify({ action: \"closeAll\" });\r\n      }\r\n    }\r\n\r\n    if (\r\n      spotlightId !== prevPropsRef &&\r\n      prevPropsRef &&\r\n      prevPropsRef.spotlightId\r\n    ) {\r\n      mediaControlsSpotlightId.current = `${spotlightId}_mediaControls`;\r\n    }\r\n\r\n    if (\r\n      !state.mediaControlsVisible &&\r\n      prevStateRef &&\r\n      prevStateRef.mediaControlsVisible\r\n    ) {\r\n      forwardControlsAvailable({ available: false }, arguments[0]);\r\n      stopAutoCloseTimeout();\r\n\r\n      if (!spotlightDisabled) {\r\n        // If last focused item were in the media controls or slider, we need to explicitly\r\n        // blur the element when MediaControls hide. See ENYO-5648\r\n        const current = Spotlight.getCurrent();\r\n        const bottomControls = document.querySelector(`.${css.bottom}`);\r\n        if (current && bottomControls && bottomControls.contains(current)) {\r\n          current.blur();\r\n        }\r\n        // when in pointer mode, the focus call below will only update the last focused for\r\n        // the video player and not set the active container to the video player which will\r\n        // cause focus to land back on the media controls button when spotlight restores\r\n        // focus.\r\n        if (Spotlight.getPointerMode()) {\r\n          Spotlight.setActiveContainer(spotlightId);\r\n        }\r\n        // Set focus to the hidden spottable control - maintaining focus on available spottable\r\n        // controls, which prevents an additional 5-way attempt in order to re-show media controls\r\n        Spotlight.focus(`.${css.controlsHandleAbove}`);\r\n      }\r\n    } else if (\r\n      state.mediaControlsVisible &&\r\n      prevStateRef &&\r\n      !prevStateRef.mediaControlsVisible\r\n    ) {\r\n      forwardControlsAvailable({ available: true }, arguments[0]);\r\n      startAutoCloseTimeout();\r\n      if (!spotlightDisabled) {\r\n        const current = Spotlight.getCurrent();\r\n        if (!current || player.current.contains(current)) {\r\n          // Set focus within media controls when they become visible.\r\n          Spotlight.focus(mediaControlsSpotlightId.current);\r\n        }\r\n      }\r\n    }\r\n    // Once video starts loading it queues bottom control render until idle\r\n    if (\r\n      state.bottomControlsRendered &&\r\n      prevStateRef &&\r\n      !prevStateRef.bottomControlsRendered &&\r\n      !state.mediaControlsVisible\r\n    ) {\r\n      showControls();\r\n    }\r\n  }, [\r\n    arguments,\r\n    infoComponents,\r\n    prevPropsRef,\r\n    prevStateRef,\r\n    showControls,\r\n    spotlightDisabled,\r\n    spotlightId,\r\n    startAutoCloseTimeout,\r\n    state.bottomControlsRendered,\r\n    state.infoVisible,\r\n    state.mediaControlsVisible,\r\n    state.mediaSliderVisible,\r\n    stopAutoCloseTimeout,\r\n  ]);\r\n\r\n  const preventTimeChange = useCallback(\r\n    (time) => {\r\n      const isTimeBeyondSelection = () => {\r\n        // if selection isn't set or only contains the starting value, there isn't a valid selection\r\n        // with which to test the time\r\n        if (selection != null && selection.length >= 2) {\r\n          const [start, end] = selection;\r\n\r\n          return time > end || time < start;\r\n        }\r\n\r\n        return false;\r\n      };\r\n\r\n      return (\r\n        isTimeBeyondSelection(time) &&\r\n        !forwardWithPrevent(\r\n          \"onSeekOutsideSelection\",\r\n          { type: \"onSeekOutsideSelection\", time },\r\n          arguments[0]\r\n        )\r\n      );\r\n    },\r\n    [selection]\r\n  );\r\n\r\n  /**\r\n   * Hides media controls.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @public\r\n   */\r\n  const hideControls = useCallback(() => {\r\n    stopDelayedFeedbackHide();\r\n    stopDelayedMiniFeedbackHide();\r\n    stopDelayedTitleHide();\r\n    stopAutoCloseTimeout();\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      feedbackAction: \"idle\",\r\n      feedbackVisible: false,\r\n      mediaControlsVisible: false,\r\n      mediaSliderVisible: false,\r\n      miniFeedbackVisible: false,\r\n      infoVisible: false,\r\n    }));\r\n  }, [\r\n    state,\r\n    stopAutoCloseTimeout,\r\n    stopDelayedFeedbackHide,\r\n    stopDelayedMiniFeedbackHide,\r\n    stopDelayedTitleHide,\r\n  ]);\r\n\r\n  // only show mini feedback if playback controls are invoked by a key event\r\n  const shouldShowMiniFeedback = (ev) => {\r\n    if (ev.type === \"keyup\") {\r\n      showMiniFeedback.current = true;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleLoadStart = () => {\r\n    prevCommand.current = noAutoPlay ? \"pause\" : \"play\";\r\n    speedIndex.current = 0;\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      currentTime: 0,\r\n      sourceUnavailable: true,\r\n      proportionPlayed: 0,\r\n      proportionLoaded: 0,\r\n    }));\r\n\r\n    if (!noAutoShowMediaControls) {\r\n      if (!state.bottomControlsRendered) {\r\n        renderBottomControl.idle();\r\n      } else {\r\n        showControls();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEndedEvent = () => {\r\n    forward(\"onEnded\", {}, arguments[0]);\r\n  };\r\n\r\n  const handlePlay = handle(forwardPlay, shouldShowMiniFeedback, () => play());\r\n\r\n  const handlePause = handle(forwardPause, shouldShowMiniFeedback, () =>\r\n    pause()\r\n  );\r\n\r\n  const handleJump = useCallback(\r\n    ({ keyCode }) => {\r\n      if (seekDisabled) {\r\n        forward(\"onSeekFailed\", {}, arguments[0]);\r\n      } else {\r\n        const jumpByLeft = (is(\"left\", keyCode) ? -1 : 1) * jumpBy;\r\n        const time = Math.min(\r\n          state.duration,\r\n          Math.max(0, state.currentTime + jumpByLeft)\r\n        );\r\n\r\n        if (preventTimeChange(time)) return;\r\n\r\n        showMiniFeedback.current = true;\r\n        jump(jumpByLeft);\r\n      }\r\n    },\r\n    [\r\n      seekDisabled,\r\n      jumpBy,\r\n      state.duration,\r\n      state.currentTime,\r\n      preventTimeChange,\r\n      jump,\r\n      locale,\r\n    ]\r\n  );\r\n\r\n  //\r\n  // Media Interaction Methods\r\n  //\r\n  const handleEvent = () => {\r\n    const el = audio.current;\r\n    const updatedState = {\r\n      // Standard media properties\r\n      currentTime: el.currentTime,\r\n      duration: el.duration,\r\n      paused: el.playbackRate !== 1 || el.paused,\r\n      playbackRate: el.playbackRate,\r\n\r\n      // Non-standard state computed from properties\r\n      error: el.error,\r\n      loading: el.loading,\r\n      proportionLoaded: el.proportionLoaded,\r\n      proportionPlayed: el.proportionPlayed || 0,\r\n      // note: `el.loading && state.sourceUnavailable == false` is equivalent to `oncanplaythrough`\r\n      sourceUnavailable: (el.loading && state.sourceUnavailable) || el.error,\r\n    };\r\n\r\n    // If there's an error, we're obviously not loading, no matter what the readyState is.\r\n    if (updatedState.error) updatedState.loading = false;\r\n    if (\r\n      mediaProps.pauseAtEnd &&\r\n      (el.currentTime === 0 || el.currentTime === el.duration)\r\n    ) {\r\n      pause();\r\n    }\r\n\r\n    setSettings((prevState) => {\r\n      if (\r\n        typeof prevStateRef !== \"undefined\" &&\r\n        !prevStateRef.miniFeedbackVisible &&\r\n        prevStateRef.miniFeedbackVisible === state.miniFeedbackVisible &&\r\n        !prevStateRef.mediaSliderVisible &&\r\n        prevStateRef.mediaSliderVisible === state.mediaSliderVisible &&\r\n        prevStateRef.loading === state.loading &&\r\n        prevPropsRef.loading === loading &&\r\n        (prevState.currentTime !== updatedState.currentTime ||\r\n          prevState.proportionPlayed !== updatedState.proportionPlayed)\r\n      ) {\r\n        return prevState;\r\n      }\r\n      return {\r\n        ...prevState,\r\n        ...updatedState,\r\n      };\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The primary means of interacting with the `<audio>` element.\r\n   *\r\n   * @param  {String} action The method to preform.\r\n   * @param  {Multiple} props  The arguments, in the format that the action method requires.\r\n   *\r\n   * @private\r\n   */\r\n  const send = (action, props) => {\r\n    clearPulsedPlayback();\r\n    showFeedback();\r\n    startDelayedFeedbackHide();\r\n    audio.current[action](props);\r\n  };\r\n\r\n  /**\r\n   * Programmatically plays the current media.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @public\r\n   */\r\n  const play = () => {\r\n    if (state.sourceUnavailable) {\r\n      return;\r\n    }\r\n    speedIndex.current = 0;\r\n    // must happen before send() to ensure feedback uses the right value\r\n    // TODO: refactor into state member\r\n    prevCommand.current = \"play\";\r\n    setPlaybackRate(1);\r\n    send(\"play\");\r\n    startDelayedMiniFeedbackHide(5000);\r\n  };\r\n\r\n  /**\r\n   * Programmatically plays the current media.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @public\r\n   */\r\n  const pause = () => {\r\n    if (state.sourceUnavailable) {\r\n      return;\r\n    }\r\n\r\n    speedIndex.current = 0;\r\n    // must happen before send() to ensure feedback uses the right value\r\n    // TODO: refactor into state member\r\n    prevCommand.current = \"pause\";\r\n    setPlaybackRate(1);\r\n    send(\"pause\");\r\n    stopDelayedMiniFeedbackHide();\r\n  };\r\n\r\n  /**\r\n   * Sets [playbackRate]{@link goldstone/VideoPlayer.VideoPlayer#playbackRate}.\r\n   *\r\n   * @param {String} rate - The desired playback rate.\r\n   * @private\r\n   */\r\n  const setPlaybackRate = (rate) => {\r\n    // Make sure rate is a string\r\n    playbackRate.current = rate = String(rate);\r\n    const pbNumber = calcNumberValueOfPlaybackRate(rate);\r\n\r\n    if (platform.webos) {\r\n      // ReactDOM throws error for setting negative value for playbackRate\r\n      audio.current.playbackRate = pbNumber < 0 ? 0 : pbNumber;\r\n    } else {\r\n      // Set native playback rate\r\n      audio.current.playbackRate = pbNumber;\r\n    }\r\n  };\r\n\r\n  const onSliderChange = useCallback(\r\n    ({ value }) => {\r\n      const time = value * state.duration;\r\n\r\n      if (preventTimeChange(time)) return;\r\n\r\n      seek(time);\r\n      sliderScrubbing.current = false;\r\n    },\r\n    [state.duration, preventTimeChange, seek]\r\n  );\r\n\r\n  const handleKnobMove = useCallback(\r\n    (ev) => {\r\n      sliderScrubbing.current = true;\r\n\r\n      // prevent announcing repeatedly when the knob is detached from the progress.\r\n      // TODO: fix Slider to not send onKnobMove when the knob hasn't, in fact, moved\r\n      if (sliderKnobProportion.current !== ev.proportion) {\r\n        sliderKnobProportion.current = ev.proportion;\r\n        const seconds = Math.floor(\r\n          sliderKnobProportion.current * audio.current.duration\r\n        );\r\n\r\n        if (!isNaN(seconds)) {\r\n          forward(\"onScrub\", { ...ev, seconds }, arguments[0]);\r\n        }\r\n      }\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const handleSliderFocus = useCallback(() => {\r\n    const seconds = Math.floor(\r\n      sliderKnobProportion.current * audio.current.duration\r\n    );\r\n    sliderScrubbing.current = true;\r\n\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      feedbackAction: \"focus\",\r\n      feedbackVisible: true,\r\n    }));\r\n    stopDelayedFeedbackHide();\r\n\r\n    if (!isNaN(seconds)) {\r\n      forward(\r\n        \"onScrub\",\r\n        {\r\n          detached: sliderScrubbing.current,\r\n          proportion: sliderKnobProportion.current,\r\n          seconds,\r\n        },\r\n        arguments[0]\r\n      );\r\n    }\r\n  }, [locale, stopDelayedFeedbackHide]);\r\n\r\n  const handleSliderBlur = useCallback(() => {\r\n    sliderScrubbing.current = false;\r\n    startDelayedFeedbackHide();\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      feedbackAction: \"blur\",\r\n      feedbackVisible: true,\r\n    }));\r\n  }, [startDelayedFeedbackHide]);\r\n\r\n  const handleSliderKeyDown = useCallback((ev) => {\r\n    const { keyCode } = ev;\r\n\r\n    if (is(\"enter\", keyCode)) {\r\n      setSettings((prevState) => ({ ...prevState, slider5WayPressed: true }));\r\n    } else if (is(\"down\", keyCode)) {\r\n      Spotlight.setPointerMode(false);\r\n\r\n      if (Spotlight.focus(mediaControlsSpotlightId.current)) {\r\n        preventDefault(ev);\r\n        stopImmediate(ev);\r\n      }\r\n    } else if (is(\"up\", keyCode)) {\r\n      Spotlight.setPointerMode(false);\r\n      preventDefault(ev);\r\n      stopImmediate(ev);\r\n    }\r\n  }, []);\r\n\r\n  const handleToggleMore = useCallback(\r\n    ({ showMoreComponents, liftDistance }) => {\r\n      if (!showMoreComponents) {\r\n        startAutoCloseTimeout(); // Restore the timer since we are leaving \"more.\r\n        // Restore the title-hide now that we're finished with \"more\".\r\n        startDelayedTitleHide();\r\n      } else {\r\n        // Interrupt the title-hide since we don't want it hiding autonomously in \"more\".\r\n        stopDelayedTitleHide();\r\n      }\r\n\r\n      if (player.current && typeof player.current.style !== \"undefined\") {\r\n        player.current.style.setProperty(\"--liftDistance\", `${liftDistance}px`);\r\n      }\r\n\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        infoVisible: showMoreComponents,\r\n        titleVisible: true,\r\n      }));\r\n    },\r\n    [startAutoCloseTimeout, startDelayedTitleHide, stopDelayedTitleHide]\r\n  );\r\n\r\n  const handleMediaControlsClose = useCallback(\r\n    (event) => {\r\n      hideControls();\r\n      event.stopPropagation();\r\n    },\r\n    [hideControls]\r\n  );\r\n\r\n  const setPlayerRef = (node) => {\r\n    // TODO: We've moved SpotlightContainerDecorator up to allow VP to be spottable but also\r\n    // need a ref to the root node to query for children and set CSS variables.\r\n    // eslint-disable-next-line react/no-find-dom-node\r\n    player.current = ReactDOM.findDOMNode(node);\r\n  };\r\n\r\n  const setAudioRef = useCallback((refAudio) => {\r\n    if (refAudio !== null) {\r\n      audio.current = refAudio;\r\n    }\r\n  }, []);\r\n\r\n  const setTitleRef = (node) => {\r\n    titleRef.current = node;\r\n  };\r\n\r\n  delete mediaProps.autoCloseTimeout;\r\n  delete mediaProps.children;\r\n  delete mediaProps.feedbackHideDelay;\r\n  delete mediaProps.jumpBy;\r\n  delete mediaProps.miniFeedbackHideDelay;\r\n  delete mediaProps.noAutoShowMediaControls;\r\n  delete mediaProps.noMediaSliderFeedback;\r\n  delete mediaProps.onControlsAvailable;\r\n  delete mediaProps.onJumpBackward;\r\n  delete mediaProps.onJumpForward;\r\n  delete mediaProps.onPause;\r\n  delete mediaProps.onPlay;\r\n  delete mediaProps.onScrub;\r\n  delete mediaProps.onSeekFailed;\r\n  delete mediaProps.onSeekOutsideSelection;\r\n  delete mediaProps.pauseAtEnd;\r\n  delete mediaProps.playbackRateHash;\r\n  delete mediaProps.seekDisabled;\r\n  delete mediaProps.setApiProvider;\r\n  delete mediaProps.thumbnailUnavailable;\r\n  delete mediaProps.titleHideDelay;\r\n  delete mediaProps.videoPath;\r\n\r\n  mediaProps.autoPlay = !noAutoPlay;\r\n  mediaProps.className = css.audio;\r\n  mediaProps.controls = false;\r\n  mediaProps.mediaComponent = \"audio\";\r\n  mediaProps.onLoadStart = handleLoadStart;\r\n  mediaProps.onUpdate = handleEvent;\r\n  mediaProps.onEnded = handleEndedEvent;\r\n  mediaProps.ref = setAudioRef;\r\n\r\n  let proportionSelection = selection;\r\n  if (proportionSelection != null && state.duration) {\r\n    proportionSelection = selection.map((t) => t / state.duration);\r\n  }\r\n\r\n  const durFmt = getDurFmt(locale);\r\n\r\n  return (\r\n    <RootContainer\r\n      className={classNames({ [css.audioPlayer]: true }, \"enact-fit\", {\r\n        [className]: className,\r\n      })}\r\n      onClick={activityDetected}\r\n      ref={setPlayerRef}\r\n      spotlightDisabled={spotlightDisabled}\r\n      spotlightId={spotlightId}\r\n      style={style}\r\n    >\r\n      <AlbumInfo\r\n        title={title}\r\n        artist={mediaProps.artist}\r\n        album={mediaProps.album}\r\n        thumbnail={thumbnailSrc}\r\n        isPlaying= {prevCommand.current === \"play\"}\r\n      />\r\n      {(VideoComponent &&\r\n        (((typeof VideoComponent === \"function\" ||\r\n          typeof VideoComponent === \"string\") && (\r\n          <VideoComponent {...mediaProps} />\r\n        )) ||\r\n          (React.isValidElement(VideoComponent) &&\r\n            React.cloneElement(VideoComponent, mediaProps)))) ||\r\n        null}\r\n      <Overlay bottomControlsVisible>\r\n        {!noSpinner && (state.loading || loading) && <Spinner centered />}\r\n      </Overlay>\r\n      {state.bottomControlsRendered && (\r\n        <div className={css.fullscreen}>\r\n          {onBack instanceof Function && state.mediaSliderVisible && (\r\n            <Button\r\n              icon=\"arrowhookleft\"\r\n              className={css.back}\r\n              iconOnly\r\n              size=\"large\"\r\n              onClick={onBack}\r\n              backgroundOpacity=\"transparent\"\r\n            />\r\n          )}\r\n          {\r\n            <ControlsContainer\r\n              className={classNames({\r\n                [css.bottom]: true,\r\n                [css.hidden]: !state.mediaControlsVisible,\r\n                [css.lift]: state.infoVisible,\r\n              })}\r\n              spotlightDisabled={\r\n                spotlightDisabled || !state.mediaControlsVisible\r\n              }\r\n            >\r\n              {/*\r\n\t\t\t\t\t\t\t\tInfo Section: Title, Description, Times\r\n\t\t\t\t\t\t\t\tOnly render when `state.mediaControlsVisible` is true in order for `Marquee`\r\n\t\t\t\t\t\t\t\tto make calculations correctly in `MediaTitle`.\r\n\t\t\t\t\t\t\t*/}\r\n              {state.mediaSliderVisible && (\r\n                <div className={css.infoFrame}>\r\n                  <MediaTitle\r\n                    id={id}\r\n                    infoVisible={state.infoVisible}\r\n                    ref={setTitleRef}\r\n                    title={title}\r\n                    visible={state.titleVisible && state.mediaControlsVisible}\r\n                  >\r\n                    {infoComponents}\r\n                  </MediaTitle>\r\n                  {noSlider && (\r\n                    <Times\r\n                      current={state.currentTime}\r\n                      total={state.duration}\r\n                      formatter={durFmt}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n              {!noSlider && (\r\n                <div className={css.sliderContainer}>\r\n                  {state.mediaSliderVisible && (\r\n                    <Times\r\n                      noTotalTime\r\n                      current={state.currentTime}\r\n                      formatter={durFmt}\r\n                    />\r\n                  )}\r\n                  <MediaSlider\r\n                    backgroundProgress={state.proportionLoaded}\r\n                    disabled={disabled || state.sourceUnavailable}\r\n                    forcePressed={state.slider5WayPressed}\r\n                    onBlur={handleSliderBlur}\r\n                    onChange={onSliderChange}\r\n                    onFocus={handleSliderFocus}\r\n                    onKeyDown={handleSliderKeyDown}\r\n                    onKnobMove={handleKnobMove}\r\n                    onSpotlightUp={handleSpotlightUpFromSlider}\r\n                    selection={proportionSelection}\r\n                    spotlightDisabled={\r\n                      spotlightDisabled || !state.mediaControlsVisible\r\n                    }\r\n                    value={state.proportionPlayed}\r\n                    visible={state.mediaSliderVisible}\r\n                  ></MediaSlider>\r\n                  {state.mediaSliderVisible && (\r\n                    <Times\r\n                      noCurrentTime\r\n                      total={state.duration}\r\n                      formatter={durFmt}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n              <ComponentOverride\r\n                component={mediaControlsComponent}\r\n                mediaDisabled={disabled || state.sourceUnavailable}\r\n                onClose={handleMediaControlsClose}\r\n                onJump={handleJump}\r\n                onJumpBackwardButtonClick={onJumpBackward}\r\n                onJumpForwardButtonClick={onJumpForward}\r\n                onPause={handlePause}\r\n                onPlay={handlePlay}\r\n                onToggleMore={handleToggleMore}\r\n                paused={state.paused}\r\n                spotlightId={mediaControlsSpotlightId.current}\r\n                spotlightDisabled={\r\n                  !state.mediaControlsVisible || spotlightDisabled\r\n                }\r\n                visible={state.mediaControlsVisible}\r\n              />\r\n            </ControlsContainer>\r\n          }\r\n        </div>\r\n      )}\r\n      <SpottableDiv\r\n        // This captures spotlight focus for use with 5-way.\r\n        // It's non-visible but lives at the top of the VideoPlayer.\r\n        className={css.controlsHandleAbove}\r\n        onClick={showControls}\r\n        onSpotlightDown={showControls}\r\n        spotlightDisabled={state.mediaControlsVisible || spotlightDisabled}\r\n      />\r\n    </RootContainer>\r\n  );\r\n}\r\n\r\nAudioPlayerBase.propTypes = {\r\n  /**\r\n   * The time (in milliseconds) before the control buttons will hide.\r\n   *\r\n   * Setting this to 0 or `null` disables closing, requiring user input to open and close.\r\n   *\r\n   * @type {Number}\r\n   * @default 5000\r\n   * @public\r\n   */\r\n  autoCloseTimeout: PropTypes.number,\r\n\r\n  /**\r\n   * Video Plays automatically on load\r\n   *\r\n   * @type {function}\r\n   * @private\r\n   */\r\n  autoPlay: PropTypes.func,\r\n\r\n  /**\r\n   * To enable controls or not\r\n   *\r\n   * @type {function}\r\n   * @private\r\n   */\r\n  controls: PropTypes.func,\r\n  /**\r\n   * Removes interactive capability from this component. This includes, but is not limited to,\r\n   * key-press events, most clickable buttons, and prevents the showing of the controls.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * Amount of time (in milliseconds) after which the feedback text/icon part of the slider's\r\n   * tooltip will automatically hidden after the last action.\r\n   * Setting this to 0 or `null` disables feedbackHideDelay; feedback will always be present.\r\n   *\r\n   * @type {Number}\r\n   * @default 3000\r\n   * @public\r\n   */\r\n  feedbackHideDelay: PropTypes.number,\r\n\r\n  /**\r\n   * Components placed below the title.\r\n   *\r\n   * Typically these will be media descriptor icons, like how many audio channels, what codec\r\n   * the video uses, but can also be a description for the video or anything else that seems\r\n   * appropriate to provide information about the video to the user.\r\n   *\r\n   * @type {Node}\r\n   * @public\r\n   */\r\n  infoComponents: PropTypes.node,\r\n\r\n  /**\r\n   * The number of seconds the player should skip forward or backward when a \"jump\" button is\r\n   * pressed.\r\n   *\r\n   * @type {Number}\r\n   * @default 30\r\n   * @public\r\n   */\r\n  jumpBy: PropTypes.number,\r\n\r\n  /**\r\n   * Manually set the loading state of the media, in case you have information that\r\n   * `VideoPlayer` does not have.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  loading: PropTypes.bool,\r\n\r\n  /**\r\n   * The current locale as a\r\n   * {@link https://tools.ietf.org/html/rfc5646|BCP 47 language tag}.\r\n   *\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  locale: PropTypes.string,\r\n\r\n  /**\r\n   * Type of Media\r\n   *\r\n   *\r\n   * @type {function}\r\n   * @public\r\n   */\r\n  mediaComponent: PropTypes.func,\r\n  /**\r\n   * Overrides the default media control component to support customized behaviors.\r\n   *\r\n   * The provided component will receive the following props from `VideoPlayer`:\r\n   *\r\n   * * `mediaDisabled` - `true` when the media controls are not interactive\r\n   * * `onClose` - Called when cancel key is pressed when the media controls are visible\r\n   * * `onJump` - Called when the media jumps either forward or backward\r\n   * * `onJumpBackwardButtonClick` - Called when the jump backward button is pressed\r\n   * * `onJumpForwardButtonClick` - Called when the jump forward button is pressed\r\n   * * `onKeyDown` - Called when a key is pressed\r\n   * * `onPause` - Called when the media is paused via a key event\r\n   * * `onPlay` - Called when the media is played via a key event\r\n   * * `onToggleMore` - Called when the more components are hidden or shown\r\n   * * `paused` - `true` when the media is paused\r\n   * * `spotlightId` - The spotlight container Id for the media controls\r\n   * * `spotlightDisabled` - `true` when spotlight is disabled for the media controls\r\n   * * `visible` - `true` when the media controls should be displayed\r\n   *\r\n   * @type {Component|Element}\r\n   * @default `goldstone/VideoPlayer.MediaControls`\r\n   * @public\r\n   */\r\n  mediaControlsComponent: EnactPropTypes.componentOverride,\r\n\r\n  /**\r\n   * Amount of time (in milliseconds), after the last user action, that the `miniFeedback`\r\n   * will automatically hide.\r\n   * Setting this to 0 or `null` disables `miniFeedbackHideDelay`; `miniFeedback` will always\r\n   * be present.\r\n   *\r\n   * @type {Number}\r\n   * @default 2000\r\n   * @public\r\n   */\r\n  miniFeedbackHideDelay: PropTypes.number,\r\n\r\n  /**\r\n   * Disable audio for this video.\r\n   *\r\n   * In a TV context, this is handled by the remote control, not programmatically in the\r\n   * VideoPlayer API.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  muted: PropTypes.bool,\r\n\r\n  /**\r\n   * Prevents the default behavior of playing a video immediately after it's loaded.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  noAutoPlay: PropTypes.bool,\r\n\r\n  /**\r\n   * Prevents the default behavior of showing media controls immediately after it's loaded.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  noAutoShowMediaControls: PropTypes.bool,\r\n\r\n  /**\r\n   * Hides media slider feedback when fast forward or rewind while media controls are hidden.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  noMediaSliderFeedback: PropTypes.bool,\r\n\r\n  /**\r\n   * Removes the media slider.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  noSlider: PropTypes.bool,\r\n\r\n  /**\r\n   * Removes spinner while loading.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  noSpinner: PropTypes.bool,\r\n\r\n  /**\r\n   * Functio to go back\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onBack: PropTypes.func,\r\n\r\n  /**\r\n   * Called when video ends\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onControlsAvailable: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the player's controls change availability, whether they are shown\r\n   * or hidden.\r\n   *\r\n   * The current status is sent as the first argument in an object with a key `available`\r\n   * which will be either `true` or `false`. (e.g.: `onControlsAvailable({available: true})`)\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onEnded: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the user clicks the JumpBackward button.\r\n   *\r\n   * Is passed a {@link goldstone/VideoPlayer.videoStatus} as the first argument.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onJumpBackward: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the user clicks the JumpForward button.\r\n   *\r\n   * Is passed a {@link goldstone/VideoPlayer.videoStatus} as the first argument.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onJumpForward: PropTypes.func,\r\n\r\n  /**\r\n   * Called when Video starts.\r\n   *\r\n   * Is passed a {@link goldstone/VideoPlayer.videoStatus} as the first argument.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onLoadStart: PropTypes.func,\r\n  /**\r\n   * Called when video is paused\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onPause: PropTypes.func,\r\n\r\n  /**\r\n   * Called when video is played\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onPlay: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the user is moving the VideoPlayer's Slider knob independently of\r\n   * the current playback position.\r\n   *\r\n   * It is passed an object with a `seconds` key (float value) to indicate the current time\r\n   * index. It can be used to update the `thumbnailSrc` to the reflect the current scrub\r\n   * position.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onScrub: PropTypes.func,\r\n\r\n  /**\r\n   * Called when seek is attempted while `seekDisabled` is true.\r\n   *\r\n   * @type {Function}\r\n   */\r\n  onSeekFailed: PropTypes.func,\r\n\r\n  /**\r\n   * Called when seeking outside of the current `selection` range.\r\n   *\r\n   * By default, the seek will still be performed. Calling `preventDefault()` on the event\r\n   * will prevent the seek operation.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onSeekOutsideSelection: PropTypes.func,\r\n\r\n  /**\r\n   * Called when update happens\r\n   *\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onUpdate: PropTypes.func,\r\n\r\n  /**\r\n   * Pauses the video when it reaches either the start or the end of the video during rewind,\r\n   * slow rewind, fast forward, or slow forward.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  pauseAtEnd: PropTypes.bool,\r\n\r\n  /**\r\n   * Refrence to video.\r\n   *\r\n   * @type {function}\r\n   * @public\r\n   */\r\n  ref: PropTypes.func,\r\n\r\n  /**\r\n   * Disables seek function.\r\n   *\r\n   * Note that jump by arrow keys will also be disabled when `true`.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  seekDisabled: PropTypes.bool,\r\n\r\n  /**\r\n   * A range of the video to display as selected.\r\n   *\r\n   * The value of `selection` may either be:\r\n   * * `null` or `undefined` for no selection,\r\n   * * a single-element array with the start time of the selection\r\n   * * a two-element array containing both the start and end time of the selection in seconds\r\n   *\r\n   * When the start time is specified, the media slider will show filled starting at that\r\n   * time to the current time.\r\n   *\r\n   * When the end time is specified, the slider's background will be filled between the two\r\n   * times.\r\n   *\r\n   * @type {Number[]}\r\n   * @public\r\n   */\r\n  selection: PropTypes.arrayOf(PropTypes.number),\r\n\r\n  /**\r\n   * Registers the VideoPlayer component with an\r\n   * {@link core/internal/ApiDecorator.ApiDecorator}.\r\n   *\r\n   * @type {Function}\r\n   * @private\r\n   */\r\n  setApiProvider: PropTypes.func,\r\n\r\n  /**\r\n   * Disables spotlight navigation into the component.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  spotlightDisabled: PropTypes.bool,\r\n\r\n  /**\r\n   * The spotlight container ID for the player.\r\n   *\r\n   * @type {String}\r\n   * @public\r\n   * @default 'videoPlayer'\r\n   */\r\n  spotlightId: PropTypes.string,\r\n\r\n  /**\r\n   * Style for video player.\r\n   *\r\n   * @type {Object}\r\n   * @public\r\n   */\r\n  style: PropTypes.object,\r\n\r\n  /**\r\n   * Thumbnail image source to show on the slider knob.\r\n   *\r\n   * This is a standard {@link goldstone/Image} component so it supports all of the same\r\n   * options for the `src` property. If no `thumbnailComponent` and no `thumbnailSrc` is set,\r\n   * no tooltip will display.\r\n   *\r\n   * @type {String|Object}\r\n   * @public\r\n   */\r\n  thumbnailSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n\r\n  /**\r\n   * Enables the thumbnail transition from opaque to translucent.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  thumbnailUnavailable: PropTypes.bool,\r\n\r\n  /**\r\n   * Title for the video being played.\r\n   *\r\n   * @type {Node}\r\n   * @public\r\n   */\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n\r\n  /**\r\n   * The time (in milliseconds) before the title disappears from the controls.\r\n   *\r\n   * Setting this to `0` disables hiding.\r\n   *\r\n   * @type {Number}\r\n   * @default 5000\r\n   * @public\r\n   */\r\n  titleHideDelay: PropTypes.number,\r\n\r\n  /**\r\n   * Video component to use.\r\n   *\r\n   * The default renders an `HTMLVideoElement`. Custom video components must have a similar\r\n   * API structure, exposing the following APIs:\r\n   *\r\n   * Properties:\r\n   * * `currentTime` {Number} - Playback index of the media in seconds\r\n   * * `duration` {Number} - Media's entire duration in seconds\r\n   * * `error` {Boolean} - `true` if video playback has errored.\r\n   * * `loading` {Boolean} - `true` if video playback is loading.\r\n   * * `paused` {Boolean} - Playing vs paused state. `true` means the media is paused\r\n   * * `playbackRate` {Number} - Current playback rate, as a number\r\n   * * `proportionLoaded` {Number} - A value between `0` and `1`\r\n   *\trepresenting the proportion of the media that has loaded\r\n   * * `proportionPlayed` {Number} - A value between `0` and `1` representing the\r\n   *\tproportion of the media that has already been shown\r\n   *\r\n   * Events:\r\n   * * `onLoadStart` - Called when the video starts to load\r\n   * * `onUpdate` - Sent when any of the properties were updated\r\n   *\r\n   * Methods:\r\n   * * `play()` - play video\r\n   * * `pause()` - pause video\r\n   * * `load()` - load video\r\n   *\r\n   * The [`source`]{@link sandstone/VideoPlayer.Video.source} property is passed to\r\n   * the video component as a child node.\r\n   *\r\n   * @type {Component|Element}\r\n   * @default {@link ui/Media.Media}\r\n   * @public\r\n   */\r\n  videoComponent: EnactPropTypes.componentOverride,\r\n\r\n  /**\r\n   * Path of the video.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  videoPath: PropTypes.func,\r\n};\r\n\r\nAudioPlayerBase.defaultProps = {\r\n  autoCloseTimeout: 5000,\r\n  feedbackHideDelay: 3000,\r\n  jumpBy: 30,\r\n  mediaControlsComponent: MediaControls,\r\n  miniFeedbackHideDelay: 2000,\r\n  spotlightId: \"audioPlayer\",\r\n  titleHideDelay: 5000,\r\n  videoComponent: Media,\r\n};\r\n\r\n/**\r\n * A standard HTML5 video player for Sandstone. It behaves, responds to, and operates like a\r\n * `<video>` tag in its support for `<source>`.  It also accepts custom tags such as\r\n * `<infoComponents>` for displaying additional information in the title area and `<MediaControls>`\r\n * for handling media playback controls and adding more controls.\r\n *\r\n * Example usage:\r\n * ```\r\n *\t<VideoPlayer title=\"Hilarious Cat Video\" poster=\"http://my.cat.videos/boots-poster.jpg\">\r\n *\t\t<source src=\"http://my.cat.videos/boots.mp4\" type=\"video/mp4\" />\r\n *\t\t<infoComponents>A video about my cat Boots, wearing boots.</infoComponents>\r\n *\t\t<MediaControls>\r\n *\t\t\t<leftComponents><Button backgroundOpacity=\"translucent\" icon=\"star\" /></leftComponents>\r\n *\t\t\t<rightComponents><Button backgroundOpacity=\"translucent\" icon=\"flag\" /></rightComponents>\r\n *\r\n *\t\t\t<Button backgroundOpacity=\"translucent\">Add To Favorites</Button>\r\n *\t\t\t<Button backgroundOpacity=\"translucent\" icon=\"search\" />\r\n *\t\t</MediaControls>\r\n *\t</VideoPlayer>\r\n * ```\r\n *\r\n * To invoke methods (e.g.: `fastForward()`) or get the current state (`getMediaState()`), store a\r\n * ref to the `AudioPlayer` within your component:\r\n *\r\n * ```\r\n * \t...\r\n *\r\n * \tsetVideoPlayer = (node) => {\r\n * \t\tvideoPlayer = node;\r\n * \t}\r\n *\r\n * \tplay () {\r\n * \t\tvideoPlayer.play();\r\n * \t}\r\n *\r\n * \trender () {\r\n * \t\treturn (\r\n * \t\t\t<AudioPlayer ref={setVideoPlayer} />\r\n * \t\t);\r\n * \t}\r\n * ```\r\n *\r\n * @function AudioPlayer\r\n * @mixes ui/Slottable.Slottable\r\n * @ui\r\n * @public\r\n */\r\nconst AudioPlayer = memo(\r\n  ApiDecorator(\r\n    {\r\n      api: [\r\n        \"areControlsVisible\",\r\n        \"getMediaState\",\r\n        \"getVideoNode\",\r\n        \"hideControls\",\r\n        \"jump\",\r\n        \"pause\",\r\n        \"play\",\r\n        \"seek\",\r\n        \"showControls\",\r\n        \"showFeedback\",\r\n        \"toggleControls\",\r\n      ],\r\n    },\r\n    I18nContextDecorator(\r\n      { localeProp: \"locale\" },\r\n      Slottable(\r\n        {\r\n          slots: [\r\n            \"infoComponents\",\r\n            \"mediaControlsComponent\",\r\n            \"source\",\r\n            \"track\",\r\n            \"thumbnailComponent\",\r\n            \"videoComponent\",\r\n          ],\r\n        },\r\n        FloatingLayerDecorator(\r\n          { floatLayerId: \"videoPlayerFloatingLayer\" },\r\n          Skinnable(AudioPlayerBase)\r\n        )\r\n      )\r\n    )\r\n  )\r\n);\r\n\r\nexport default AudioPlayer;\r\nexport { MediaControls, Audio, AudioPlayer, AudioPlayerBase };\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\Overlay.js",["1578"],"import Touchable from '@enact/ui/Touchable';\r\nimport React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport css from './AudioPlayer.module.less';\r\n\r\n/**\r\n * Overlay {@link goldstone/VideoPlayer}. This covers the Video piece of the\r\n * {@link goldstone/VideoPlayer} to prevent unnecessary VideoPlayer repaints due to mouse-moves.\r\n * It also acts as a container for overlaid elements, like the {@link goldstone/Spinner}.\r\n *\r\n * @function\r\n * @memberof goldstone/VideoPlayer\r\n * @ui\r\n * @public\r\n */\r\nconst OverlayBase = ({bottomControlsVisible, children, ...rest}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classNames({[css.overlay]: true, [css['high-contrast-scrim']]: bottomControlsVisible})}\r\n\t\t\t{...rest}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nOverlayBase.displayName = 'Overlay';\r\nOverlayBase.propTypes = {\r\n\tbottomControlsVisible: PropTypes.bool,\r\n\tchildren: PropTypes.node\r\n};\r\n\r\nconst Overlay = memo(Touchable(OverlayBase));\r\nexport default Overlay;\r\nexport {\r\n\tOverlay,\r\n\tOverlayBase\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\Media.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaTitle.js",["1579"],"import ForwardRef from '@enact/ui/ForwardRef';\r\nimport React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Marquee from '../../../../goldstone/Marquee';\r\nimport css from './AudioPlayer.module.less';\r\n\r\n/**\r\n * MediaTitle {@link goldstone/VideoPlayer}.\r\n *\r\n * @function MediaTitle\r\n * @memberof goldstone/VideoPlayer\r\n * @ui\r\n * @private\r\n */\r\nconst MediaTitleBase = ({children, id, infoVisible, forwardRef, title, visible}) => {\r\n\tconst childrenClassName = classNames({[css.infoComponents]: true, [css[infoVisible ? 'visible' : 'hidden']]: true});\r\n\tconst titleClassName = classNames({[css.title]: true, [css.infoVisible]: true});\r\n\treturn (\r\n\t\t<div className={classNames({[css[visible ? 'visible' : 'hidden']]: true, [css.titleFrame]: true})} id={id + '_mediaTitle'} ref={forwardRef}>\r\n\t\t\t<Marquee id={id + '_title'} className={titleClassName} marqueeOn=\"render\">\r\n\t\t\t\t{title}\r\n\t\t\t</Marquee>\r\n\t\t\t<div id={id + '_info'} className={childrenClassName}>  {/* tabIndex={-1} */}\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nMediaTitleBase.displayName = 'MediaTitle';\r\nMediaTitleBase.propTypes = {\r\n\t/**\r\n\t * DOM id for the component. Also define ids for the title and node wrapping the `children`\r\n\t * in the forms `${id}_title` and `${id}_info`, respectively.\r\n\t *\r\n\t * @type {String}\r\n\t * @required\r\n\t * @public\r\n\t */\r\n\tid: PropTypes.string.isRequired,\r\n\r\n\t/**\r\n\t * Anything supplied to `children` will be rendered. Typically this will be informational\r\n\t * badges indicating aspect ratio, audio channels, etc., but it could also be a description.\r\n\t *\r\n\t * @type {Node}\r\n\t * @public\r\n\t */\r\n\tchildren: PropTypes.node,\r\n\r\n\t/**\r\n\t * Forwards a reference to the MediaTitle component.\r\n\t *\r\n\t * @type {Function}\r\n\t * @private\r\n\t */\r\n\tforwardRef: PropTypes.func,\r\n\r\n\t/**\r\n\t * Control whether the children (infoComponents) are displayed.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default false\r\n\t * @public\r\n\t */\r\n\tinfoVisible: PropTypes.bool,\r\n\r\n\t/**\r\n\t * A title string to identify the media's title.\r\n\t *\r\n\t * @type {Node}\r\n\t * @public\r\n\t */\r\n\ttitle: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n\r\n\t/**\r\n\t * Setting this to false effectively hides the entire component. Setting it to `false` after\r\n\t * the control has rendered causes a fade-out transition. Setting to `true` after or during\r\n\t * the transition makes the component immediately visible again, without delay or transition.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @default true\r\n\t * @public\r\n\t */\r\n\t// This property uniquely defaults to true, because it doesn't make sense to have it false\r\n\t// and have the control be initially invisible, and is named \"visible\" to match the other\r\n\t// props (current and possible future). Having an `infoVisible` and a `hidden` prop seems weird.\r\n\tvisible: PropTypes.bool\r\n};\r\nMediaTitleBase.defaultProps = {\r\n\tinfoVisible: false,\r\n\tvisible: true\r\n};\r\n\r\nconst MediaTitle = ForwardRef(memo(MediaTitleBase));\r\nexport default MediaTitle;\r\nexport {\r\n\tMediaTitle,\r\n\tMediaTitleBase\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSlider.js",["1580"],"import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nimport Slider from \"../../../../goldstone/Slider\";\r\n\r\nimport MediaKnob from \"./MediaKnob\";\r\nimport MediaSliderDecorator from \"./MediaSliderDecorator\";\r\n\r\nimport css from \"./AudioPlayer.module.less\";\r\n\r\n/**\r\n * The base component to render a customized [Slider]{@link goldstone/Slider.Slider} for use in\r\n * [VideoPlayer]{@link goldstone/VideoPlayer.VideoPlayer}.\r\n *\r\n * @function MediaSliderBase\r\n * @memberof goldstone/VideoPlayer\r\n * @ui\r\n * @private\r\n */\r\nconst MediaSliderBase = ({\r\n  children,\r\n  forcePressed,\r\n  preview,\r\n  previewProportion,\r\n  visible,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [css.sliderFrame]: true,\r\n        [css.hidden]: !visible,\r\n      })}\r\n    >\r\n      <Slider\r\n        {...rest}\r\n        tooltip={children}\r\n        aria-hidden=\"true\"\r\n        className={classNames({\r\n          [css.pressed]: forcePressed,\r\n          [css.mediaSlider]: true,\r\n        })}\r\n        css={css}\r\n        knobComponent={\r\n          <MediaKnob preview={preview} previewProportion={previewProportion} />\r\n        }\r\n        max={1}\r\n        min={0}\r\n        step={0.00001}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nMediaSliderBase.displayName = \"MediaSlider\";\r\nMediaSliderBase.propTypes = {\r\n  /**\r\n   * When `true`, the knob will expand. Note that Slider is a controlled\r\n   * component. Changing the value would only affect pressed visual and\r\n   * not the state.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  forcePressed: PropTypes.bool,\r\n\r\n  /**\r\n   * Allow moving the knob via pointer or 5-way without emitting `onChange` events\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  preview: PropTypes.bool,\r\n\r\n  /**\r\n   * The position of the knob when in `preview` mode\r\n   *\r\n   * @type {Number}\r\n   * @public\r\n   */\r\n  previewProportion: PropTypes.number,\r\n\r\n  /**\r\n   * The visibility of the component. When `false`, the component will be hidden.\r\n   *\r\n   * @type {Boolean}\r\n   * @default true\r\n   * @public\r\n   */\r\n  visible: PropTypes.bool,\r\n};\r\nMediaSliderBase.defaultProps = {\r\n  preview: false,\r\n  visible: true,\r\n};\r\n\r\nconst MediaSlider = memo(\r\n  MediaSliderDecorator(MediaSliderBase),\r\n  (prevProp, nextProp) => {\r\n    if (\r\n      !prevProp.visible &&\r\n      prevProp.visible === nextProp.visible &&\r\n      prevProp.value !== nextProp.value\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default MediaSlider;\r\nexport { MediaSlider, MediaSliderBase };\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\Audio.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaControls.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\Times.js",["1581"],"import React, {memo} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {secondsToPeriod, secondsToTime} from './util';\r\nimport css from './AudioPlayer.module.less';\r\n\r\n/**\r\n * Times {@link goldstone/VideoPlayer}.\r\n *\r\n * @function Times\r\n * @memberof goldstone/VideoPlayer\r\n * @ui\r\n * @private\r\n */\r\nconst TimesBase = ({current, formatter, noCurrentTime, noTotalTime, total, ...rest}) => {\r\n\tconst currentPeriod = secondsToPeriod(current);\r\n\tconst currentReadable = secondsToTime(current, formatter);\r\n\tconst noSeparator = noCurrentTime || noTotalTime;\r\n\tconst totalPeriod = secondsToPeriod(total);\r\n\tconst totalReadable = secondsToTime(total, formatter);\r\n\r\n\treturn (\r\n\t\t<div {...rest}>\r\n\t\t\t{\r\n\t\t\t\t!noCurrentTime && <time className={css.currentTime} dateTime={currentPeriod}>{currentReadable}</time>\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t!noSeparator && <span className={css.separator}>/</span>\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\t!noTotalTime && <time className={css.totalTime} dateTime={totalPeriod}>{totalReadable}</time>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nTimesBase.displayName = 'Times';\r\nTimesBase.propTypes = {\r\n\t/**\r\n\t * An instance of a Duration Formatter from i18n. {@link i18n/ilib/lib/DurationFmt.DurationFmt}\r\n\t *\r\n\t * @type {Object}\r\n\t * @required\r\n\t * @public\r\n\t */\r\n\tformatter: PropTypes.object.isRequired,\r\n\r\n\t/**\r\n\t * The current time in seconds of the video source.\r\n\t *\r\n\t * @type {Number}\r\n\t * @default 0\r\n\t * @public\r\n\t */\r\n\tcurrent: PropTypes.number,\r\n\r\n\t/**\r\n\t * Removes the current time.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @public\r\n\t */\r\n\tnoCurrentTime: PropTypes.bool,\r\n\r\n\t/**\r\n\t * Removes the total time.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @public\r\n\t */\r\n\tnoTotalTime: PropTypes.bool,\r\n\r\n\t/**\r\n\t * The total time (duration) in seconds of the loaded video source.\r\n\t *\r\n\t * @type {Number}\r\n\t * @default 0\r\n\t * @public\r\n\t */\r\n\ttotal: PropTypes.number\r\n};\r\n\r\nTimesBase.defaultProps = {\r\n\tcurrent: 0,\r\n\ttotal: 0\r\n};\r\n\r\nconst Times = memo(TimesBase);\r\n\r\nexport default Times;\r\nexport {\r\n\tTimes,\r\n\tTimesBase\r\n};\r\n","D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\AlbumInfo.js",["1582","1583"],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSliderDecorator.js",[],"D:\\Projects\\Source\\Enact\\OSE_Music_Player\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaKnob.js",["1584"],"import React, {useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Knob} from '@enact/ui/Slider';\r\n\r\n/**\r\n * Knob for the MediaSlider in {@link goldstone/VideoPlayer}.\r\n *\r\n * @function MediaKnob\r\n * @memberof goldstone/VideoPlayer\r\n * @ui\r\n * @private\r\n */\r\nconst MediaKnob = ({preview, previewProportion, value, style, ...rest}) => {\r\n\r\n\tconst MediaKnobStyle = useCallback(() => {\r\n\t\tif (!preview) {\r\n\t\t\treturn style;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t...style,\r\n\t\t\t'--ui-slider-proportion-end-knob': previewProportion\r\n\t\t};\r\n\t}, [style, preview, previewProportion]);\r\n\r\n\treturn (\r\n\t\t<Knob\r\n\t\t\t{...rest}\r\n\t\t\tstyle={MediaKnobStyle(style, preview, previewProportion)}\r\n\t\t\tproportion={preview ? previewProportion : value}\r\n\t\t\tvalue={preview ? previewProportion : value}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nMediaKnob.propTypes = {\r\n\tpreview: PropTypes.bool,\r\n\tpreviewProportion: PropTypes.number,\r\n\tvalue: PropTypes.number\r\n};\r\n\r\nexport default MediaKnob;\r\nexport {\r\n\tMediaKnob\r\n};\r\n","F:\\MusicPlayer\\src\\index.js",["1585"],"F:\\MusicPlayer\\src\\store\\configureStore.js",[],"F:\\MusicPlayer\\src\\App\\App.js",["1586"],"F:\\MusicPlayer\\src\\reducers\\index.js",[],"F:\\MusicPlayer\\src\\views\\AudioPanel\\AudioPanel.js",["1587","1588","1589","1590"],"F:\\MusicPlayer\\src\\views\\MainPanel\\MainPanel.js",["1591","1592","1593","1594"],"F:\\MusicPlayer\\src\\reducers\\navigationReducer.js",[],"F:\\MusicPlayer\\src\\reducers\\audioReducer.js",[],"F:\\MusicPlayer\\goldstone\\Panels\\index.js",[],"F:\\MusicPlayer\\src\\reducers\\deviceReducer.js",[],"F:\\MusicPlayer\\goldstone\\ThemeDecorator\\ThemeDecorator.js",[],"F:\\MusicPlayer\\src\\actions\\audioActions.js",["1595"],"F:\\MusicPlayer\\src\\actions\\navigationActions.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayer.js",["1596"],"F:\\MusicPlayer\\src\\actions\\deviceActions.js",["1597"],"F:\\MusicPlayer\\src\\actions\\types.js",[],"F:\\MusicPlayer\\goldstone\\Panels\\Panels.js",["1598"],"F:\\MusicPlayer\\goldstone\\Panels\\Header.js",[],"F:\\MusicPlayer\\goldstone\\Panels\\Panel.js",["1599"],"F:\\MusicPlayer\\goldstone\\ThemeDecorator\\AccessibilityDecorator.js",[],"F:\\MusicPlayer\\goldstone\\ThemeDecorator\\I18nFontDecorator.js",[],"F:\\MusicPlayer\\src\\components\\AudioList\\AudioList.js",["1600","1601","1602"],"F:\\MusicPlayer\\goldstone\\TabLayout\\TabLayout.js",["1603"],"F:\\MusicPlayer\\goldstone\\Skinnable\\Skinnable.js",[],"F:\\MusicPlayer\\goldstone\\ThemeDecorator\\fontGenerator.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\Reducers\\AudioPlayerReducer.js",[],"F:\\MusicPlayer\\src\\services\\index.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\util.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\AudioPlayerBase.js",["1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617"],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\index.js",[],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\util.js",[],"F:\\MusicPlayer\\goldstone\\VirtualList\\VirtualList.js",["1618"],"F:\\MusicPlayer\\goldstone\\TabLayout\\RefocusDecorator.js",["1619"],"F:\\MusicPlayer\\goldstone\\TabLayout\\TabGroup.js",["1620"],"F:\\MusicPlayer\\goldstone\\TabLayout\\Tab.js",[],"F:\\MusicPlayer\\goldstone\\Button\\Button.js",[],"F:\\MusicPlayer\\goldstone\\internal\\$L\\$L.js",[],"F:\\MusicPlayer\\goldstone\\internal\\WindowEventable\\WindowEventable.js",[],"F:\\MusicPlayer\\goldstone\\Heading\\Heading.js",[],"F:\\MusicPlayer\\goldstone\\internal\\SharedStateDecorator\\SharedStateDecorator.js",[],"F:\\MusicPlayer\\goldstone\\ImageItem\\index.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\AlbumInfo.js",["1621","1622"],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\Times.js",["1623"],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\Audio.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSlider.js",["1624"],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaTitle.js",["1625"],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaControls.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\Media.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\Overlay.js",["1626"],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\Arrangers.js",[],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\useAutoFocus.js",[],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\Viewport.js",[],"F:\\MusicPlayer\\goldstone\\VirtualList\\useThemeVirtualList.js",["1627"],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\PopupDecorator.js",[],"F:\\MusicPlayer\\src\\services\\Luna\\index.js",[],"F:\\MusicPlayer\\goldstone\\ImageItem\\ImageItem.js",[],"F:\\MusicPlayer\\goldstone\\Spinner\\Spinner.js",[],"F:\\MusicPlayer\\goldstone\\ImageItem\\ImageItemDecorator.js",[],"F:\\MusicPlayer\\goldstone\\ImageItem\\ImageItemBase.js",["1628","1629"],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\NavigationButton.js",[],"F:\\MusicPlayer\\goldstone\\useScroll\\Scrollbar.js",["1630"],"F:\\MusicPlayer\\goldstone\\useScroll\\useScroll.js",[],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\FloatingLayerIdProvider.js",["1631"],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\CancelDecorator.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSliderDecorator.js",[],"F:\\MusicPlayer\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaKnob.js",["1632"],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\captureKeys.js",[],"F:\\MusicPlayer\\goldstone\\VirtualList\\useSpotlight.js",[],"F:\\MusicPlayer\\goldstone\\VirtualList\\usePreventScroll.js",[],"F:\\MusicPlayer\\goldstone\\VirtualList\\useEvent.js",[],"F:\\MusicPlayer\\goldstone\\internal\\Panels\\TransitionDecorator.js",[],"F:\\MusicPlayer\\goldstone\\Sprite\\Sprite.js",[],"F:\\MusicPlayer\\goldstone\\Marquee\\Marquee.js",[],"F:\\MusicPlayer\\src\\services\\Luna\\device.js",[],"F:\\MusicPlayer\\src\\services\\Luna\\audio.js",[],"F:\\MusicPlayer\\goldstone\\Button\\ButtonBase\\BaseButton.js",[],"F:\\MusicPlayer\\src\\services\\Luna\\video.js",[],"F:\\MusicPlayer\\goldstone\\DivButton\\Button.js",[],"F:\\MusicPlayer\\goldstone\\TooltipDecorator\\TooltipDecorator.js",[],"F:\\MusicPlayer\\goldstone\\Icon\\Icon.js",[],"F:\\MusicPlayer\\goldstone\\internal\\util\\util.js",[],"F:\\MusicPlayer\\goldstone\\Scroller\\Scroller.js",[],"F:\\MusicPlayer\\goldstone\\internal\\DebounceDecorator\\DebounceDecorator.js",[],"F:\\MusicPlayer\\goldstone\\useScroll\\useSpotlight.js",[],"F:\\MusicPlayer\\goldstone\\useScroll\\useOverscrollEffect.js",[],"F:\\MusicPlayer\\goldstone\\useScroll\\useEvent.js",[],"F:\\MusicPlayer\\goldstone\\useScroll\\useThemeScrollContentHandle.js",[],"F:\\MusicPlayer\\goldstone\\useScroll\\ScrollbarTrack.js",["1633"],"F:\\MusicPlayer\\goldstone\\Slider\\Slider.js",[],"F:\\MusicPlayer\\goldstone\\Popup\\Popup.js",[],"F:\\MusicPlayer\\src\\services\\Luna\\request.js",[],"F:\\MusicPlayer\\goldstone\\Image\\Image.js",["1634"],"F:\\MusicPlayer\\goldstone\\Icon\\IconList.js",[],"F:\\MusicPlayer\\goldstone\\TooltipDecorator\\util.js",[],"F:\\MusicPlayer\\goldstone\\TooltipDecorator\\Tooltip.js",["1635"],"F:\\MusicPlayer\\goldstone\\Scroller\\useThemeScroller.js",[],"F:\\MusicPlayer\\goldstone\\Slider\\SliderBehaviorDecorator.js",[],"F:\\MusicPlayer\\goldstone\\Slider\\utils.js",[],"F:\\MusicPlayer\\goldstone\\Slider\\SliderBase\\SliderBase.js",["1636"],"F:\\MusicPlayer\\goldstone\\Marquee\\MarqueeBase\\index.js",[],"F:\\MusicPlayer\\goldstone\\util\\generateClassNames\\generateClassNames.js",[],"F:\\MusicPlayer\\goldstone\\ProgressBar\\ProgressBarBase\\ProgressBarBase.js",[],"F:\\MusicPlayer\\goldstone\\ProgressBar\\ProgressBarComponent.js",[],"F:\\MusicPlayer\\goldstone\\TooltipDecorator\\TooltipLabel.js",["1637"],"F:\\MusicPlayer\\goldstone\\Scroller\\useEvent.js",[],"F:\\MusicPlayer\\goldstone\\Popup\\PopupBase\\Transition.js",[],"F:\\MusicPlayer\\goldstone\\internal\\validators\\validators.js",[],"F:\\MusicPlayer\\goldstone\\Slider\\SliderBase\\Knob.js",[],"F:\\MusicPlayer\\goldstone\\Slider\\SliderBase\\PositionDecorator.js",[],"F:\\MusicPlayer\\goldstone\\util\\calcProportion.js",[],"F:\\MusicPlayer\\goldstone\\Marquee\\MarqueeBase\\MarqueeController.js",[],"F:\\MusicPlayer\\goldstone\\Marquee\\MarqueeBase\\MarqueeBase.js",[],"F:\\MusicPlayer\\goldstone\\Marquee\\MarqueeBase\\MarqueeDecorator.js",[],"F:\\MusicPlayer\\goldstone\\resolution\\resolution.js",[],"F:\\MusicPlayer\\goldstone\\ProgressBar\\ProgressBarTooltip\\ProgressBarTooltip.js",[],"F:\\MusicPlayer\\goldstone\\Resizable\\Resizable.js",[],"F:\\BT carkit\\Music_Player_App\\src\\index.js",[],["1638","1639","1640"],"F:\\BT carkit\\Music_Player_App\\src\\store\\configureStore.js",[],"F:\\BT carkit\\Music_Player_App\\src\\App\\App.js",["1641","1642","1643","1644","1645","1646"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Panels, Routable, Route } from \"../../goldstone/Panels\";\r\nimport ThemeDecorator from \"../../goldstone/ThemeDecorator\";\r\nimport getBTDetails from '../actions/getBTDetails';\r\nimport getAdapterDetails from '../actions/getAdapterDetails';\r\nimport getNumberOfItems from '../actions/getNumberOfItems';\r\nimport MainPanel from \"../views/MainPanel\";\r\nimport AudioPanel from \"../views/AudioPanel/AudioPanel\";\r\nimport playerInfo from \"../reducers/playerInfo\";\r\nimport getFolderItems from '../actions/getFolderItems';\r\nimport getAVRCPStatus from \"../actions/getAVRCPStatus\";\r\n\r\nconst RoutablePanels = Routable({ navigate: \"onBack\" }, Panels);\r\n\r\nclass App extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t}\r\n\tcomponentDidMount = () => {\r\n\t\tif (typeof window === 'object' && window.PalmSystem) {\r\n\t\t\tthis.onLaunch();\r\n\t\t}\r\n\t\tdocument.addEventListener('webOSRelaunch', this.onLaunch);\r\n\t\tdocument.addEventListener('webOSLocaleChange', () => {\r\n\t\t\twindow.location.reload();\r\n\t\t});\r\n\t};\r\n\r\n\tonLaunch = () => {\r\n\t\tthis.props.getAdapterDetails('getAdapterDetails').then((adapterAddress) => {\r\n\t\t\tthis.props.getBTDetails(adapterAddress, 'getBTDetails').then((address)=>{\r\n\t\t\t\tconsole.log(\"address: \"+address)\r\n\t\t\t\tthis.props.getAVRCPStatus(address).then((address)=>{\r\n\t\t\t\t\tconsole.log(\"AVRCP connected address: \"+address)\r\n\t\t\t\t\tthis.props.getNumberOfItems(address,'INITIAL').then((noOfItems)=>{\r\n\t\t\t\t\t\tconsole.log(\"No of Items INITIAL: \"+noOfItems)\r\n\t\t\t\t\t\tthis.props.getFolderItems(address,noOfItems,'INITIAL').then((path)=>{\r\n\t\t\t\t\t\t\tconsole.log(\"Folder path INITIAL: \"+path)\r\n\t\t\t\t\t\t\tthis.props.getNumberOfItems(address,'FINAL').then((noOfItems)=>{\r\n\t\t\t\t\t\t\t\tconsole.log(\"No of Items FINAL: \"+noOfItems)\r\n\t\t\t\t\t\t\t\tthis.props.getFolderItems(address,noOfItems,'FINAL').then((path)=>{\r\n\t\t\t\t\t\t\t\t\tconsole.log(\"Folder path FINAL: \"+path)\r\n\t\t\t\t\t\t\t\t\tthis.props.getNumberOfItems(address,'MUSIC_LIST').then((noOfItems)=>{\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"No of Items MUSIC LIST: \"+noOfItems)\r\n\t\t\t\t\t\t\t\t\t\tthis.props.getFolderItems(address,noOfItems,'MUSIC_LIST');\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n  render () {\r\n    const {path} = this.props;\r\n    return (\r\n      <RoutablePanels path={path}>\r\n        <Route path=\"home\" component={MainPanel} title=\"Home Page\" />\r\n        <Route path=\"audioplayer\" component={AudioPanel} title=\"Audio Player\" />\r\n      </RoutablePanels>\r\n    );\r\n  }\r\n};\r\n\r\nApp.propTypes = {\r\n  getAdapterDetails: PropTypes.func,\r\n\tgetBTDetails: PropTypes.func,\r\n  path: PropTypes.string,\r\n  getAVRCPStatus: PropTypes.func,\r\n  getNumberOfItems: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = ({path,playerInfo,avrcpConnectionStatus, folderItems,noOfFolderItems}) => {\r\n  return {\r\n    path: path.path,\r\n\taddress: avrcpConnectionStatus.address,\r\n\t// audioList: audio.audioList,\r\n    playerInfo: playerInfo,\r\n    avrcpStatus: avrcpConnectionStatus,\r\n    folderItems: folderItems,\r\n    noOfItems:noOfFolderItems.noOfItems\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tgetBTDetails: () => dispatch(getBTDetails()),\r\n\tgetNumberOfItems: (address,step) => dispatch(getNumberOfItems(address,step)),\r\n    getFolderItems: (address,res,step) => dispatch(getFolderItems(address,res,step)),\r\n\tgetAdapterDetails: (adapterAddress, name) =>\r\n\t\tdispatch(getAdapterDetails(adapterAddress, name)),\r\n\tgetAVRCPStatus: (address) => dispatch(getAVRCPStatus(address)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeDecorator(App));\r\n","F:\\BT carkit\\Music_Player_App\\src\\reducers\\index.js",[],"F:\\BT carkit\\Music_Player_App\\src\\views\\AudioPanel\\AudioPanel.js",["1647","1648","1649"],"import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePath } from \"../../actions/navigationActions\";\r\nimport { getCurrentAudioMetaData } from \"../../actions/audioActions\";\r\nimport AudioPlayer from \"../../components/AudioPlayer/AudioPlayer\";\r\n\r\nconst AudioPanel = ({\r\n  audioMetaData,\r\n  audioList,\r\n  audioIndex,\r\n  handleBack,\r\n  getAudioMetaData,\r\n}) => {\r\n  const handleNextAudio = () => {\r\n    if (audioList && audioList.length > 0) {\r\n      if (audioIndex === audioList.length - 1) {\r\n        getAudioMetaData(audioList[0].uri, 0);\r\n      } else {\r\n        getAudioMetaData(audioList[audioIndex + 1].uri, audioIndex + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePreviousAudio = () => {\r\n    if (audioList && audioList.length > 0) {\r\n      if (audioIndex === 0) {\r\n        getAudioMetaData(\r\n          audioList[audioList.length - 1].uri,\r\n          audioList.length - 1\r\n        );\r\n      } else {\r\n        getAudioMetaData(audioList[audioIndex - 1].uri, audioIndex - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AudioPlayer\r\n      autoCloseTimeout={7000}\r\n      disabled={false}\r\n      feedbackHideDelay={3000}\r\n      handleBack={() => handleBack(\"home\")}\r\n      handleNext={handleNextAudio}\r\n      handlePrevious={handlePreviousAudio}\r\n      miniFeedbackHideDelay={2000}\r\n      muted={false}\r\n      noAutoPlay={false}\r\n      noAutoShowMediaControls={false}\r\n      noMediaSliderFeedback={false}\r\n      noSlider={false}\r\n      pauseAtEnd\r\n      playlist={audioMetaData}\r\n      seekDisabled={false}\r\n      spotlightDisabled={false}\r\n      thumbnailSrc={audioMetaData.thumbnail}\r\n      title={\"Goldstone AudioPlayer \"}\r\n      titleHideDelay={4000}\r\n    />\r\n  );\r\n};\r\n\r\nAudioPanel.propTypes = {\r\n  getAudioMetaData: PropTypes.func,\r\n  handleBack: PropTypes.func,\r\n  audioIndex: PropTypes.number,\r\n  audioList: PropTypes.array,\r\n  audioMetaData: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  audio: { currentAudioMetaData, audioList, audioIndex },\r\n}) => {\r\n  return {\r\n    audioMetaData: currentAudioMetaData,\r\n    audioList: audioList,\r\n    audioIndex: audioIndex,\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    handleBack: (path) => dispatch(changePath(path)),\r\n    getAudioMetaData: (uri, index) =>\r\n      dispatch(\r\n        getCurrentAudioMetaData({\r\n          uri: uri,\r\n          audioIndex: index,\r\n        })\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(AudioPanel);\r\n","F:\\BT carkit\\Music_Player_App\\src\\reducers\\navigationReducer.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\audioReducer.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\deviceReducer.js",[],"F:\\BT carkit\\Music_Player_App\\src\\views\\MainPanel\\MainPanel.js",["1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661"],"import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Panel, Header } from \"../../../goldstone/Panels\";\r\nimport AudioList from \"../../components/AudioList/AudioList\";\r\n\r\nimport { changePath } from \"../../actions/navigationActions\";\r\nimport {\r\n  getAudioList,\r\n  getCurrentAudioMetaData,\r\n} from \"../../actions/audioActions\";\r\nimport getFolderItems from '../../actions/getFolderItems';\r\nimport getNumberOfItems from '../../actions/getNumberOfItems';\r\nimport css from \"./MainPanel.module.less\";\r\n\r\nconst MainPanel = ({\r\n  handleNavigate,\r\n  getAudioMetaData,\r\n  getFolderItems,\r\n  getNumberOfItems,\r\n  audioList,\r\n  playerInfo,\r\n  address,\r\n  folderPath,\r\n  folderItems,\r\n  avrcpStatus,\r\n  noOfItems,\r\n  audioItems,\r\n  ...rest\r\n}) => {\r\n  useEffect(() => { \r\n    // getNumberOfItems(address,'MUSIC_LIST').then((noOfItems)=>{\r\n    //   console.log(\"No of Items MUSIC LIST: \"+noOfItems)\r\n\t\t// \t\t\t\tconsole.log(\"address: \"+address)\r\n\t\t// \tgetFolderItems(address,noOfItems,'MUSIC_LIST');\r\n\t\t// });\r\n  }, [address, noOfItems, folderPath]);\r\n\r\n  const handleAudioNavigate = (url, AudioMetaData, index) => {\r\n    getAudioMetaData(AudioMetaData.uri, index);\r\n    handleNavigate(url);\r\n  };\r\n  \r\n  return (\r\n    <Panel className={css.container} {...rest}>\r\n      <Header />\r\n        <AudioList\r\n          audiolist={audioItems}\r\n          handleNavigate={handleAudioNavigate}\r\n        />\r\n    </Panel>\r\n  );\r\n};\r\n\r\nMainPanel.propTypes = {\r\n  getAudioMetaData: PropTypes.func,\r\n  getFolderItems: PropTypes.func,\r\n  getNumberOfItems: PropTypes.func,\r\n  changeItemPath: PropTypes.func,\r\n  handleNavigate: PropTypes.func,\r\n  audioList: PropTypes.array,\r\n  playerInfo: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = ({audio,playerInfo,folderPath,avrcpConnectionStatus, folderItems,noOfFolderItems}) => {\r\n  return {\r\n    audioList: audio.audioList,\r\n    playerInfo: playerInfo,\r\n    avrcpStatus: avrcpConnectionStatus,\r\n    audioItems: folderItems.audioItems,\r\n    noOfItems:noOfFolderItems.noOfItems,\r\n    folderPath: folderPath.path\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    handleNavigate: (path) => dispatch(changePath(path)),\r\n    getNumberOfItems: (address,step) => dispatch(getNumberOfItems(address,step)),\r\n    getFolderItems: (address,res,step) => dispatch(getFolderItems(address,res,step)),\r\n    getAudioMetaData: (uri, index) =>\r\n      dispatch(\r\n        getCurrentAudioMetaData({\r\n          uri: uri,\r\n          audioIndex: index,\r\n        })\r\n      ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(MainPanel);\r\n","F:\\BT carkit\\Music_Player_App\\goldstone\\Panels\\index.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\ThemeDecorator\\ThemeDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\src\\actions\\navigationActions.js",[],"F:\\BT carkit\\Music_Player_App\\src\\actions\\audioActions.js",[],"F:\\BT carkit\\Music_Player_App\\src\\actions\\types.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayer.js",["1662"],"F:\\BT carkit\\Music_Player_App\\src\\actions\\deviceActions.js",["1663"],["1664","1665","1666"],"F:\\BT carkit\\Music_Player_App\\goldstone\\Panels\\Header.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Panels\\Panel.js",["1667"],"F:\\BT carkit\\Music_Player_App\\goldstone\\Panels\\Panels.js",["1668"],"F:\\BT carkit\\Music_Player_App\\goldstone\\ThemeDecorator\\I18nFontDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioList\\AudioList.js",["1669","1670","1671","1672","1673","1674"],"import PropTypes from \"prop-types\";\r\nimport ImageItem from \"../../../goldstone/ImageItem\";\r\nimport { VirtualGridList } from \"../../../goldstone/VirtualList/VirtualList\";\r\nimport ri from \"@enact/ui/resolution\";\r\nimport placeHolderImg from \"../../../assets/images/defaultmusic.jpg\";\r\nimport { getEncodedPath } from \"../AudioPlayer/AudioPlayerBase/util\";\r\n\r\nimport css from './AudioList.module.less';\r\n\r\nconst audioList = ({ audiolist, handleNavigate }) => {\r\n  const getDuration=(duration)=>{\r\n    let hrs = ~~(duration / 3600);\r\n    let mins = ~~((duration % 3600) / 60);\r\n    let secs = ~~duration % 60;\r\n    let ret = \"\";\r\n\r\n    if (hrs > 0) {\r\n        ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\r\n    }\r\n\r\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\r\n    ret += \"\" + secs;\r\n    return ret;\r\n  };\r\n \r\n  const renderItem = ({ index, ...rest }) => {\r\n    // let encodedPath = getEncodedPath(audiolist[index].thumbnail);\r\n    return (<>\r\n      <ImageItem\r\n        {...rest}\r\n        className={css.imageItem}\r\n        // src={encodedPath}\r\n        oreintation=\"horizontal\"\r\n        placeholder={placeHolderImg}\r\n        onClick={() => handleNavigate(\"/audioplayer\", audiolist[index], index)}\r\n      />\r\n      <div className={css.audioInfo} onClick={() => handleNavigate(\"/audioplayer\", audiolist[index], index)}>\r\n        <strong className={css.title}>{audiolist[index].metaData.title}</strong>\r\n        <p className={css.subtitle}>\r\n          {(audiolist[index].artist?audiolist[index].artist:audiolist[index].metaData.album)+\" \"+getDuration(audiolist[index].metaData.duration)}\r\n        </p>\r\n      </div>\r\n      <hr className={css.divider}></hr>\r\n      </>\r\n    );\r\n  };\r\n  audiolist = audiolist || [];\r\n  return audiolist.length === 0 ? (\r\n    <strong>Connected device does not contain any audio files</strong>\r\n  ) : (\r\n    <VirtualGridList\r\n      direction=\"vertical\"\r\n      dataSize={audiolist.length}\r\n      itemRenderer={renderItem}\r\n      itemSize={{\r\n        minWidth: ri.scale(3000),\r\n        minHeight: ri.scale(300),\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\naudioList.propTypes = {\r\n  handleNavigate: PropTypes.func.isRequired,\r\n  audioList: PropTypes.array,\r\n};\r\n\r\naudioList.default = {\r\n  audioList: [],\r\n};\r\n\r\nexport default audioList;\r\n","F:\\BT carkit\\Music_Player_App\\goldstone\\ThemeDecorator\\AccessibilityDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\Reducers\\AudioPlayerReducer.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\TabLayout\\TabLayout.js",["1675"],["1676","1677","1678"],"F:\\BT carkit\\Music_Player_App\\goldstone\\Skinnable\\Skinnable.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\AudioPlayerBase.js",["1679","1680","1681","1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696"],"/**\r\n * Provides Goldstone-themed video player components.\r\n *\r\n * @module goldstone/VideoPlayer\r\n * @exports Video\r\n * @exports VideoPlayer\r\n * @exports VideoPlayerBase\r\n * @exports MediaControls\r\n */\r\nimport ApiDecorator from \"@enact/core/internal/ApiDecorator\";\r\nimport { on, off } from \"@enact/core/dispatcher\";\r\nimport DurationFmt from \"ilib/lib/DurationFmt\";\r\nimport {\r\n  adaptEvent,\r\n  call,\r\n  forKey,\r\n  forward,\r\n  forwardWithPrevent,\r\n  handle,\r\n  preventDefault,\r\n  stopImmediate,\r\n  returnsTrue,\r\n} from \"@enact/core/handle\";\r\nimport { is } from \"@enact/core/keymap\";\r\nimport { platform } from \"@enact/core/platform\";\r\nimport EnactPropTypes from \"@enact/core/internal/prop-types\";\r\nimport { Job } from \"@enact/core/util\";\r\nimport { I18nContextDecorator } from \"@enact/i18n/I18nDecorator\";\r\nimport { toUpperCase } from \"@enact/i18n/util\";\r\nimport Spotlight from \"@enact/spotlight\";\r\nimport { SpotlightContainerDecorator } from \"@enact/spotlight/SpotlightContainerDecorator\";\r\nimport { Spottable } from \"@enact/spotlight/Spottable\";\r\nimport ComponentOverride from \"@enact/ui/ComponentOverride\";\r\nimport { FloatingLayerDecorator } from \"@enact/ui/FloatingLayer\";\r\nimport { FloatingLayerContext } from \"@enact/ui/FloatingLayer/FloatingLayerDecorator\";\r\nimport Slottable from \"@enact/ui/Slottable\";\r\nimport Touchable from \"@enact/ui/Touchable\";\r\nimport equals from \"ramda/src/equals\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useContext,\r\n  useRef,\r\n  memo,\r\n} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Skinnable from \"../../../../goldstone/Skinnable/Skinnable\";\r\nimport Spinner from \"../../../../goldstone/Spinner/Spinner\";\r\nimport { calcNumberValueOfPlaybackRate } from \"./util\";\r\nimport Overlay from \"./Overlay\";\r\nimport Media from \"./Media\";\r\nimport MediaControls from \"./MediaControls\";\r\nimport MediaTitle from \"./MediaTitle\";\r\nimport MediaSlider from \"./MediaSlider\";\r\nimport Audio from \"./Audio\";\r\nimport css from \"./AudioPlayer.module.less\";\r\nimport AlbumInfo from \"./AlbumInfo\";\r\n\r\nconst SpottableDiv = Touchable(Spottable(\"div\"));\r\nconst RootContainer = memo(\r\n  SpotlightContainerDecorator(\r\n    {\r\n      enterTo: \"default-element\",\r\n      defaultElement: [`.${css.controlsHandleAbove}`, `.${css.controlsFrame}`],\r\n    },\r\n    \"div\"\r\n  )\r\n);\r\n\r\nconst ControlsContainer = memo(\r\n  SpotlightContainerDecorator(\r\n    {\r\n      enterTo: \"\",\r\n      straightOnly: true,\r\n    },\r\n    \"div\"\r\n  )\r\n);\r\n\r\n\r\nconst forwardWithState = (type) =>\r\n  adaptEvent(call(\"addStateToEvent\"), forwardWithPrevent(type));\r\n\r\n// provide forwarding of events on media controls\r\nconst forwardControlsAvailable = forward(\"onControlsAvailable\");\r\nconst forwardPlay = forward(\"onPlay\");\r\nconst forwardPause = forwardWithState(\"onPause\");\r\n\r\n// Function to get previous value from the state\r\nconst usePrevious = (value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n};\r\n\r\n/**\r\n * A player for audio\r\n *\r\n * @class AudioPlayerBase\r\n * @ui\r\n * @public\r\n */\r\nfunction AudioPlayerBase({\r\n  autoCloseTimeout,\r\n  className,\r\n  feedbackHideDelay,\r\n  disabled,\r\n  infoComponents,\r\n  jumpBy,\r\n  loading,\r\n  locale,\r\n  mediaControlsComponent,\r\n  miniFeedbackHideDelay,\r\n  noAutoPlay,\r\n  noAutoShowMediaControls,\r\n  noMediaSliderFeedback,\r\n  noSlider,\r\n  noSpinner,\r\n  onBack,\r\n  onJumpBackward,\r\n  onJumpForward,\r\n  seekDisabled,\r\n  selection,\r\n  spotlightDisabled,\r\n  spotlightId,\r\n  style,\r\n  thumbnailSrc,\r\n  title,\r\n  titleHideDelay,\r\n  videoComponent: VideoComponent,\r\n  ...mediaProps\r\n}) {\r\n  /* eslint no-use-before-define: [\"error\", { \"variables\": false }]*/\r\n  let handleSpotlightUpFromSlider = null;\r\n  const titleRef = useRef(null);\r\n  const player = useRef({});\r\n  const playbackRate = useRef(null);\r\n  // Internal State\r\n  const audio = useRef(null);\r\n  const prevCommand = useRef(noAutoPlay ? \"pause\" : \"play\");\r\n  const speedIndex = useRef(0);\r\n  const id = Math.random().toString(36).substr(2, 8);\r\n  const sliderScrubbing = useRef();\r\n  const sliderKnobProportion = useRef(0);\r\n  const pulsedPlaybackRate = useRef();\r\n  const pulsedPlaybackState = useRef();\r\n  const mediaControlsSpotlightId = useRef(`${spotlightId}_mediaControls`);\r\n  const showMiniFeedback = useRef(false);\r\n  const [state, setSettings] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    error: false,\r\n    loading: false,\r\n    paused: noAutoPlay,\r\n    playbackRate: 1,\r\n\r\n    // Non-standard state computed from properties\r\n    bottomControlsRendered: true,\r\n    feedbackAction: \"idle\",\r\n    feedbackVisible: false,\r\n    infoVisible: false,\r\n    mediaControlsVisible: true,\r\n    mediaSliderVisible: true,\r\n    miniFeedbackVisible: false,\r\n    proportionLoaded: 0,\r\n    proportionPlayed: 0,\r\n    sourceUnavailable: false,\r\n    titleVisible: true,\r\n  });\r\n\r\n  const prevStateRef = usePrevious(state);\r\n  const prevPropsRef = usePrevious(arguments[0]);\r\n  const context = useContext(FloatingLayerContext);\r\n  const floatingLayerController = useRef();\r\n  const hideFeedback = () => {\r\n    if (state.feedbackVisible && state.feedbackAction !== \"focus\") {\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        feedbackVisible: false,\r\n        feedbackAction: \"idle\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  const hideTitle = () => {\r\n    setSettings((prevState) => ({ ...prevState, titleVisible: false }));\r\n  };\r\n\r\n  const stopDelayedFeedbackHide = useCallback(() => {\r\n    new Job(hideFeedback).stop();\r\n  }, [hideFeedback]);\r\n\r\n  const stopDelayedTitleHide = useCallback(() => {\r\n    new Job(hideTitle).stop();\r\n  }, [hideTitle]);\r\n\r\n  const doAutoClose = () => {\r\n    stopDelayedFeedbackHide();\r\n    stopDelayedTitleHide();\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      feedbackVisible: false,\r\n      mediaControlsVisible: false,\r\n      mediaSliderVisible:\r\n        prevState.mediaSliderVisible && prevState.miniFeedbackVisible,\r\n      infoVisible: false,\r\n    }));\r\n  };\r\n\r\n  const autoCloseJob = new Job(doAutoClose);\r\n  const startAutoCloseTimeout = useCallback(() => {\r\n    // If state.more is used as a reference for when this function should fire, timing for\r\n    // detection of when \"more\" is pressed vs when the state is updated is mismatched. Using an\r\n    // instance variable that's only set and used for this express purpose seems cleanest.\r\n    if (autoCloseTimeout && state.mediaControlsVisible) {\r\n      // autoCloseJob.startAfter(autoCloseTimeout);\r\n    }\r\n  }, [autoCloseTimeout, state.mediaControlsVisible]);\r\n\r\n  const activityDetected = useCallback(() => {\r\n    startAutoCloseTimeout();\r\n  }, [startAutoCloseTimeout]);\r\n\r\n  const startDelayedFeedbackHide = useCallback(() => {\r\n    if (feedbackHideDelay) {\r\n      new Job(hideFeedback).startAfter(feedbackHideDelay);\r\n    }\r\n  }, [feedbackHideDelay, hideFeedback]);\r\n\r\n  const startDelayedTitleHide = useCallback(() => {\r\n    if (titleHideDelay) {\r\n      new Job(hideTitle).startAfter(titleHideDelay);\r\n    }\r\n  }, [hideTitle, titleHideDelay]);\r\n\r\n  /**\r\n   * Shows media controls.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @public\r\n   */\r\n  const showControls = useCallback(() => {\r\n    if (disabled) {\r\n      return;\r\n    }\r\n    startDelayedFeedbackHide();\r\n    startDelayedTitleHide();\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      bottomControlsRendered: true,\r\n      feedbackAction: \"idle\",\r\n      feedbackVisible: true,\r\n      mediaControlsVisible: true,\r\n      mediaSliderVisible: true,\r\n      miniFeedbackVisible: false,\r\n      titleVisible: true,\r\n    }));\r\n  }, [disabled, startDelayedFeedbackHide, startDelayedTitleHide, state]);\r\n\r\n  const showControlsFromPointer = () => {\r\n    Spotlight.setPointerMode(false);\r\n    showControls();\r\n  };\r\n\r\n  const handleGlobalKeyDown = handle(\r\n    returnsTrue(activityDetected),\r\n    forKey(\"down\"),\r\n    () =>\r\n      !state.mediaControlsVisible &&\r\n      !Spotlight.getCurrent() &&\r\n      Spotlight.getPointerMode() &&\r\n      !spotlightDisabled,\r\n    preventDefault,\r\n    stopImmediate,\r\n    showControlsFromPointer\r\n  );\r\n\r\n  const showFeedback = useCallback(() => {\r\n    if (state.mediaControlsVisible) {\r\n      setSettings((prevState) => ({ ...prevState, feedbackVisible: true }));\r\n    } else {\r\n      const shouldShowSlider =\r\n        pulsedPlaybackState.current !== null ||\r\n        calcNumberValueOfPlaybackRate(playbackRate.current) !== 1;\r\n\r\n      if (\r\n        showMiniFeedback.current &&\r\n        (!state.miniFeedbackVisible ||\r\n          state.mediaSliderVisible !== shouldShowSlider)\r\n      ) {\r\n        setSettings((prevState) => ({\r\n          ...prevState,\r\n          mediaSliderVisible: shouldShowSlider && !noMediaSliderFeedback,\r\n          miniFeedbackVisible: !(\r\n            prevState.loading ||\r\n            !prevState.duration ||\r\n            prevState.error\r\n          ),\r\n        }));\r\n      }\r\n    }\r\n  }, [\r\n    noMediaSliderFeedback,\r\n    state.mediaControlsVisible,\r\n    state.mediaSliderVisible,\r\n    state.miniFeedbackVisible,\r\n  ]);\r\n\r\n  /**\r\n   * Set the media playback time index\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @param {Number} timeIndex - Time index to seek\r\n   * @public\r\n   */\r\n  const seek = useCallback(\r\n    (timeIndex) => {\r\n      if (\r\n        !seekDisabled &&\r\n        !isNaN(audio.current.duration) &&\r\n        !state.sourceUnavailable\r\n      ) {\r\n        audio.current.currentTime = timeIndex;\r\n      } else {\r\n        forward(\"onSeekFailed\", {}, arguments[0]);\r\n      }\r\n    },\r\n    [seekDisabled, state.sourceUnavailable]\r\n  );\r\n\r\n  const hideMiniFeedback = () => {\r\n    if (state.miniFeedbackVisible) {\r\n      showMiniFeedback.current = false;\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        mediaSliderVisible: false,\r\n        miniFeedbackVisible: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const hideMiniFeedbackJob = new Job(hideMiniFeedback);\r\n\r\n  const startDelayedMiniFeedbackHide = useCallback(\r\n    (delay = miniFeedbackHideDelay) => {\r\n      if (delay) {\r\n        hideMiniFeedbackJob.startAfter(delay);\r\n      }\r\n    },\r\n    [hideMiniFeedbackJob, miniFeedbackHideDelay]\r\n  );\r\n\r\n  /**\r\n   * Step a given amount of time away from the current playback position.\r\n   * Like [seek]{@link goldstone/VideoPlayer.VideoPlayer#seek} but relative.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @param {Number} distance - Time value to jump\r\n   * @public\r\n   */\r\n  const jump = useCallback(\r\n    (distance) => {\r\n      if (state.sourceUnavailable) {\r\n        return;\r\n      }\r\n\r\n      pulsedPlaybackRate.current = toUpperCase(\r\n        new DurationFmt({ length: \"long\" }).format({ second: jumpBy })\r\n      );\r\n      pulsedPlaybackState.current =\r\n        distance > 0 ? \"jumpForward\" : \"jumpBackward\";\r\n      showFeedback();\r\n      startDelayedFeedbackHide();\r\n      seek(state.currentTime + distance);\r\n      startDelayedMiniFeedbackHide();\r\n    },\r\n    [\r\n      jumpBy,\r\n      seek,\r\n      showFeedback,\r\n      startDelayedFeedbackHide,\r\n      startDelayedMiniFeedbackHide,\r\n      state.currentTime,\r\n      state.sourceUnavailable,\r\n    ]\r\n  );\r\n\r\n  const stopDelayedMiniFeedbackHide = useCallback(() => {\r\n    hideMiniFeedbackJob.stop();\r\n  }, [hideMiniFeedbackJob]);\r\n\r\n  const clearPulsedPlayback = () => {\r\n    pulsedPlaybackRate.current = null;\r\n    pulsedPlaybackState.current = null;\r\n  };\r\n\r\n  const stopAutoCloseTimeout = useCallback(() => {\r\n    autoCloseJob.stop();\r\n  }, [autoCloseJob]);\r\n\r\n  const renderBottomControl = new Job(() => {\r\n    if (!state.bottomControlsRendered) {\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        bottomControlsRendered: true,\r\n      }));\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    on(\"mousemove\", activityDetected);\r\n    if (platform.touch) {\r\n      on(\"touchmove\", activityDetected);\r\n    }\r\n    document.addEventListener(\"keydown\", handleGlobalKeyDown, {\r\n      capture: true,\r\n    });\r\n    document.addEventListener(\"wheel\", activityDetected, { capture: true });\r\n    startDelayedFeedbackHide();\r\n    if (context && typeof context === \"function\") {\r\n      floatingLayerController.current = context(() => {});\r\n    }\r\n\r\n    // Cleanup\r\n    return () => {\r\n      off(\"mousemove\", activityDetected);\r\n      if (platform.touch) {\r\n        off(\"touchmove\", activityDetected);\r\n      }\r\n      document.removeEventListener(\"keydown\", handleGlobalKeyDown, {\r\n        capture: true,\r\n      });\r\n      document.removeEventListener(\"wheel\", activityDetected, {\r\n        capture: true,\r\n      });\r\n      stopAutoCloseTimeout();\r\n      stopDelayedTitleHide();\r\n      stopDelayedFeedbackHide();\r\n      stopDelayedMiniFeedbackHide();\r\n      renderBottomControl.stop();\r\n      if (floatingLayerController.current) {\r\n        floatingLayerController.current.unregister();\r\n      }\r\n    };\r\n  }, [\r\n    activityDetected,\r\n    context,\r\n    handleGlobalKeyDown,\r\n    renderBottomControl,\r\n    startDelayedFeedbackHide,\r\n    stopAutoCloseTimeout,\r\n    stopDelayedFeedbackHide,\r\n    stopDelayedMiniFeedbackHide,\r\n    stopDelayedTitleHide,\r\n  ]);\r\n\r\n  const getHeightForElement = (elementName) => {\r\n    const element = player.current.querySelector(`.${css[elementName]}`);\r\n    if (element) {\r\n      return element.offsetHeight;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      titleRef.current &&\r\n      state.infoVisible &&\r\n      (!prevStateRef.infoVisible ||\r\n        !equals(infoComponents, prevPropsRef.infoComponents))\r\n    ) {\r\n      titleRef.current.style.setProperty(\r\n        \"--infoComponentsOffset\",\r\n        `${getHeightForElement(\"infoComponents\")}px`\r\n      );\r\n    }\r\n\r\n    if (\r\n      (!state.mediaControlsVisible &&\r\n        prevStateRef &&\r\n        prevStateRef.mediaControlsVisible !== state.mediaControlsVisible) ||\r\n      (!state.mediaSliderVisible &&\r\n        prevStateRef &&\r\n        prevStateRef.mediaSliderVisible !== state.mediaSliderVisible)\r\n    ) {\r\n      if (typeof floatingLayerController.current !== \"undefined\") {\r\n        floatingLayerController.current.notify({ action: \"closeAll\" });\r\n      }\r\n    }\r\n\r\n    if (\r\n      spotlightId !== prevPropsRef &&\r\n      prevPropsRef &&\r\n      prevPropsRef.spotlightId\r\n    ) {\r\n      mediaControlsSpotlightId.current = `${spotlightId}_mediaControls`;\r\n    }\r\n\r\n    if (\r\n      !state.mediaControlsVisible &&\r\n      prevStateRef &&\r\n      prevStateRef.mediaControlsVisible\r\n    ) {\r\n      forwardControlsAvailable({ available: false }, arguments[0]);\r\n      stopAutoCloseTimeout();\r\n\r\n      if (!spotlightDisabled) {\r\n        // If last focused item were in the media controls or slider, we need to explicitly\r\n        // blur the element when MediaControls hide. See ENYO-5648\r\n        const current = Spotlight.getCurrent();\r\n        const bottomControls = document.querySelector(`.${css.bottom}`);\r\n        if (current && bottomControls && bottomControls.contains(current)) {\r\n          current.blur();\r\n        }\r\n        // when in pointer mode, the focus call below will only update the last focused for\r\n        // the video player and not set the active container to the video player which will\r\n        // cause focus to land back on the media controls button when spotlight restores\r\n        // focus.\r\n        if (Spotlight.getPointerMode()) {\r\n          Spotlight.setActiveContainer(spotlightId);\r\n        }\r\n        // Set focus to the hidden spottable control - maintaining focus on available spottable\r\n        // controls, which prevents an additional 5-way attempt in order to re-show media controls\r\n        Spotlight.focus(`.${css.controlsHandleAbove}`);\r\n      }\r\n    } else if (\r\n      state.mediaControlsVisible &&\r\n      prevStateRef &&\r\n      !prevStateRef.mediaControlsVisible\r\n    ) {\r\n      forwardControlsAvailable({ available: true }, arguments[0]);\r\n      startAutoCloseTimeout();\r\n      if (!spotlightDisabled) {\r\n        const current = Spotlight.getCurrent();\r\n        if (!current || player.current.contains(current)) {\r\n          // Set focus within media controls when they become visible.\r\n          Spotlight.focus(mediaControlsSpotlightId.current);\r\n        }\r\n      }\r\n    }\r\n    // Once video starts loading it queues bottom control render until idle\r\n    if (\r\n      state.bottomControlsRendered &&\r\n      prevStateRef &&\r\n      !prevStateRef.bottomControlsRendered &&\r\n      !state.mediaControlsVisible\r\n    ) {\r\n      showControls();\r\n    }\r\n  }, [\r\n    arguments,\r\n    infoComponents,\r\n    prevPropsRef,\r\n    prevStateRef,\r\n    showControls,\r\n    spotlightDisabled,\r\n    spotlightId,\r\n    startAutoCloseTimeout,\r\n    state.bottomControlsRendered,\r\n    state.infoVisible,\r\n    state.mediaControlsVisible,\r\n    state.mediaSliderVisible,\r\n    stopAutoCloseTimeout,\r\n  ]);\r\n\r\n  const preventTimeChange = useCallback(\r\n    (time) => {\r\n      const isTimeBeyondSelection = () => {\r\n        // if selection isn't set or only contains the starting value, there isn't a valid selection\r\n        // with which to test the time\r\n        if (selection != null && selection.length >= 2) {\r\n          const [start, end] = selection;\r\n\r\n          return time > end || time < start;\r\n        }\r\n\r\n        return false;\r\n      };\r\n\r\n      return (\r\n        isTimeBeyondSelection(time) &&\r\n        !forwardWithPrevent(\r\n          \"onSeekOutsideSelection\",\r\n          { type: \"onSeekOutsideSelection\", time },\r\n          arguments[0]\r\n        )\r\n      );\r\n    },\r\n    [selection]\r\n  );\r\n\r\n  /**\r\n   * Hides media controls.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @public\r\n   */\r\n  const hideControls = useCallback(() => {\r\n    stopDelayedFeedbackHide();\r\n    stopDelayedMiniFeedbackHide();\r\n    stopDelayedTitleHide();\r\n    stopAutoCloseTimeout();\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      feedbackAction: \"idle\",\r\n      feedbackVisible: false,\r\n      mediaControlsVisible: false,\r\n      mediaSliderVisible: false,\r\n      miniFeedbackVisible: false,\r\n      infoVisible: false,\r\n    }));\r\n  }, [\r\n    state,\r\n    stopAutoCloseTimeout,\r\n    stopDelayedFeedbackHide,\r\n    stopDelayedMiniFeedbackHide,\r\n    stopDelayedTitleHide,\r\n  ]);\r\n\r\n  // only show mini feedback if playback controls are invoked by a key event\r\n  const shouldShowMiniFeedback = (ev) => {\r\n    if (ev.type === \"keyup\") {\r\n      showMiniFeedback.current = true;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleLoadStart = () => {\r\n    prevCommand.current = noAutoPlay ? \"pause\" : \"play\";\r\n    speedIndex.current = 0;\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      currentTime: 0,\r\n      sourceUnavailable: true,\r\n      proportionPlayed: 0,\r\n      proportionLoaded: 0,\r\n    }));\r\n\r\n    if (!noAutoShowMediaControls) {\r\n      if (!state.bottomControlsRendered) {\r\n        renderBottomControl.idle();\r\n      } else {\r\n        showControls();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEndedEvent = () => {\r\n    forward(\"onEnded\", {}, arguments[0]);\r\n  };\r\n\r\n  const handlePlay = handle(forwardPlay, shouldShowMiniFeedback, () => play());\r\n\r\n  const handlePause = handle(forwardPause, shouldShowMiniFeedback, () =>\r\n    pause()\r\n  );\r\n\r\n  const handleJump = useCallback(\r\n    ({ keyCode }) => {\r\n      if (seekDisabled) {\r\n        forward(\"onSeekFailed\", {}, arguments[0]);\r\n      } else {\r\n        const jumpByLeft = (is(\"left\", keyCode) ? -1 : 1) * jumpBy;\r\n        const time = Math.min(\r\n          state.duration,\r\n          Math.max(0, state.currentTime + jumpByLeft)\r\n        );\r\n\r\n        if (preventTimeChange(time)) return;\r\n\r\n        showMiniFeedback.current = true;\r\n        jump(jumpByLeft);\r\n      }\r\n    },\r\n    [\r\n      seekDisabled,\r\n      jumpBy,\r\n      state.duration,\r\n      state.currentTime,\r\n      preventTimeChange,\r\n      jump,\r\n      locale,\r\n    ]\r\n  );\r\n\r\n  //\r\n  // Media Interaction Methods\r\n  //\r\n  const handleEvent = () => {\r\n    const el = audio.current;\r\n    const updatedState = {\r\n      // Standard media properties\r\n      currentTime: el.currentTime,\r\n      duration: el.duration,\r\n      paused: el.playbackRate !== 1 || el.paused,\r\n      playbackRate: el.playbackRate,\r\n\r\n      // Non-standard state computed from properties\r\n      error: el.error,\r\n      loading: el.loading,\r\n      proportionLoaded: el.proportionLoaded,\r\n      proportionPlayed: el.proportionPlayed || 0,\r\n      // note: `el.loading && state.sourceUnavailable == false` is equivalent to `oncanplaythrough`\r\n      sourceUnavailable: (el.loading && state.sourceUnavailable) || el.error,\r\n    };\r\n\r\n    // If there's an error, we're obviously not loading, no matter what the readyState is.\r\n    if (updatedState.error) updatedState.loading = false;\r\n    if (\r\n      mediaProps.pauseAtEnd &&\r\n      (el.currentTime === 0 || el.currentTime === el.duration)\r\n    ) {\r\n      pause();\r\n    }\r\n\r\n    setSettings((prevState) => {\r\n      if (\r\n        typeof prevStateRef !== \"undefined\" &&\r\n        !prevStateRef.miniFeedbackVisible &&\r\n        prevStateRef.miniFeedbackVisible === state.miniFeedbackVisible &&\r\n        !prevStateRef.mediaSliderVisible &&\r\n        prevStateRef.mediaSliderVisible === state.mediaSliderVisible &&\r\n        prevStateRef.loading === state.loading &&\r\n        prevPropsRef.loading === loading &&\r\n        (prevState.currentTime !== updatedState.currentTime ||\r\n          prevState.proportionPlayed !== updatedState.proportionPlayed)\r\n      ) {\r\n        return prevState;\r\n      }\r\n      return {\r\n        ...prevState,\r\n        ...updatedState,\r\n      };\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The primary means of interacting with the `<audio>` element.\r\n   *\r\n   * @param  {String} action The method to preform.\r\n   * @param  {Multiple} props  The arguments, in the format that the action method requires.\r\n   *\r\n   * @private\r\n   */\r\n  const send = (action, props) => {\r\n    clearPulsedPlayback();\r\n    showFeedback();\r\n    startDelayedFeedbackHide();\r\n    audio.current[action](props);\r\n  };\r\n\r\n  /**\r\n   * Programmatically plays the current media.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @public\r\n   */\r\n  const play = () => {\r\n    if (state.sourceUnavailable) {\r\n      return;\r\n    }\r\n    speedIndex.current = 0;\r\n    // must happen before send() to ensure feedback uses the right value\r\n    // TODO: refactor into state member\r\n    prevCommand.current = \"play\";\r\n    setPlaybackRate(1);\r\n    send(\"play\");\r\n    startDelayedMiniFeedbackHide(5000);\r\n  };\r\n\r\n  /**\r\n   * Programmatically plays the current media.\r\n   *\r\n   * @function\r\n   * @memberof goldstone/VideoPlayer.VideoPlayerBase.prototype\r\n   * @public\r\n   */\r\n  const pause = () => {\r\n    if (state.sourceUnavailable) {\r\n      return;\r\n    }\r\n\r\n    speedIndex.current = 0;\r\n    // must happen before send() to ensure feedback uses the right value\r\n    // TODO: refactor into state member\r\n    prevCommand.current = \"pause\";\r\n    setPlaybackRate(1);\r\n    send(\"pause\");\r\n    stopDelayedMiniFeedbackHide();\r\n  };\r\n\r\n  /**\r\n   * Sets [playbackRate]{@link goldstone/VideoPlayer.VideoPlayer#playbackRate}.\r\n   *\r\n   * @param {String} rate - The desired playback rate.\r\n   * @private\r\n   */\r\n  const setPlaybackRate = (rate) => {\r\n    // Make sure rate is a string\r\n    playbackRate.current = rate = String(rate);\r\n    const pbNumber = calcNumberValueOfPlaybackRate(rate);\r\n\r\n    if (platform.webos) {\r\n      // ReactDOM throws error for setting negative value for playbackRate\r\n      audio.current.playbackRate = pbNumber < 0 ? 0 : pbNumber;\r\n    } else {\r\n      // Set native playback rate\r\n      audio.current.playbackRate = pbNumber;\r\n    }\r\n  };\r\n\r\n  const onSliderChange = useCallback(\r\n    ({ value }) => {\r\n      const time = value * state.duration;\r\n\r\n      if (preventTimeChange(time)) return;\r\n\r\n      seek(time);\r\n      sliderScrubbing.current = false;\r\n    },\r\n    [state.duration, preventTimeChange, seek]\r\n  );\r\n\r\n  const handleKnobMove = useCallback(\r\n    (ev) => {\r\n      sliderScrubbing.current = true;\r\n\r\n      // prevent announcing repeatedly when the knob is detached from the progress.\r\n      // TODO: fix Slider to not send onKnobMove when the knob hasn't, in fact, moved\r\n      if (sliderKnobProportion.current !== ev.proportion) {\r\n        sliderKnobProportion.current = ev.proportion;\r\n        const seconds = Math.floor(\r\n          sliderKnobProportion.current * audio.current.duration\r\n        );\r\n\r\n        if (!isNaN(seconds)) {\r\n          forward(\"onScrub\", { ...ev, seconds }, arguments[0]);\r\n        }\r\n      }\r\n    },\r\n    [locale]\r\n  );\r\n\r\n  const handleSliderFocus = useCallback(() => {\r\n    const seconds = Math.floor(\r\n      sliderKnobProportion.current * audio.current.duration\r\n    );\r\n    sliderScrubbing.current = true;\r\n\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      feedbackAction: \"focus\",\r\n      feedbackVisible: true,\r\n    }));\r\n    stopDelayedFeedbackHide();\r\n\r\n    if (!isNaN(seconds)) {\r\n      forward(\r\n        \"onScrub\",\r\n        {\r\n          detached: sliderScrubbing.current,\r\n          proportion: sliderKnobProportion.current,\r\n          seconds,\r\n        },\r\n        arguments[0]\r\n      );\r\n    }\r\n  }, [locale, stopDelayedFeedbackHide]);\r\n\r\n  const handleSliderBlur = useCallback(() => {\r\n    sliderScrubbing.current = false;\r\n    startDelayedFeedbackHide();\r\n    setSettings((prevState) => ({\r\n      ...prevState,\r\n      feedbackAction: \"blur\",\r\n      feedbackVisible: true,\r\n    }));\r\n  }, [startDelayedFeedbackHide]);\r\n\r\n  const handleSliderKeyDown = useCallback((ev) => {\r\n    const { keyCode } = ev;\r\n\r\n    if (is(\"enter\", keyCode)) {\r\n      setSettings((prevState) => ({ ...prevState, slider5WayPressed: true }));\r\n    } else if (is(\"down\", keyCode)) {\r\n      Spotlight.setPointerMode(false);\r\n\r\n      if (Spotlight.focus(mediaControlsSpotlightId.current)) {\r\n        preventDefault(ev);\r\n        stopImmediate(ev);\r\n      }\r\n    } else if (is(\"up\", keyCode)) {\r\n      Spotlight.setPointerMode(false);\r\n      preventDefault(ev);\r\n      stopImmediate(ev);\r\n    }\r\n  }, []);\r\n\r\n  const handleToggleMore = useCallback(\r\n    ({ showMoreComponents, liftDistance }) => {\r\n      if (!showMoreComponents) {\r\n        startAutoCloseTimeout(); // Restore the timer since we are leaving \"more.\r\n        // Restore the title-hide now that we're finished with \"more\".\r\n        startDelayedTitleHide();\r\n      } else {\r\n        // Interrupt the title-hide since we don't want it hiding autonomously in \"more\".\r\n        stopDelayedTitleHide();\r\n      }\r\n\r\n      if (player.current && typeof player.current.style !== \"undefined\") {\r\n        player.current.style.setProperty(\"--liftDistance\", `${liftDistance}px`);\r\n      }\r\n\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        infoVisible: showMoreComponents,\r\n        titleVisible: true,\r\n      }));\r\n    },\r\n    [startAutoCloseTimeout, startDelayedTitleHide, stopDelayedTitleHide]\r\n  );\r\n\r\n  const handleMediaControlsClose = useCallback(\r\n    (event) => {\r\n      hideControls();\r\n      event.stopPropagation();\r\n    },\r\n    [hideControls]\r\n  );\r\n\r\n  const setPlayerRef = (node) => {\r\n    // TODO: We've moved SpotlightContainerDecorator up to allow VP to be spottable but also\r\n    // need a ref to the root node to query for children and set CSS variables.\r\n    // eslint-disable-next-line react/no-find-dom-node\r\n    player.current = ReactDOM.findDOMNode(node);\r\n  };\r\n\r\n  const setAudioRef = useCallback((refAudio) => {\r\n    if (refAudio !== null) {\r\n      audio.current = refAudio;\r\n    }\r\n  }, []);\r\n\r\n  const setTitleRef = (node) => {\r\n    titleRef.current = node;\r\n  };\r\n\r\n  delete mediaProps.autoCloseTimeout;\r\n  delete mediaProps.children;\r\n  delete mediaProps.feedbackHideDelay;\r\n  delete mediaProps.jumpBy;\r\n  delete mediaProps.miniFeedbackHideDelay;\r\n  delete mediaProps.noAutoShowMediaControls;\r\n  delete mediaProps.noMediaSliderFeedback;\r\n  delete mediaProps.onControlsAvailable;\r\n  delete mediaProps.onJumpBackward;\r\n  delete mediaProps.onJumpForward;\r\n  delete mediaProps.onPause;\r\n  delete mediaProps.onPlay;\r\n  delete mediaProps.onScrub;\r\n  delete mediaProps.onSeekFailed;\r\n  delete mediaProps.onSeekOutsideSelection;\r\n  delete mediaProps.pauseAtEnd;\r\n  delete mediaProps.playbackRateHash;\r\n  delete mediaProps.seekDisabled;\r\n  delete mediaProps.setApiProvider;\r\n  delete mediaProps.thumbnailUnavailable;\r\n  delete mediaProps.titleHideDelay;\r\n  delete mediaProps.videoPath;\r\n\r\n  mediaProps.autoPlay = !noAutoPlay;\r\n  mediaProps.className = css.audio;\r\n  mediaProps.controls = false;\r\n  mediaProps.mediaComponent = \"audio\";\r\n  mediaProps.onLoadStart = handleLoadStart;\r\n  mediaProps.onUpdate = handleEvent;\r\n  mediaProps.onEnded = handleEndedEvent;\r\n  mediaProps.ref = setAudioRef;\r\n\r\n  let proportionSelection = selection;\r\n  if (proportionSelection != null && state.duration) {\r\n    proportionSelection = selection.map((t) => t / state.duration);\r\n  }\r\n\r\n  return (\r\n    <RootContainer\r\n      className={classNames({ [css.audioPlayer]: true }, \"enact-fit\", {\r\n        [className]: className,\r\n      })}\r\n      onClick={activityDetected}\r\n      ref={setPlayerRef}\r\n      spotlightDisabled={spotlightDisabled}\r\n      spotlightId={spotlightId}\r\n      style={style}\r\n    >\r\n      <AlbumInfo\r\n        title={title}\r\n        artist={mediaProps.artist}\r\n        album={mediaProps.album}\r\n        locale={locale}\r\n        thumbnail={thumbnailSrc}\r\n        isPlaying= {prevCommand.current === \"play\"}\r\n        currentTime={state.currentTime}\r\n        duration={state.duration}\r\n      />\r\n      {(VideoComponent &&\r\n        (((typeof VideoComponent === \"function\" ||\r\n          typeof VideoComponent === \"string\") && (\r\n          <VideoComponent {...mediaProps} />\r\n        )) ||\r\n          (React.isValidElement(VideoComponent) &&\r\n            React.cloneElement(VideoComponent, mediaProps)))) ||\r\n        null}\r\n      <Overlay bottomControlsVisible>\r\n        {!noSpinner && (state.loading || loading) && <Spinner centered />}\r\n      </Overlay>\r\n      {state.bottomControlsRendered && (\r\n        <div className={css.fullscreen}>\r\n          {\r\n            <ControlsContainer\r\n              className={classNames({\r\n                [css.bottom]: true,\r\n                [css.hidden]: !state.mediaControlsVisible,\r\n                [css.lift]: state.infoVisible,\r\n              })}\r\n              spotlightDisabled={\r\n                spotlightDisabled || !state.mediaControlsVisible\r\n              }\r\n            >\r\n              {/* {state.mediaSliderVisible && (\r\n                <div className={css.infoFrame}>\r\n                  <MediaTitle\r\n                    id={id}\r\n                    infoVisible={state.infoVisible}\r\n                    ref={setTitleRef}\r\n                    title={title}\r\n                    visible={state.titleVisible && state.mediaControlsVisible}\r\n                  >\r\n                    {infoComponents}\r\n                  </MediaTitle>\r\n                </div>\r\n              )} */}\r\n              <ComponentOverride\r\n                component={mediaControlsComponent}\r\n                mediaDisabled={disabled || state.sourceUnavailable}\r\n                onClose={handleMediaControlsClose}\r\n                onJump={handleJump}\r\n                onJumpBackwardButtonClick={onJumpBackward}\r\n                onJumpForwardButtonClick={onJumpForward}\r\n                onPause={handlePause}\r\n                onPlay={handlePlay}\r\n                onBack={onBack}\r\n                onToggleMore={handleToggleMore}\r\n                paused={state.paused}\r\n                spotlightId={mediaControlsSpotlightId.current}\r\n                spotlightDisabled={\r\n                  !state.mediaControlsVisible || spotlightDisabled\r\n                }\r\n                visible={state.mediaControlsVisible}\r\n              />\r\n              <MediaSlider\r\n                    backgroundProgress={state.proportionLoaded}\r\n                    disabled={disabled || state.sourceUnavailable}\r\n                    forcePressed={state.slider5WayPressed}\r\n                    onBlur={handleSliderBlur}\r\n                    onChange={onSliderChange}\r\n                    onFocus={handleSliderFocus}\r\n                    onKeyDown={handleSliderKeyDown}\r\n                    onKnobMove={handleKnobMove}\r\n                    onSpotlightUp={handleSpotlightUpFromSlider}\r\n                    selection={proportionSelection}\r\n                    spotlightDisabled={\r\n                      spotlightDisabled || !state.mediaControlsVisible\r\n                    }\r\n                    value={state.proportionPlayed}\r\n                    visible={state.mediaSliderVisible}\r\n                  ></MediaSlider>\r\n            </ControlsContainer>\r\n          }\r\n        </div>\r\n      )}\r\n      <SpottableDiv\r\n        // This captures spotlight focus for use with 5-way.\r\n        // It's non-visible but lives at the top of the VideoPlayer.\r\n        className={css.controlsHandleAbove}\r\n        onClick={showControls}\r\n        onSpotlightDown={showControls}\r\n        spotlightDisabled={state.mediaControlsVisible || spotlightDisabled}\r\n      />\r\n    </RootContainer>\r\n  );\r\n}\r\n\r\nAudioPlayerBase.propTypes = {\r\n  /**\r\n   * The time (in milliseconds) before the control buttons will hide.\r\n   *\r\n   * Setting this to 0 or `null` disables closing, requiring user input to open and close.\r\n   *\r\n   * @type {Number}\r\n   * @default 5000\r\n   * @public\r\n   */\r\n  autoCloseTimeout: PropTypes.number,\r\n\r\n  /**\r\n   * Video Plays automatically on load\r\n   *\r\n   * @type {function}\r\n   * @private\r\n   */\r\n  autoPlay: PropTypes.func,\r\n\r\n  /**\r\n   * To enable controls or not\r\n   *\r\n   * @type {function}\r\n   * @private\r\n   */\r\n  controls: PropTypes.func,\r\n  /**\r\n   * Removes interactive capability from this component. This includes, but is not limited to,\r\n   * key-press events, most clickable buttons, and prevents the showing of the controls.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * Amount of time (in milliseconds) after which the feedback text/icon part of the slider's\r\n   * tooltip will automatically hidden after the last action.\r\n   * Setting this to 0 or `null` disables feedbackHideDelay; feedback will always be present.\r\n   *\r\n   * @type {Number}\r\n   * @default 3000\r\n   * @public\r\n   */\r\n  feedbackHideDelay: PropTypes.number,\r\n\r\n  /**\r\n   * Components placed below the title.\r\n   *\r\n   * Typically these will be media descriptor icons, like how many audio channels, what codec\r\n   * the video uses, but can also be a description for the video or anything else that seems\r\n   * appropriate to provide information about the video to the user.\r\n   *\r\n   * @type {Node}\r\n   * @public\r\n   */\r\n  infoComponents: PropTypes.node,\r\n\r\n  /**\r\n   * The number of seconds the player should skip forward or backward when a \"jump\" button is\r\n   * pressed.\r\n   *\r\n   * @type {Number}\r\n   * @default 30\r\n   * @public\r\n   */\r\n  jumpBy: PropTypes.number,\r\n\r\n  /**\r\n   * Manually set the loading state of the media, in case you have information that\r\n   * `VideoPlayer` does not have.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  loading: PropTypes.bool,\r\n\r\n  /**\r\n   * The current locale as a\r\n   * {@link https://tools.ietf.org/html/rfc5646|BCP 47 language tag}.\r\n   *\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  locale: PropTypes.string,\r\n\r\n  /**\r\n   * Type of Media\r\n   *\r\n   *\r\n   * @type {function}\r\n   * @public\r\n   */\r\n  mediaComponent: PropTypes.func,\r\n  /**\r\n   * Overrides the default media control component to support customized behaviors.\r\n   *\r\n   * The provided component will receive the following props from `VideoPlayer`:\r\n   *\r\n   * * `mediaDisabled` - `true` when the media controls are not interactive\r\n   * * `onClose` - Called when cancel key is pressed when the media controls are visible\r\n   * * `onJump` - Called when the media jumps either forward or backward\r\n   * * `onJumpBackwardButtonClick` - Called when the jump backward button is pressed\r\n   * * `onJumpForwardButtonClick` - Called when the jump forward button is pressed\r\n   * * `onKeyDown` - Called when a key is pressed\r\n   * * `onPause` - Called when the media is paused via a key event\r\n   * * `onPlay` - Called when the media is played via a key event\r\n   * * `onToggleMore` - Called when the more components are hidden or shown\r\n   * * `paused` - `true` when the media is paused\r\n   * * `spotlightId` - The spotlight container Id for the media controls\r\n   * * `spotlightDisabled` - `true` when spotlight is disabled for the media controls\r\n   * * `visible` - `true` when the media controls should be displayed\r\n   *\r\n   * @type {Component|Element}\r\n   * @default `goldstone/VideoPlayer.MediaControls`\r\n   * @public\r\n   */\r\n  mediaControlsComponent: EnactPropTypes.componentOverride,\r\n\r\n  /**\r\n   * Amount of time (in milliseconds), after the last user action, that the `miniFeedback`\r\n   * will automatically hide.\r\n   * Setting this to 0 or `null` disables `miniFeedbackHideDelay`; `miniFeedback` will always\r\n   * be present.\r\n   *\r\n   * @type {Number}\r\n   * @default 2000\r\n   * @public\r\n   */\r\n  miniFeedbackHideDelay: PropTypes.number,\r\n\r\n  /**\r\n   * Disable audio for this video.\r\n   *\r\n   * In a TV context, this is handled by the remote control, not programmatically in the\r\n   * VideoPlayer API.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  muted: PropTypes.bool,\r\n\r\n  /**\r\n   * Prevents the default behavior of playing a video immediately after it's loaded.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  noAutoPlay: PropTypes.bool,\r\n\r\n  /**\r\n   * Prevents the default behavior of showing media controls immediately after it's loaded.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  noAutoShowMediaControls: PropTypes.bool,\r\n\r\n  /**\r\n   * Hides media slider feedback when fast forward or rewind while media controls are hidden.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  noMediaSliderFeedback: PropTypes.bool,\r\n\r\n  /**\r\n   * Removes the media slider.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  noSlider: PropTypes.bool,\r\n\r\n  /**\r\n   * Removes spinner while loading.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  noSpinner: PropTypes.bool,\r\n\r\n  /**\r\n   * Functio to go back\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onBack: PropTypes.func,\r\n\r\n  /**\r\n   * Called when video ends\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onControlsAvailable: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the player's controls change availability, whether they are shown\r\n   * or hidden.\r\n   *\r\n   * The current status is sent as the first argument in an object with a key `available`\r\n   * which will be either `true` or `false`. (e.g.: `onControlsAvailable({available: true})`)\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onEnded: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the user clicks the JumpBackward button.\r\n   *\r\n   * Is passed a {@link goldstone/VideoPlayer.videoStatus} as the first argument.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onJumpBackward: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the user clicks the JumpForward button.\r\n   *\r\n   * Is passed a {@link goldstone/VideoPlayer.videoStatus} as the first argument.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onJumpForward: PropTypes.func,\r\n\r\n  /**\r\n   * Called when Video starts.\r\n   *\r\n   * Is passed a {@link goldstone/VideoPlayer.videoStatus} as the first argument.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onLoadStart: PropTypes.func,\r\n  /**\r\n   * Called when video is paused\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onPause: PropTypes.func,\r\n\r\n  /**\r\n   * Called when video is played\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onPlay: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the user is moving the VideoPlayer's Slider knob independently of\r\n   * the current playback position.\r\n   *\r\n   * It is passed an object with a `seconds` key (float value) to indicate the current time\r\n   * index. It can be used to update the `thumbnailSrc` to the reflect the current scrub\r\n   * position.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onScrub: PropTypes.func,\r\n\r\n  /**\r\n   * Called when seek is attempted while `seekDisabled` is true.\r\n   *\r\n   * @type {Function}\r\n   */\r\n  onSeekFailed: PropTypes.func,\r\n\r\n  /**\r\n   * Called when seeking outside of the current `selection` range.\r\n   *\r\n   * By default, the seek will still be performed. Calling `preventDefault()` on the event\r\n   * will prevent the seek operation.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onSeekOutsideSelection: PropTypes.func,\r\n\r\n  /**\r\n   * Called when update happens\r\n   *\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  onUpdate: PropTypes.func,\r\n\r\n  /**\r\n   * Pauses the video when it reaches either the start or the end of the video during rewind,\r\n   * slow rewind, fast forward, or slow forward.\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  pauseAtEnd: PropTypes.bool,\r\n\r\n  /**\r\n   * Refrence to video.\r\n   *\r\n   * @type {function}\r\n   * @public\r\n   */\r\n  ref: PropTypes.func,\r\n\r\n  /**\r\n   * Disables seek function.\r\n   *\r\n   * Note that jump by arrow keys will also be disabled when `true`.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  seekDisabled: PropTypes.bool,\r\n\r\n  /**\r\n   * A range of the video to display as selected.\r\n   *\r\n   * The value of `selection` may either be:\r\n   * * `null` or `undefined` for no selection,\r\n   * * a single-element array with the start time of the selection\r\n   * * a two-element array containing both the start and end time of the selection in seconds\r\n   *\r\n   * When the start time is specified, the media slider will show filled starting at that\r\n   * time to the current time.\r\n   *\r\n   * When the end time is specified, the slider's background will be filled between the two\r\n   * times.\r\n   *\r\n   * @type {Number[]}\r\n   * @public\r\n   */\r\n  selection: PropTypes.arrayOf(PropTypes.number),\r\n\r\n  /**\r\n   * Registers the VideoPlayer component with an\r\n   * {@link core/internal/ApiDecorator.ApiDecorator}.\r\n   *\r\n   * @type {Function}\r\n   * @private\r\n   */\r\n  setApiProvider: PropTypes.func,\r\n\r\n  /**\r\n   * Disables spotlight navigation into the component.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  spotlightDisabled: PropTypes.bool,\r\n\r\n  /**\r\n   * The spotlight container ID for the player.\r\n   *\r\n   * @type {String}\r\n   * @public\r\n   * @default 'videoPlayer'\r\n   */\r\n  spotlightId: PropTypes.string,\r\n\r\n  /**\r\n   * Style for video player.\r\n   *\r\n   * @type {Object}\r\n   * @public\r\n   */\r\n  style: PropTypes.object,\r\n\r\n  /**\r\n   * Thumbnail image source to show on the slider knob.\r\n   *\r\n   * This is a standard {@link goldstone/Image} component so it supports all of the same\r\n   * options for the `src` property. If no `thumbnailComponent` and no `thumbnailSrc` is set,\r\n   * no tooltip will display.\r\n   *\r\n   * @type {String|Object}\r\n   * @public\r\n   */\r\n  thumbnailSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n\r\n  /**\r\n   * Enables the thumbnail transition from opaque to translucent.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  thumbnailUnavailable: PropTypes.bool,\r\n\r\n  /**\r\n   * Title for the video being played.\r\n   *\r\n   * @type {Node}\r\n   * @public\r\n   */\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\r\n\r\n  /**\r\n   * The time (in milliseconds) before the title disappears from the controls.\r\n   *\r\n   * Setting this to `0` disables hiding.\r\n   *\r\n   * @type {Number}\r\n   * @default 5000\r\n   * @public\r\n   */\r\n  titleHideDelay: PropTypes.number,\r\n\r\n  /**\r\n   * Video component to use.\r\n   *\r\n   * The default renders an `HTMLVideoElement`. Custom video components must have a similar\r\n   * API structure, exposing the following APIs:\r\n   *\r\n   * Properties:\r\n   * * `currentTime` {Number} - Playback index of the media in seconds\r\n   * * `duration` {Number} - Media's entire duration in seconds\r\n   * * `error` {Boolean} - `true` if video playback has errored.\r\n   * * `loading` {Boolean} - `true` if video playback is loading.\r\n   * * `paused` {Boolean} - Playing vs paused state. `true` means the media is paused\r\n   * * `playbackRate` {Number} - Current playback rate, as a number\r\n   * * `proportionLoaded` {Number} - A value between `0` and `1`\r\n   *\trepresenting the proportion of the media that has loaded\r\n   * * `proportionPlayed` {Number} - A value between `0` and `1` representing the\r\n   *\tproportion of the media that has already been shown\r\n   *\r\n   * Events:\r\n   * * `onLoadStart` - Called when the video starts to load\r\n   * * `onUpdate` - Sent when any of the properties were updated\r\n   *\r\n   * Methods:\r\n   * * `play()` - play video\r\n   * * `pause()` - pause video\r\n   * * `load()` - load video\r\n   *\r\n   * The [`source`]{@link sandstone/VideoPlayer.Video.source} property is passed to\r\n   * the video component as a child node.\r\n   *\r\n   * @type {Component|Element}\r\n   * @default {@link ui/Media.Media}\r\n   * @public\r\n   */\r\n  videoComponent: EnactPropTypes.componentOverride,\r\n\r\n  /**\r\n   * Path of the video.\r\n   *\r\n   * @type {Function}\r\n   * @public\r\n   */\r\n  videoPath: PropTypes.func,\r\n};\r\n\r\nAudioPlayerBase.defaultProps = {\r\n  autoCloseTimeout: 5000,\r\n  feedbackHideDelay: 3000,\r\n  jumpBy: 30,\r\n  mediaControlsComponent: MediaControls,\r\n  miniFeedbackHideDelay: 2000,\r\n  spotlightId: \"audioPlayer\",\r\n  titleHideDelay: 5000,\r\n  videoComponent: Media,\r\n};\r\n\r\n/**\r\n * A standard HTML5 video player for Sandstone. It behaves, responds to, and operates like a\r\n * `<video>` tag in its support for `<source>`.  It also accepts custom tags such as\r\n * `<infoComponents>` for displaying additional information in the title area and `<MediaControls>`\r\n * for handling media playback controls and adding more controls.\r\n *\r\n * Example usage:\r\n * ```\r\n *\t<VideoPlayer title=\"Hilarious Cat Video\" poster=\"http://my.cat.videos/boots-poster.jpg\">\r\n *\t\t<source src=\"http://my.cat.videos/boots.mp4\" type=\"video/mp4\" />\r\n *\t\t<infoComponents>A video about my cat Boots, wearing boots.</infoComponents>\r\n *\t\t<MediaControls>\r\n *\t\t\t<leftComponents><Button backgroundOpacity=\"translucent\" icon=\"star\" /></leftComponents>\r\n *\t\t\t<rightComponents><Button backgroundOpacity=\"translucent\" icon=\"flag\" /></rightComponents>\r\n *\r\n *\t\t\t<Button backgroundOpacity=\"translucent\">Add To Favorites</Button>\r\n *\t\t\t<Button backgroundOpacity=\"translucent\" icon=\"search\" />\r\n *\t\t</MediaControls>\r\n *\t</VideoPlayer>\r\n * ```\r\n *\r\n * To invoke methods (e.g.: `fastForward()`) or get the current state (`getMediaState()`), store a\r\n * ref to the `AudioPlayer` within your component:\r\n *\r\n * ```\r\n * \t...\r\n *\r\n * \tsetVideoPlayer = (node) => {\r\n * \t\tvideoPlayer = node;\r\n * \t}\r\n *\r\n * \tplay () {\r\n * \t\tvideoPlayer.play();\r\n * \t}\r\n *\r\n * \trender () {\r\n * \t\treturn (\r\n * \t\t\t<AudioPlayer ref={setVideoPlayer} />\r\n * \t\t);\r\n * \t}\r\n * ```\r\n *\r\n * @function AudioPlayer\r\n * @mixes ui/Slottable.Slottable\r\n * @ui\r\n * @public\r\n */\r\nconst AudioPlayer = memo(\r\n  ApiDecorator(\r\n    {\r\n      api: [\r\n        \"areControlsVisible\",\r\n        \"getMediaState\",\r\n        \"getVideoNode\",\r\n        \"hideControls\",\r\n        \"jump\",\r\n        \"pause\",\r\n        \"play\",\r\n        \"seek\",\r\n        \"showControls\",\r\n        \"showFeedback\",\r\n        \"toggleControls\",\r\n      ],\r\n    },\r\n    I18nContextDecorator(\r\n      { localeProp: \"locale\" },\r\n      Slottable(\r\n        {\r\n          slots: [\r\n            \"infoComponents\",\r\n            \"mediaControlsComponent\",\r\n            \"source\",\r\n            \"track\",\r\n            \"thumbnailComponent\",\r\n            \"videoComponent\",\r\n          ],\r\n        },\r\n        FloatingLayerDecorator(\r\n          { floatLayerId: \"videoPlayerFloatingLayer\" },\r\n          Skinnable(AudioPlayerBase)\r\n        )\r\n      )\r\n    )\r\n  )\r\n);\r\n\r\nexport default AudioPlayer;\r\nexport { MediaControls, Audio, AudioPlayer, AudioPlayerBase };\r\n","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\util.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\ThemeDecorator\\fontGenerator.js",[],"F:\\BT carkit\\Music_Player_App\\src\\services\\index.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\index.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\util.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\VirtualList.js",["1697"],"F:\\BT carkit\\Music_Player_App\\goldstone\\TabLayout\\TabGroup.js",["1698"],"F:\\BT carkit\\Music_Player_App\\goldstone\\TabLayout\\Tab.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\TabLayout\\RefocusDecorator.js",["1699"],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\$L\\$L.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Heading\\Heading.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Button\\Button.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\WindowEventable\\WindowEventable.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\SharedStateDecorator\\SharedStateDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\Overlay.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSlider.js",["1700"],"import React, { memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nimport Slider from \"../../../../goldstone/Slider\";\r\n\r\nimport MediaKnob from \"./MediaKnob\";\r\nimport MediaSliderDecorator from \"./MediaSliderDecorator\";\r\n\r\nimport css from \"./AudioPlayer.module.less\";\r\n\r\n/**\r\n * The base component to render a customized [Slider]{@link goldstone/Slider.Slider} for use in\r\n * [VideoPlayer]{@link goldstone/VideoPlayer.VideoPlayer}.\r\n *\r\n * @function MediaSliderBase\r\n * @memberof goldstone/VideoPlayer\r\n * @ui\r\n * @private\r\n */\r\nconst MediaSliderBase = ({\r\n  children,\r\n  forcePressed,\r\n  preview,\r\n  previewProportion,\r\n  visible,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classNames({\r\n        [css.sliderFrame]: true,\r\n        [css.hidden]: !visible,\r\n      })}\r\n      style={{\"paddingTop\":\"70px\"}}\r\n    >\r\n      <Slider\r\n        {...rest}\r\n        tooltip={children}\r\n        aria-hidden=\"true\"\r\n        className={classNames({\r\n          [css.pressed]: forcePressed,\r\n          [css.mediaSlider]: true,\r\n        })}\r\n        css={css}\r\n        knobComponent={\r\n          <MediaKnob preview={preview} previewProportion={previewProportion} />\r\n        }\r\n        max={1}\r\n        min={0}\r\n        step={0.00001}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nMediaSliderBase.displayName = \"MediaSlider\";\r\nMediaSliderBase.propTypes = {\r\n  /**\r\n   * When `true`, the knob will expand. Note that Slider is a controlled\r\n   * component. Changing the value would only affect pressed visual and\r\n   * not the state.\r\n   *\r\n   * @type {Boolean}\r\n   * @public\r\n   */\r\n  forcePressed: PropTypes.bool,\r\n\r\n  /**\r\n   * Allow moving the knob via pointer or 5-way without emitting `onChange` events\r\n   *\r\n   * @type {Boolean}\r\n   * @default false\r\n   * @public\r\n   */\r\n  preview: PropTypes.bool,\r\n\r\n  /**\r\n   * The position of the knob when in `preview` mode\r\n   *\r\n   * @type {Number}\r\n   * @public\r\n   */\r\n  previewProportion: PropTypes.number,\r\n\r\n  /**\r\n   * The visibility of the component. When `false`, the component will be hidden.\r\n   *\r\n   * @type {Boolean}\r\n   * @default true\r\n   * @public\r\n   */\r\n  visible: PropTypes.bool,\r\n};\r\nMediaSliderBase.defaultProps = {\r\n  preview: false,\r\n  visible: true,\r\n};\r\n\r\nconst MediaSlider = memo(\r\n  MediaSliderDecorator(MediaSliderBase),\r\n  (prevProp, nextProp) => {\r\n    if (\r\n      !prevProp.visible &&\r\n      prevProp.visible === nextProp.visible &&\r\n      prevProp.value !== nextProp.value\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default MediaSlider;\r\nexport { MediaSlider, MediaSliderBase };\r\n","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaTitle.js",["1701"],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\Media.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\Times.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaControls.js",["1702"],"import ApiDecorator from \"@enact/core/internal/ApiDecorator\";\r\nimport Cancelable from \"@enact/ui/Cancelable\";\r\nimport kind from \"@enact/core/kind\";\r\nimport hoc from \"@enact/core/hoc\";\r\nimport { is } from \"@enact/core/keymap\";\r\nimport { on, off } from \"@enact/core/dispatcher\";\r\nimport Pause from \"@enact/spotlight/Pause\";\r\nimport Slottable from \"@enact/ui/Slottable\";\r\nimport Spotlight from \"@enact/spotlight\";\r\nimport {\r\n  SpotlightContainerDecorator,\r\n  spotlightDefaultClass,\r\n} from \"@enact/spotlight/SpotlightContainerDecorator\";\r\nimport { forward } from \"@enact/core/handle\";\r\n\r\nimport onlyUpdateForKeys from \"recompose/onlyUpdateForKeys\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport $L from \"../../../../goldstone/internal/$L\";\r\nimport { compareChildren } from \"../../../../goldstone/internal/util\";\r\nimport Button from \"../../../../goldstone/Button\";\r\n\r\nimport css from \"./MediaControls.module.less\";\r\n\r\nconst OuterContainer = SpotlightContainerDecorator(\r\n  {\r\n    defaultElement: [`.${spotlightDefaultClass}`],\r\n  },\r\n  \"div\"\r\n);\r\nconst Container = SpotlightContainerDecorator(\r\n  {\r\n    enterTo: \"default-element\",\r\n  },\r\n  \"div\"\r\n);\r\nconst MediaButton = onlyUpdateForKeys([\r\n  \"children\",\r\n  \"className\",\r\n  \"disabled\",\r\n  \"icon\",\r\n  \"onClick\",\r\n  \"spotlightDisabled\",\r\n])(Button);\r\n\r\nconst forwardToggleMore = forward(\"onToggleMore\");\r\n\r\n/**\r\n * A set of components for controlling media playback and rendering additional components.\r\n *\r\n * @class MediaControlsBase\r\n * @memberof sandstone/VideoPlayer\r\n * @ui\r\n * @private\r\n */\r\nconst MediaControlsBase = kind({\r\n  name: \"MediaControls\",\r\n\r\n  // intentionally assigning these props to MediaControls instead of Base (which is private)\r\n  propTypes: /** @lends sandstone/VideoPlayer.MediaControls.prototype */ {\r\n    /**\r\n     * These components are placed below the action guide. Typically these will be media playlist controls.\r\n     *\r\n     * @type {Node}\r\n     * @public\r\n     */\r\n    bottomComponents: PropTypes.node,\r\n\r\n    /**\r\n     * Jump backward [icon]{@link sandstone/Icon.Icon} name. Accepts any\r\n     * [icon]{@link sandstone/Icon.Icon} component type.\r\n     *\r\n     * @type {String}\r\n     * @default 'jumpbackward'\r\n     * @public\r\n     */\r\n    jumpBackwardIcon: PropTypes.string,\r\n\r\n    /**\r\n     * Disables state on the media \"jump\" buttons; the outer pair.\r\n     *\r\n     * @type {Boolean}\r\n     * @public\r\n     */\r\n    jumpButtonsDisabled: PropTypes.bool,\r\n\r\n    /**\r\n     * Jump forward [icon]{@link sandstone/Icon.Icon} name. Accepts any\r\n     * [icon]{@link sandstone/Icon.Icon} component type.\r\n     *\r\n     * @type {String}\r\n     * @default 'jumpforward'\r\n     * @public\r\n     */\r\n    jumpForwardIcon: PropTypes.string,\r\n\r\n    /**\r\n     * Disables the media buttons.\r\n     *\r\n     * @type {Boolean}\r\n     * @public\r\n     */\r\n    mediaDisabled: PropTypes.bool,\r\n\r\n    /**\r\n     * When `true`, more components are rendered. This does not indicate the visibility of more components.\r\n     *\r\n     * @type {Boolean}\r\n     * @public\r\n     */\r\n    moreComponentsRendered: PropTypes.bool,\r\n\r\n    /**\r\n     * The spotlight ID for the moreComponent container.\r\n     *\r\n     * @type {String}\r\n     * @public\r\n     * @default 'moreComponents'\r\n     */\r\n    moreComponentsSpotlightId: PropTypes.string,\r\n\r\n    /**\r\n     * Removes the \"jump\" buttons. The buttons that skip forward or backward in the video.\r\n     *\r\n     * @type {Boolean}\r\n     * @public\r\n     */\r\n    noJumpButtons: PropTypes.bool,\r\n\r\n    /**\r\n     * Called when cancel/back key events are fired.\r\n     *\r\n     * @type {Function}\r\n     * @public\r\n     */\r\n    onClose: PropTypes.func,\r\n    onBack:PropTypes.func,\r\n    /**\r\n     * Called when the user clicks the JumpBackward button\r\n     *\r\n     * @type {Function}\r\n     * @public\r\n     */\r\n    onJumpBackwardButtonClick: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the user clicks the JumpForward button.\r\n     *\r\n     * @type {Function}\r\n     * @public\r\n     */\r\n    onJumpForwardButtonClick: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the user presses a media control button.\r\n     *\r\n     * @type {Function}\r\n     * @public\r\n     */\r\n    onKeyDownFromMediaButtons: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the user clicks the Play button.\r\n     *\r\n     * @type {Function}\r\n     * @public\r\n     */\r\n    onPlayButtonClick: PropTypes.func,\r\n\r\n    /**\r\n     * `true` when the video is paused.\r\n     *\r\n     * @type {Boolean}\r\n     * @public\r\n     */\r\n    paused: PropTypes.bool,\r\n\r\n    /**\r\n     * A string which is sent to the `pause` icon of the player controls. This can be\r\n     * anything that is accepted by [Icon]{@link sandstone/Icon.Icon}. This will be temporarily replaced by\r\n     * the [playIcon]{@link sandstone/VideoPlayer.MediaControls.playIcon} when the\r\n     * [paused]{@link sandstone/VideoPlayer.MediaControls.paused} boolean is `false`.\r\n     *\r\n     * @type {String}\r\n     * @default 'pause'\r\n     * @public\r\n     */\r\n    pauseIcon: PropTypes.string,\r\n\r\n    /**\r\n     * A string which is sent to the `play` icon of the player controls. This can be\r\n     * anything that is accepted by {@link sandstone/Icon.Icon}. This will be temporarily replaced by\r\n     * the [pauseIcon]{@link sandstone/VideoPlayer.MediaControls.pauseIcon} when the\r\n     * [paused]{@link sandstone/VideoPlayer.MediaControls.paused} boolean is `true`.\r\n     *\r\n     * @type {String}\r\n     * @default 'play'\r\n     * @public\r\n     */\r\n    playIcon: PropTypes.string,\r\n\r\n    /**\r\n     * Disables the media \"play\"/\"pause\" button.\r\n     *\r\n     * @type {Boolean}\r\n     * @public\r\n     */\r\n    playPauseButtonDisabled: PropTypes.bool,\r\n\r\n    /**\r\n     * When `true`, more components are visible.\r\n     *\r\n     * @type {Boolean}\r\n     * @private\r\n     */\r\n    showMoreComponents: PropTypes.bool,\r\n\r\n    /**\r\n     * `true` controls are disabled from Spotlight.\r\n     *\r\n     * @type {Boolean}\r\n     * @public\r\n     */\r\n    spotlightDisabled: PropTypes.bool,\r\n\r\n    /**\r\n     * The spotlight ID for the media controls container.\r\n     *\r\n     * @type {String}\r\n     * @public\r\n     * @default 'mediaControls'\r\n     */\r\n    spotlightId: PropTypes.string,\r\n\r\n    /**\r\n     * The visibility of the component. When `false`, the component will be hidden.\r\n     *\r\n     * @type {Boolean}\r\n     * @default true\r\n     * @public\r\n     */\r\n    visible: PropTypes.bool,\r\n  },\r\n\r\n  defaultProps: {\r\n    jumpBackwardIcon: \"jumpbackward\",\r\n    jumpForwardIcon: \"jumpforward\",\r\n    moreComponentsSpotlightId: \"moreComponents\",\r\n    spotlightId: \"mediaControls\",\r\n    pauseIcon: \"pause\",\r\n    playIcon: \"play\",\r\n    visible: true,\r\n  },\r\n\r\n  styles: {\r\n    css,\r\n    className: \"controlsFrame\",\r\n  },\r\n\r\n  computed: {\r\n    className: ({ visible, styler }) => styler.append({ hidden: !visible }),\r\n    moreButtonsClassName: ({ styler }) =>\r\n      styler.join(\"mediaControls\", \"moreButtonsComponents\"),\r\n    moreComponentsClassName: ({\r\n      styler,\r\n      showMoreComponents,\r\n      moreComponentsRendered,\r\n    }) =>\r\n      styler.join(\"moreComponents\", {\r\n        lift: showMoreComponents && moreComponentsRendered,\r\n      }),\r\n    moreComponentsRendered: ({ showMoreComponents, moreComponentsRendered }) =>\r\n      showMoreComponents || moreComponentsRendered,\r\n  },\r\n\r\n  render: ({\r\n    children,\r\n    jumpBackwardIcon,\r\n    jumpButtonsDisabled,\r\n    moreComponentsClassName,\r\n    jumpForwardIcon,\r\n    bottomComponents,\r\n    mediaDisabled,\r\n    moreComponentsSpotlightId,\r\n    noJumpButtons,\r\n    onBack,\r\n    onJumpBackwardButtonClick,\r\n    onJumpForwardButtonClick,\r\n    onKeyDownFromMediaButtons,\r\n    onPlayButtonClick,\r\n    paused,\r\n    pauseIcon,\r\n    playIcon,\r\n    playPauseButtonDisabled,\r\n    showMoreComponents,\r\n    moreComponentsRendered,\r\n    moreButtonsClassName,\r\n    spotlightDisabled,\r\n    spotlightId,\r\n    ...rest\r\n  }) => {\r\n    delete rest.onClose;\r\n    delete rest.visible;\r\n    return (\r\n      <OuterContainer {...rest} spotlightId={spotlightId}>\r\n        <Container\r\n          className={css.mediaControls}\r\n          spotlightDisabled={spotlightDisabled}\r\n          onKeyDown={onKeyDownFromMediaButtons}\r\n        >\r\n          <Button\r\n              icon=\"list\"\r\n              className={css.back}\r\n              iconOnly\r\n              size={138}\r\n              onClick={onBack}\r\n              backgroundOpacity=\"transparent\"\r\n            />\r\n          {noJumpButtons ? null : (\r\n            <MediaButton\r\n              className={css.mediaButton}\r\n              aria-label={$L(\"Previous\")}\r\n              backgroundOpacity=\"transparent\"\r\n              disabled={mediaDisabled || jumpButtonsDisabled}\r\n              icon={jumpBackwardIcon}\r\n              onClick={onJumpBackwardButtonClick}\r\n              size={138}\r\n              spotlightDisabled={spotlightDisabled}\r\n            />\r\n          )}\r\n          <MediaButton\r\n            className={css.mediaButton}\r\n            aria-label={paused ? $L(\"Play\") : $L(\"Pause\")}\r\n            className={spotlightDefaultClass}\r\n            backgroundOpacity=\"transparent\"\r\n            disabled={mediaDisabled || playPauseButtonDisabled}\r\n            icon={paused ? playIcon : pauseIcon}\r\n            onClick={onPlayButtonClick}\r\n            size={138}\r\n            spotlightDisabled={spotlightDisabled}\r\n          />\r\n          {noJumpButtons ? null : (\r\n            <MediaButton\r\n              className={css.mediaButton}\r\n              aria-label={$L(\"Next\")}\r\n              backgroundOpacity=\"transparent\"\r\n              disabled={mediaDisabled || jumpButtonsDisabled}\r\n              icon={jumpForwardIcon}\r\n              onClick={onJumpForwardButtonClick}\r\n              size={138}\r\n              spotlightDisabled={spotlightDisabled}\r\n            />\r\n          )}\r\n        </Container>\r\n        {moreComponentsRendered ? (\r\n          <Container\r\n            spotlightId={moreComponentsSpotlightId}\r\n            className={moreComponentsClassName}\r\n            spotlightDisabled={!showMoreComponents || spotlightDisabled}\r\n          >\r\n            <Container className={moreButtonsClassName}>{children}</Container>\r\n            <div>{bottomComponents}</div>\r\n          </Container>\r\n        ) : null}\r\n      </OuterContainer>\r\n    );\r\n  },\r\n});\r\n\r\n/**\r\n * Media control behaviors to apply to [MediaControlsBase]{@link sandstone/VideoPlayer.MediaControlsBase}.\r\n * Provides built-in support for showing more components and key handling for basic playback\r\n * controls.\r\n *\r\n * @class MediaControlsDecorator\r\n * @memberof sandstone/VideoPlayer\r\n * @mixes ui/Slottable.Slottable\r\n * @hoc\r\n * @private\r\n */\r\nconst MediaControlsDecorator = hoc((config, Wrapped) => {\r\n  // eslint-disable-line no-unused-vars\r\n  class MediaControlsDecoratorHOC extends React.Component {\r\n    static displayName = \"MediaControlsDecorator\";\r\n\r\n    static propTypes =\r\n      /** @lends sandstone/VideoPlayer.MediaControlsDecorator.prototype */ {\r\n        /**\r\n         * These components are placed below the children. Typically these will be media playlist items.\r\n         *\r\n         * @type {Node}\r\n         * @public\r\n         */\r\n        bottomComponents: PropTypes.node,\r\n\r\n        /**\r\n         * The number of milliseconds that the player will pause before firing the\r\n         * first jump event on a right or left pulse.\r\n         *\r\n         * @type {Number}\r\n         * @default 400\r\n         * @public\r\n         */\r\n        initialJumpDelay: PropTypes.number,\r\n\r\n        /**\r\n         * The number of milliseconds that the player will throttle before firing a\r\n         * jump event on a right or left pulse.\r\n         *\r\n         * @type {Number}\r\n         * @default 200\r\n         * @public\r\n         */\r\n        jumpDelay: PropTypes.number,\r\n\r\n        /**\r\n         * Disables the media buttons.\r\n         *\r\n         * @type {Boolean}\r\n         * @public\r\n         */\r\n        mediaDisabled: PropTypes.bool,\r\n\r\n        /**\r\n         * Disables showing more components.\r\n         *\r\n         * @type {Boolean}\r\n         * @public\r\n         */\r\n        moreActionDisabled: PropTypes.bool,\r\n\r\n        /**\r\n         * Setting this to `true` will disable left and right keys for seeking.\r\n         *\r\n         * @type {Boolean}\r\n         * @public\r\n         */\r\n        no5WayJump: PropTypes.bool,\r\n\r\n        /**\r\n         * Removes the \"rate\" buttons. The buttons that change the playback rate of the video.\r\n         * Double speed, half speed, reverse 4x speed, etc.\r\n         *\r\n         * @type {Boolean}\r\n         * @public\r\n         */\r\n        noRateButtons: PropTypes.bool,\r\n\r\n        /**\r\n         * Called when media fast forwards.\r\n         *\r\n         * @type {Function}\r\n         * @public\r\n         */\r\n        onFastForward: PropTypes.func,\r\n\r\n        /**\r\n         * Called when media jumps.\r\n         *\r\n         * @type {Function}\r\n         * @public\r\n         */\r\n        onJump: PropTypes.func,\r\n\r\n        /**\r\n         * Called when media gets paused.\r\n         *\r\n         * @type {Function}\r\n         * @public\r\n         */\r\n        onPause: PropTypes.func,\r\n\r\n        /**\r\n         * Called when media starts playing.\r\n         *\r\n         * @type {Function}\r\n         * @public\r\n         */\r\n        onPlay: PropTypes.func,\r\n\r\n        /**\r\n         * Called when media rewinds.\r\n         *\r\n         * @type {Function}\r\n         * @public\r\n         */\r\n        onRewind: PropTypes.func,\r\n\r\n        /**\r\n         * Called when the user clicks the More button.\r\n         *\r\n         * @type {Function}\r\n         * @public\r\n         */\r\n        onToggleMore: PropTypes.func,\r\n\r\n        /**\r\n         * The video pause state.\r\n         *\r\n         * @type {Boolean}\r\n         * @public\r\n         */\r\n        paused: PropTypes.bool,\r\n\r\n        /**\r\n         * Disables state on the media \"play\"/\"pause\" button\r\n         *\r\n         * @type {Boolean}\r\n         * @public\r\n         */\r\n        playPauseButtonDisabled: PropTypes.bool,\r\n\r\n        /**\r\n         * Disables the media playback-rate control buttons; the inner pair.\r\n         *\r\n         * @type {Boolean}\r\n         * @public\r\n         */\r\n        rateButtonsDisabled: PropTypes.bool,\r\n\r\n        /**\r\n         * Registers the MediaControls component with an\r\n         * [ApiDecorator]{@link core/internal/ApiDecorator.ApiDecorator}.\r\n         *\r\n         * @type {Function}\r\n         * @private\r\n         */\r\n        setApiProvider: PropTypes.func,\r\n\r\n        /**\r\n         * The visibility of the component. When `false`, the component will be hidden.\r\n         *\r\n         * @type {Boolean}\r\n         * @public\r\n         */\r\n        visible: PropTypes.bool,\r\n      };\r\n\r\n    static defaultProps = {\r\n      initialJumpDelay: 400,\r\n      jumpDelay: 200,\r\n    };\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.mediaControlsNode = null;\r\n\r\n      this.keyLoop = null;\r\n      this.pulsingKeyCode = null;\r\n      this.pulsing = null;\r\n      this.paused = new Pause(\"VideoPlayer\");\r\n      this.bottomComponentsHeight = 0;\r\n      this.actionGuideHeight = 0;\r\n\r\n      this.state = {\r\n        showMoreComponents: false,\r\n        moreComponentsRendered: false,\r\n      };\r\n\r\n      if (props.setApiProvider) {\r\n        props.setApiProvider(this);\r\n      }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n      if (!props.visible) {\r\n        return {\r\n          showMoreComponents: false,\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n      on(\"keydown\", this.handleKeyDown);\r\n      on(\"keyup\", this.handleKeyUp);\r\n      on(\"blur\", this.handleBlur, window);\r\n      on(\"wheel\", this.handleWheel);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      // Need to render `moreComponents` to show it. For performance, render `moreComponents` if it is actually shown.\r\n      if (\r\n        !prevState.showMoreComponents &&\r\n        this.state.showMoreComponents &&\r\n        !this.state.moreComponentsRendered\r\n      ) {\r\n        // eslint-disable-next-line\r\n        this.setState({\r\n          moreComponentsRendered: true,\r\n        });\r\n      }\r\n\r\n      if (\r\n        (!prevState.moreComponentsRendered &&\r\n          this.state.moreComponentsRendered) ||\r\n        (this.state.moreComponentsRendered &&\r\n          prevProps.bottomComponents !== this.props.bottomComponents) ||\r\n        !compareChildren(this.props.children, prevProps.children)\r\n      ) {\r\n        this.calculateMoreComponentsHeight();\r\n      }\r\n\r\n      if (\r\n        (this.state.showMoreComponents &&\r\n          !prevState.moreComponentsRendered &&\r\n          this.state.moreComponentsRendered) ||\r\n        (this.state.moreComponentsRendered &&\r\n          prevState.showMoreComponents !== this.state.showMoreComponents)\r\n      ) {\r\n        forwardToggleMore(\r\n          {\r\n            showMoreComponents: this.state.showMoreComponents,\r\n            liftDistance: this.bottomComponentsHeight - this.actionGuideHeight,\r\n          },\r\n          this.props\r\n        );\r\n      }\r\n\r\n      // if media controls disabled, reset key loop\r\n      if (!prevProps.mediaDisabled && this.props.mediaDisabled) {\r\n        this.stopListeningForPulses();\r\n        this.paused.resume();\r\n      }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      off(\"keydown\", this.handleKeyDown);\r\n      off(\"keyup\", this.handleKeyUp);\r\n      off(\"blur\", this.handleBlur, window);\r\n      off(\"wheel\", this.handleWheel);\r\n      this.stopListeningForPulses();\r\n    }\r\n\r\n    calculateMoreComponentsHeight = () => {\r\n      if (!this.mediaControlsNode) {\r\n        this.bottomComponentsHeight = 0;\r\n        return;\r\n      }\r\n\r\n      const bottomElement = this.mediaControlsNode.querySelector(\r\n        `.${css.moreComponents}`\r\n      );\r\n      this.bottomComponentsHeight = bottomElement\r\n        ? bottomElement.scrollHeight\r\n        : 0;\r\n    };\r\n\r\n    handleKeyDownFromMediaButtons = (ev) => {\r\n      if (\r\n        is(\"down\", ev.keyCode) &&\r\n        !this.state.showMoreComponents &&\r\n        !this.props.moreActionDisabled\r\n      ) {\r\n        this.showMoreComponents();\r\n        ev.stopPropagation();\r\n      }\r\n    };\r\n\r\n    handleKeyDown = (ev) => {\r\n      const { mediaDisabled, no5WayJump, visible } = this.props;\r\n\r\n      const current = Spotlight.getCurrent();\r\n\r\n      if (\r\n        !no5WayJump &&\r\n        !visible &&\r\n        !mediaDisabled &&\r\n        (!current || current.classList.contains(css.controlsHandleAbove)) &&\r\n        (is(\"left\", ev.keyCode) || is(\"right\", ev.keyCode))\r\n      ) {\r\n        this.paused.pause();\r\n        this.startListeningForPulses(ev.keyCode);\r\n      }\r\n    };\r\n\r\n    handleKeyUp = (ev) => {\r\n      const {\r\n        mediaDisabled,\r\n        no5WayJump,\r\n        noRateButtons,\r\n        playPauseButtonDisabled,\r\n        rateButtonsDisabled,\r\n      } = this.props;\r\n\r\n      if (mediaDisabled) return;\r\n\r\n      if (!playPauseButtonDisabled) {\r\n        if (is(\"play\", ev.keyCode)) {\r\n          forward(\"onPlay\", ev, this.props);\r\n        } else if (is(\"pause\", ev.keyCode)) {\r\n          forward(\"onPause\", ev, this.props);\r\n        }\r\n      }\r\n\r\n      if (!no5WayJump && (is(\"left\", ev.keyCode) || is(\"right\", ev.keyCode))) {\r\n        this.stopListeningForPulses();\r\n        this.paused.resume();\r\n      }\r\n\r\n      if (!noRateButtons && !rateButtonsDisabled) {\r\n        if (is(\"rewind\", ev.keyCode)) {\r\n          forward(\"onRewind\", ev, this.props);\r\n        } else if (is(\"fastForward\", ev.keyCode)) {\r\n          forward(\"onFastForward\", ev, this.props);\r\n        }\r\n      }\r\n    };\r\n\r\n    handleBlur = () => {\r\n      this.stopListeningForPulses();\r\n      this.paused.resume();\r\n    };\r\n\r\n    handleWheel = () => {\r\n      if (\r\n        !this.state.showMoreComponents &&\r\n        this.props.visible &&\r\n        !this.props.moreActionDisabled\r\n      ) {\r\n        this.showMoreComponents();\r\n      }\r\n    };\r\n\r\n    startListeningForPulses = (keyCode) => {\r\n      // Ignore new pulse calls if key code is same, otherwise start new series if we're pulsing\r\n      if (this.pulsing && keyCode !== this.pulsingKeyCode) {\r\n        this.stopListeningForPulses();\r\n      }\r\n      if (!this.pulsing) {\r\n        this.pulsingKeyCode = keyCode;\r\n        this.pulsing = true;\r\n        this.keyLoop = setTimeout(\r\n          this.handlePulse,\r\n          this.props.initialJumpDelay\r\n        );\r\n        forward(\"onJump\", { keyCode }, this.props);\r\n      }\r\n    };\r\n\r\n    handlePulse = () => {\r\n      forward(\"onJump\", { keyCode: this.pulsingKeyCode }, this.props);\r\n      this.keyLoop = setTimeout(this.handlePulse, this.props.jumpDelay);\r\n    };\r\n\r\n    handlePlayButtonClick = (ev) => {\r\n      forward(\"onPlayButtonClick\", ev, this.props);\r\n      if (this.props.paused) {\r\n        forward(\"onPlay\", ev, this.props);\r\n      } else {\r\n        forward(\"onPause\", ev, this.props);\r\n      }\r\n    };\r\n\r\n    stopListeningForPulses() {\r\n      this.pulsing = false;\r\n      if (this.keyLoop) {\r\n        clearTimeout(this.keyLoop);\r\n        this.keyLoop = null;\r\n      }\r\n    }\r\n\r\n    getMediaControls = (node) => {\r\n      if (!node) {\r\n        this.actionGuideHeight = 0;\r\n        return;\r\n      }\r\n      this.mediaControlsNode = ReactDOM.findDOMNode(node); // eslint-disable-line react/no-find-dom-node\r\n\r\n      const guideElement = this.mediaControlsNode.querySelector(\r\n        `.${css.actionGuide}`\r\n      );\r\n      this.actionGuideHeight = guideElement ? guideElement.scrollHeight : 0;\r\n      this.mediaControlsNode.style.setProperty(\r\n        \"--actionGuideComponentHeight\",\r\n        `${this.actionGuideHeight}px`\r\n      );\r\n    };\r\n\r\n    areMoreComponentsAvailable = () => {\r\n      return this.state.showMoreComponents;\r\n    };\r\n\r\n    showMoreComponents = () => {\r\n      this.setState({ showMoreComponents: true });\r\n    };\r\n\r\n    hideMoreComponents = () => {\r\n      this.setState({ showMoreComponents: false });\r\n    };\r\n\r\n    toggleMoreComponents() {\r\n      this.setState((prevState) => {\r\n        return {\r\n          showMoreComponents: !prevState.showMoreComponents,\r\n        };\r\n      });\r\n    }\r\n\r\n    handleClose = (ev) => {\r\n      if (this.props.visible) {\r\n        forward(\"onClose\", ev, this.props);\r\n      }\r\n    };\r\n\r\n    handleTransitionEnd = (ev) => {\r\n      if (\r\n        ev.propertyName === \"transform\" &&\r\n        ev.target.dataset.spotlightId === \"moreComponents\"\r\n      ) {\r\n        if (this.state.showMoreComponents && !Spotlight.getPointerMode()) {\r\n          Spotlight.move(\"down\");\r\n        }\r\n      }\r\n    };\r\n\r\n    render() {\r\n      const props = Object.assign({}, this.props);\r\n      delete props.initialJumpDelay;\r\n      delete props.jumpDelay;\r\n      delete props.moreActionDisabled;\r\n      delete props.no5WayJump;\r\n      delete props.onFastForward;\r\n      delete props.onJump;\r\n      delete props.onPause;\r\n      delete props.onPlay;\r\n      delete props.onRewind;\r\n      delete props.onToggleMore;\r\n      delete props.setApiProvider;\r\n\r\n      return (\r\n        <Wrapped\r\n          ref={this.getMediaControls}\r\n          {...props}\r\n          moreComponentsRendered={this.state.moreComponentsRendered}\r\n          onClose={this.handleClose}\r\n          onKeyDownFromMediaButtons={this.handleKeyDownFromMediaButtons}\r\n          onPlayButtonClick={this.handlePlayButtonClick}\r\n          onTransitionEnd={this.handleTransitionEnd}\r\n          showMoreComponents={this.state.showMoreComponents}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return Slottable({ slots: [\"bottomComponents\"] }, MediaControlsDecoratorHOC);\r\n});\r\n\r\nconst handleCancel = (ev, { onClose }) => {\r\n  if (onClose) {\r\n    onClose(ev);\r\n  }\r\n};\r\n\r\n/**\r\n * A set of components for controlling media playback and rendering additional components.\r\n *\r\n * This uses [Slottable]{@link ui/Slottable} to accept the custom tags, `<bottomComponents>`\r\n * to add components to the bottom of the media controls. Any additional children will be\r\n * rendered into the \"more\" controls area. Showing the additional components is handled by\r\n * `MediaControls` when the user navigates down from the media buttons.\r\n *\r\n * @class MediaControls\r\n * @memberof sandstone/VideoPlayer\r\n * @mixes ui/Cancelable.Cancelable\r\n * @ui\r\n * @public\r\n */\r\nconst MediaControls = ApiDecorator(\r\n  {\r\n    api: [\r\n      \"areMoreComponentsAvailable\",\r\n      \"showMoreComponents\",\r\n      \"hideMoreComponents\",\r\n    ],\r\n  },\r\n  MediaControlsDecorator(\r\n    Cancelable({ modal: true, onCancel: handleCancel }, MediaControlsBase)\r\n  )\r\n);\r\n\r\nMediaControls.defaultSlot = \"mediaControlsComponent\";\r\n\r\nexport default MediaControls;\r\nexport { MediaControlsBase, MediaControls, MediaControlsDecorator };\r\n","F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\Audio.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\AlbumInfo.js",["1703","1704","1705","1706","1707"],"import React from \"react\";\r\nimport placeHolderImg from \"../../../../assets/images/defaultmusic.jpg\";\r\nimport Times from \"./Times\";\r\nimport css from \"./AlbumInfo.module.less\";\r\nimport { getEncodedPath } from \"./util\";\r\nimport { memoize } from \"@enact/core/util\";\r\nimport DurationFmt from \"ilib/lib/DurationFmt\";\r\n\r\nfunction AlbumInfo({ duration, currentTime, title, artist, album, locale, thumbnail}) {\r\n  let imgSrc =\r\n    thumbnail && thumbnail.length > 0\r\n      ? getEncodedPath(thumbnail)\r\n      : placeHolderImg;\r\n\r\n  const memoGetDurFmt = memoize(\r\n  (/* locale */) =>\r\n    new DurationFmt({\r\n      length: \"medium\",\r\n      style: \"clock\",\r\n      useNative: false,\r\n    })\r\n  );\r\n\r\n  const getDurFmt = (locale) => {\r\n    if (typeof window === \"undefined\") return null;\r\n\r\n    return memoGetDurFmt(locale);\r\n  };\r\n\r\n  const durFmt = getDurFmt(locale);\r\n\r\n  return (\r\n    <div className={css.album}>\r\n        <img className={css.albumimage} src={imgSrc} />\r\n        <div className={css.info}>\r\n          <marquee className={css.title}>\r\n            <p>{title}</p>\r\n          </marquee>\r\n          <p className={css.subtitle}>{artist?artist:'Artist information is not available'}</p>\r\n          <p className={css.albumName}>{album?album:'Album information is not available'}</p>\r\n          <div className={css.timeInfo}>\r\n          <Times\r\n            noTotalTime\r\n            current={currentTime}\r\n            formatter={durFmt}\r\n          />\r\n          <Times\r\n            noCurrentTime\r\n            total={duration}\r\n            formatter={durFmt}\r\n          />  \r\n          </div>       \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(AlbumInfo);\r\n","F:\\BT carkit\\Music_Player_App\\goldstone\\ImageItem\\index.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\Arrangers.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Spinner\\Spinner.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\useThemeVirtualList.js",["1708"],"F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\index.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaSliderDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\src\\components\\AudioPlayer\\AudioPlayerBase\\MediaKnob.js",["1709"],"F:\\BT carkit\\Music_Player_App\\goldstone\\ImageItem\\ImageItem.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\ImageItem\\ImageItemDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\ImageItem\\ImageItemBase.js",["1710","1711"],"F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\Scrollbar.js",["1712"],"F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useScroll.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Button\\ButtonBase\\BaseButton.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\useSpotlight.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Sprite\\Sprite.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\usePreventScroll.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\VirtualList\\useEvent.js",[],"F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\device.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\useAutoFocus.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\Viewport.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\TooltipDecorator\\TooltipDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\Marquee.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Icon\\Icon.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\util\\util.js",[],"F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\audio.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\PopupDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\video.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\Slider.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useSpotlight.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useOverscrollEffect.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useEvent.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\useThemeScrollContentHandle.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\useScroll\\ScrollbarTrack.js",["1713"],"F:\\BT carkit\\Music_Player_App\\goldstone\\DivButton\\Button.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\NavigationButton.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\FloatingLayerIdProvider.js",["1714"],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\CancelDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Scroller\\Scroller.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\DebounceDecorator\\DebounceDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Icon\\IconList.js",[],"F:\\BT carkit\\Music_Player_App\\src\\services\\Luna\\request.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\captureKeys.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\TooltipDecorator\\util.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\TooltipDecorator\\Tooltip.js",["1715"],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\Panels\\TransitionDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Image\\Image.js",["1716"],"F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\utils.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\SliderBehaviorDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\SliderBase\\SliderBase.js",["1717"],"F:\\BT carkit\\Music_Player_App\\goldstone\\ProgressBar\\ProgressBarBase\\ProgressBarBase.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\ProgressBar\\ProgressBarComponent.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\util\\generateClassNames\\generateClassNames.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Scroller\\useThemeScroller.js",[],["1718","1719","1720"],"F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\MarqueeBase\\index.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\TooltipDecorator\\TooltipLabel.js",["1721"],"F:\\BT carkit\\Music_Player_App\\goldstone\\Popup\\Popup.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\internal\\validators\\validators.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\SliderBase\\Knob.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Slider\\SliderBase\\PositionDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\util\\calcProportion.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Scroller\\useEvent.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\MarqueeBase\\MarqueeController.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\MarqueeBase\\MarqueeBase.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Marquee\\MarqueeBase\\MarqueeDecorator.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\resolution\\resolution.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Popup\\PopupBase\\Transition.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\ProgressBar\\ProgressBarTooltip\\ProgressBarTooltip.js",[],"F:\\BT carkit\\Music_Player_App\\goldstone\\Resizable\\Resizable.js",[],"F:\\BT carkit\\Music_Player_App\\src\\actions\\getBTDetails.js",["1722"],"F:\\BT carkit\\Music_Player_App\\src\\actions\\getNumberOfItems.js",[],"F:\\BT carkit\\Music_Player_App\\src\\actions\\getFolderItems.js",["1723","1724","1725","1726"],"F:\\BT carkit\\Music_Player_App\\src\\actions\\getAVRCPStatus.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\playerInfo.js",[],"F:\\BT carkit\\Music_Player_App\\src\\actions\\getAdapterDetails.js",[],"F:\\BT carkit\\Music_Player_App\\src\\actions\\avrcpConnect.js",["1727","1728"],"import lunaAction from './lunaActions';\r\nimport getAVRCPStatus from './getAVRCPStatus';\r\nimport normalLog from '../utils/normalLog.js';\r\n\r\nconst avrcpConnect = (address) => (dispatch) => {\r\n\treturn new Promise((resolve) => {\r\n\t\tlunaAction(\r\n\t\t\t{\r\n\t\t\t\tservice: 'luna://com.webos.service.bluetooth2/avrcp',\r\n\t\t\t\tmethod: 'connect',\r\n\t\t\t\tparameters: {\r\n\t\t\t\t\taddress\r\n\t\t\t\t},\r\n\t\t\t\tresolve: resolve\r\n\t\t\t},\r\n\t\t\t(res) => {\r\n\t\t\t\tnormalLog('avrcpConnect Response: ' + JSON.stringify(res), {}, '');\r\n\t\t\t\tresolve(address);\r\n\t\t\t}\r\n\t\t);\r\n\t});\r\n};\r\nexport default avrcpConnect;\r\n","F:\\BT carkit\\Music_Player_App\\src\\actions\\lunaActions.js",[],"F:\\BT carkit\\Music_Player_App\\src\\actions\\changePath.js",["1729"],"F:\\BT carkit\\Music_Player_App\\src\\actions\\getPlayerInfo.js",["1730","1731"],"F:\\BT carkit\\Music_Player_App\\src\\utils\\normalLog.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\BTStatus.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\adapterStatus.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\avrcpConnectionStatus.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\numberOfFolderItems.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\folderItems.js",[],"F:\\BT carkit\\Music_Player_App\\src\\reducers\\folderPath.js",[],"F:\\BT carkit\\Music_Player_App\\src\\utils\\LS2RequestSingleton.js",[],{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1736","replacedBy":"1737"},{"ruleId":"1738","replacedBy":"1739"},{"ruleId":"1740","replacedBy":"1741"},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1742","severity":1,"message":"1743","line":29,"column":6,"nodeType":"1744","endLine":29,"endColumn":8,"suggestions":"1745"},{"ruleId":"1746","severity":1,"message":"1747","line":49,"column":19,"nodeType":"1748","endLine":49,"endColumn":66},{"ruleId":"1746","severity":1,"message":"1747","line":55,"column":21,"nodeType":"1748","endLine":55,"endColumn":57},{"ruleId":"1732","severity":1,"message":"1733","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1749","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1750","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1733","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":10,"column":8,"nodeType":"1734","messageId":"1735","endLine":10,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":15,"column":8,"nodeType":"1734","messageId":"1735","endLine":15,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1751","line":48,"column":121,"nodeType":"1734","messageId":"1735","endLine":48,"endColumn":129},{"ruleId":"1732","severity":1,"message":"1733","line":8,"column":8,"nodeType":"1734","messageId":"1735","endLine":8,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1746","severity":1,"message":"1747","line":18,"column":9,"nodeType":"1748","endLine":18,"endColumn":80},{"ruleId":"1746","severity":1,"message":"1747","line":31,"column":7,"nodeType":"1748","endLine":31,"endColumn":32},{"ruleId":"1736","replacedBy":"1752"},{"ruleId":"1738","replacedBy":"1753"},{"ruleId":"1740","replacedBy":"1754"},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1746","severity":1,"message":"1747","line":43,"column":7,"nodeType":"1748","endLine":43,"endColumn":44},{"ruleId":"1746","severity":1,"message":"1747","line":44,"column":7,"nodeType":"1748","endLine":44,"endColumn":35},{"ruleId":"1746","severity":1,"message":"1747","line":45,"column":7,"nodeType":"1748","endLine":45,"endColumn":43},{"ruleId":"1732","severity":1,"message":"1733","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":13},{"ruleId":"1736","replacedBy":"1755"},{"ruleId":"1738","replacedBy":"1756"},{"ruleId":"1740","replacedBy":"1757"},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1742","severity":1,"message":"1758","line":197,"column":9,"nodeType":"1759","endLine":205,"endColumn":4,"suggestions":"1760"},{"ruleId":"1742","severity":1,"message":"1761","line":197,"column":9,"nodeType":"1759","endLine":205,"endColumn":4,"suggestions":"1762"},{"ruleId":"1742","severity":1,"message":"1763","line":207,"column":9,"nodeType":"1759","endLine":209,"endColumn":4,"suggestions":"1764"},{"ruleId":"1742","severity":1,"message":"1765","line":207,"column":9,"nodeType":"1759","endLine":209,"endColumn":4,"suggestions":"1766"},{"ruleId":"1742","severity":1,"message":"1767","line":232,"column":9,"nodeType":"1759","endLine":232,"endColumn":44},{"ruleId":"1742","severity":1,"message":"1768","line":281,"column":6,"nodeType":"1744","endLine":281,"endColumn":72,"suggestions":"1769"},{"ruleId":"1742","severity":1,"message":"1770","line":366,"column":9,"nodeType":"1759","endLine":366,"endColumn":56},{"ruleId":"1742","severity":1,"message":"1771","line":366,"column":9,"nodeType":"1759","endLine":366,"endColumn":56},{"ruleId":"1742","severity":1,"message":"1772","line":426,"column":9,"nodeType":"1759","endLine":433,"endColumn":5},{"ruleId":"1742","severity":1,"message":"1768","line":639,"column":6,"nodeType":"1744","endLine":645,"endColumn":4,"suggestions":"1773"},{"ruleId":"1742","severity":1,"message":"1774","line":702,"column":5,"nodeType":"1744","endLine":710,"endColumn":6,"suggestions":"1775"},{"ruleId":"1742","severity":1,"message":"1774","line":869,"column":5,"nodeType":"1744","endLine":869,"endColumn":13,"suggestions":"1776"},{"ruleId":"1742","severity":1,"message":"1774","line":896,"column":6,"nodeType":"1744","endLine":896,"endColumn":39,"suggestions":"1777"},{"ruleId":"1778","severity":1,"message":"1779","line":1101,"column":19,"nodeType":"1780","endLine":1117,"endColumn":20,"fix":"1781"},{"ruleId":"1732","severity":1,"message":"1733","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1782","severity":1,"message":"1783","line":14,"column":9,"nodeType":"1780","endLine":14,"endColumn":18},{"ruleId":"1784","severity":1,"message":"1785","line":25,"column":9,"nodeType":"1780","endLine":25,"endColumn":56},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1746","severity":1,"message":"1747","line":43,"column":7,"nodeType":"1748","endLine":43,"endColumn":44},{"ruleId":"1746","severity":1,"message":"1747","line":44,"column":7,"nodeType":"1748","endLine":44,"endColumn":35},{"ruleId":"1746","severity":1,"message":"1747","line":45,"column":7,"nodeType":"1748","endLine":45,"endColumn":43},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1742","severity":1,"message":"1743","line":29,"column":6,"nodeType":"1744","endLine":29,"endColumn":8,"suggestions":"1786"},{"ruleId":"1746","severity":1,"message":"1747","line":49,"column":19,"nodeType":"1748","endLine":49,"endColumn":66},{"ruleId":"1746","severity":1,"message":"1747","line":55,"column":21,"nodeType":"1748","endLine":55,"endColumn":57},{"ruleId":"1732","severity":1,"message":"1749","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1750","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1746","severity":1,"message":"1747","line":18,"column":9,"nodeType":"1748","endLine":18,"endColumn":80},{"ruleId":"1746","severity":1,"message":"1747","line":31,"column":7,"nodeType":"1748","endLine":31,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1733","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":13},{"ruleId":"1742","severity":1,"message":"1758","line":197,"column":9,"nodeType":"1759","endLine":205,"endColumn":4,"suggestions":"1787"},{"ruleId":"1742","severity":1,"message":"1761","line":197,"column":9,"nodeType":"1759","endLine":205,"endColumn":4,"suggestions":"1788"},{"ruleId":"1742","severity":1,"message":"1763","line":207,"column":9,"nodeType":"1759","endLine":209,"endColumn":4,"suggestions":"1789"},{"ruleId":"1742","severity":1,"message":"1765","line":207,"column":9,"nodeType":"1759","endLine":209,"endColumn":4,"suggestions":"1790"},{"ruleId":"1742","severity":1,"message":"1767","line":232,"column":9,"nodeType":"1759","endLine":232,"endColumn":44},{"ruleId":"1742","severity":1,"message":"1768","line":281,"column":6,"nodeType":"1744","endLine":281,"endColumn":72,"suggestions":"1791"},{"ruleId":"1742","severity":1,"message":"1770","line":366,"column":9,"nodeType":"1759","endLine":366,"endColumn":56},{"ruleId":"1742","severity":1,"message":"1771","line":366,"column":9,"nodeType":"1759","endLine":366,"endColumn":56},{"ruleId":"1742","severity":1,"message":"1772","line":426,"column":9,"nodeType":"1759","endLine":433,"endColumn":5},{"ruleId":"1742","severity":1,"message":"1768","line":639,"column":6,"nodeType":"1744","endLine":645,"endColumn":4,"suggestions":"1792"},{"ruleId":"1742","severity":1,"message":"1774","line":702,"column":5,"nodeType":"1744","endLine":710,"endColumn":6,"suggestions":"1793"},{"ruleId":"1742","severity":1,"message":"1774","line":869,"column":5,"nodeType":"1744","endLine":869,"endColumn":13,"suggestions":"1794"},{"ruleId":"1742","severity":1,"message":"1774","line":896,"column":6,"nodeType":"1744","endLine":896,"endColumn":39,"suggestions":"1795"},{"ruleId":"1778","severity":1,"message":"1779","line":1101,"column":19,"nodeType":"1780","endLine":1117,"endColumn":20,"fix":"1796"},{"ruleId":"1732","severity":1,"message":"1733","line":15,"column":8,"nodeType":"1734","messageId":"1735","endLine":15,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":10,"column":8,"nodeType":"1734","messageId":"1735","endLine":10,"endColumn":13},{"ruleId":"1782","severity":1,"message":"1783","line":14,"column":9,"nodeType":"1780","endLine":14,"endColumn":18},{"ruleId":"1784","severity":1,"message":"1785","line":25,"column":9,"nodeType":"1780","endLine":25,"endColumn":56},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":8,"column":8,"nodeType":"1734","messageId":"1735","endLine":8,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1751","line":48,"column":121,"nodeType":"1734","messageId":"1735","endLine":48,"endColumn":129},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1736","replacedBy":"1797"},{"ruleId":"1738","replacedBy":"1798"},{"ruleId":"1740","replacedBy":"1799"},{"ruleId":"1732","severity":1,"message":"1800","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":18},{"ruleId":"1801","severity":1,"message":"1802","line":35,"column":46,"nodeType":"1734","messageId":"1803","endLine":35,"endColumn":53},{"ruleId":"1801","severity":1,"message":"1804","line":41,"column":59,"nodeType":"1734","messageId":"1803","endLine":41,"endColumn":68},{"ruleId":"1801","severity":1,"message":"1805","line":43,"column":68,"nodeType":"1734","messageId":"1803","endLine":43,"endColumn":72},{"ruleId":"1801","severity":1,"message":"1804","line":45,"column":66,"nodeType":"1734","messageId":"1803","endLine":45,"endColumn":75},{"ruleId":"1801","severity":1,"message":"1806","line":77,"column":32,"nodeType":"1734","messageId":"1803","endLine":77,"endColumn":42},{"ruleId":"1746","severity":1,"message":"1747","line":42,"column":7,"nodeType":"1748","endLine":42,"endColumn":44},{"ruleId":"1746","severity":1,"message":"1747","line":43,"column":7,"nodeType":"1748","endLine":43,"endColumn":35},{"ruleId":"1746","severity":1,"message":"1747","line":44,"column":7,"nodeType":"1748","endLine":44,"endColumn":43},{"ruleId":"1732","severity":1,"message":"1807","line":10,"column":3,"nodeType":"1734","messageId":"1735","endLine":10,"endColumn":15},{"ruleId":"1801","severity":1,"message":"1808","line":20,"column":3,"nodeType":"1734","messageId":"1803","endLine":20,"endColumn":17},{"ruleId":"1732","severity":1,"message":"1809","line":20,"column":3,"nodeType":"1734","messageId":"1735","endLine":20,"endColumn":17},{"ruleId":"1801","severity":1,"message":"1810","line":21,"column":3,"nodeType":"1734","messageId":"1803","endLine":21,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1811","line":21,"column":3,"nodeType":"1734","messageId":"1735","endLine":21,"endColumn":19},{"ruleId":"1732","severity":1,"message":"1812","line":22,"column":3,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":12},{"ruleId":"1732","severity":1,"message":"1800","line":23,"column":3,"nodeType":"1734","messageId":"1735","endLine":23,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1813","line":26,"column":3,"nodeType":"1734","messageId":"1735","endLine":26,"endColumn":14},{"ruleId":"1732","severity":1,"message":"1814","line":27,"column":3,"nodeType":"1734","messageId":"1735","endLine":27,"endColumn":14},{"ruleId":"1815","severity":1,"message":"1816","line":32,"column":20,"nodeType":"1817","messageId":"1818","endLine":32,"endColumn":21,"fix":"1819"},{"ruleId":"1815","severity":1,"message":"1816","line":44,"column":1,"nodeType":"1817","messageId":"1818","endLine":44,"endColumn":3,"fix":"1820"},{"ruleId":"1746","severity":1,"message":"1747","line":50,"column":11,"nodeType":"1748","endLine":50,"endColumn":47},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1750","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":22},{"ruleId":"1736","replacedBy":"1821"},{"ruleId":"1738","replacedBy":"1822"},{"ruleId":"1740","replacedBy":"1823"},{"ruleId":"1732","severity":1,"message":"1733","line":11,"column":8,"nodeType":"1734","messageId":"1735","endLine":11,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1824","line":6,"column":10,"nodeType":"1734","messageId":"1735","endLine":6,"endColumn":24},{"ruleId":"1815","severity":1,"message":"1816","line":25,"column":1,"nodeType":"1817","messageId":"1818","endLine":25,"endColumn":2,"fix":"1825"},{"ruleId":"1746","severity":1,"message":"1747","line":35,"column":9,"nodeType":"1748","endLine":35,"endColumn":80},{"ruleId":"1746","severity":1,"message":"1747","line":37,"column":38,"nodeType":"1748","endLine":37,"endColumn":109},{"ruleId":"1778","severity":1,"message":"1779","line":43,"column":7,"nodeType":"1780","endLine":43,"endColumn":35,"fix":"1826"},{"ruleId":"1746","severity":1,"message":"1747","line":54,"column":7,"nodeType":"1748","endLine":54,"endColumn":32},{"ruleId":"1732","severity":1,"message":"1733","line":22,"column":8,"nodeType":"1734","messageId":"1735","endLine":22,"endColumn":13},{"ruleId":"1736","replacedBy":"1827"},{"ruleId":"1738","replacedBy":"1828"},{"ruleId":"1740","replacedBy":"1829"},{"ruleId":"1732","severity":1,"message":"1830","line":56,"column":8,"nodeType":"1734","messageId":"1735","endLine":56,"endColumn":18},{"ruleId":"1732","severity":1,"message":"1831","line":122,"column":3,"nodeType":"1734","messageId":"1735","endLine":122,"endColumn":11},{"ruleId":"1732","severity":1,"message":"1832","line":147,"column":9,"nodeType":"1734","messageId":"1735","endLine":147,"endColumn":11},{"ruleId":"1742","severity":1,"message":"1833","line":180,"column":9,"nodeType":"1759","endLine":188,"endColumn":4,"suggestions":"1834"},{"ruleId":"1742","severity":1,"message":"1835","line":180,"column":9,"nodeType":"1759","endLine":188,"endColumn":4,"suggestions":"1836"},{"ruleId":"1742","severity":1,"message":"1837","line":190,"column":9,"nodeType":"1759","endLine":192,"endColumn":4,"suggestions":"1838"},{"ruleId":"1742","severity":1,"message":"1839","line":190,"column":9,"nodeType":"1759","endLine":192,"endColumn":4,"suggestions":"1840"},{"ruleId":"1742","severity":1,"message":"1841","line":215,"column":9,"nodeType":"1759","endLine":215,"endColumn":44},{"ruleId":"1742","severity":1,"message":"1768","line":264,"column":6,"nodeType":"1744","endLine":264,"endColumn":72,"suggestions":"1842"},{"ruleId":"1742","severity":1,"message":"1843","line":349,"column":9,"nodeType":"1759","endLine":349,"endColumn":56},{"ruleId":"1742","severity":1,"message":"1844","line":349,"column":9,"nodeType":"1759","endLine":349,"endColumn":56},{"ruleId":"1742","severity":1,"message":"1845","line":409,"column":9,"nodeType":"1759","endLine":416,"endColumn":5},{"ruleId":"1742","severity":1,"message":"1768","line":622,"column":6,"nodeType":"1744","endLine":628,"endColumn":4,"suggestions":"1846"},{"ruleId":"1742","severity":1,"message":"1774","line":685,"column":5,"nodeType":"1744","endLine":693,"endColumn":6,"suggestions":"1847"},{"ruleId":"1742","severity":1,"message":"1774","line":852,"column":5,"nodeType":"1744","endLine":852,"endColumn":13,"suggestions":"1848"},{"ruleId":"1742","severity":1,"message":"1774","line":879,"column":6,"nodeType":"1744","endLine":879,"endColumn":39,"suggestions":"1849"},{"ruleId":"1732","severity":1,"message":"1850","line":955,"column":9,"nodeType":"1734","messageId":"1735","endLine":955,"endColumn":20},{"ruleId":"1778","severity":1,"message":"1779","line":1072,"column":15,"nodeType":"1780","endLine":1088,"endColumn":20,"fix":"1851"},{"ruleId":"1732","severity":1,"message":"1733","line":15,"column":8,"nodeType":"1734","messageId":"1735","endLine":15,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":10,"column":8,"nodeType":"1734","messageId":"1735","endLine":10,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":13},{"ruleId":"1852","severity":1,"message":"1853","line":336,"column":13,"nodeType":"1748","endLine":336,"endColumn":46},{"ruleId":"1801","severity":1,"message":"1854","line":24,"column":22,"nodeType":"1734","messageId":"1803","endLine":24,"endColumn":28},{"ruleId":"1784","severity":1,"message":"1785","line":34,"column":9,"nodeType":"1780","endLine":34,"endColumn":56},{"ruleId":"1782","severity":1,"message":"1783","line":36,"column":11,"nodeType":"1780","endLine":36,"endColumn":42},{"ruleId":"1815","severity":1,"message":"1816","line":51,"column":13,"nodeType":"1817","messageId":"1818","endLine":51,"endColumn":15,"fix":"1855"},{"ruleId":"1815","severity":1,"message":"1816","line":52,"column":17,"nodeType":"1817","messageId":"1818","endLine":52,"endColumn":24,"fix":"1856"},{"ruleId":"1732","severity":1,"message":"1733","line":8,"column":8,"nodeType":"1734","messageId":"1735","endLine":8,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1751","line":48,"column":121,"nodeType":"1734","messageId":"1735","endLine":48,"endColumn":129},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":1,"column":8,"nodeType":"1734","messageId":"1735","endLine":1,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1733","line":7,"column":8,"nodeType":"1734","messageId":"1735","endLine":7,"endColumn":13},{"ruleId":"1736","replacedBy":"1857"},{"ruleId":"1738","replacedBy":"1858"},{"ruleId":"1740","replacedBy":"1859"},{"ruleId":"1732","severity":1,"message":"1733","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":13},{"ruleId":"1732","severity":1,"message":"1860","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":20},{"ruleId":"1732","severity":1,"message":"1749","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1861","line":5,"column":8,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":21},{"ruleId":"1815","severity":1,"message":"1816","line":16,"column":35,"nodeType":"1817","messageId":"1818","endLine":16,"endColumn":38,"fix":"1862"},{"ruleId":"1863","severity":1,"message":"1864","line":24,"column":26,"nodeType":"1865","messageId":"1866","endLine":24,"endColumn":28},{"ruleId":"1732","severity":1,"message":"1867","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1868","line":5,"column":36,"nodeType":"1734","messageId":"1735","endLine":5,"endColumn":44},{"ruleId":"1732","severity":1,"message":"1869","line":2,"column":8,"nodeType":"1734","messageId":"1735","endLine":2,"endColumn":21},{"ruleId":"1732","severity":1,"message":"1870","line":3,"column":8,"nodeType":"1734","messageId":"1735","endLine":3,"endColumn":22},{"ruleId":"1732","severity":1,"message":"1800","line":4,"column":8,"nodeType":"1734","messageId":"1735","endLine":4,"endColumn":18},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-catch-shadow",["1801"],"no-native-reassign",["1871"],"no-negated-in-lhs",["1872"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListDevice'. Either include it or remove the dependency array. If 'getListDevice' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1873"],"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","'mockAudioList' is defined but never used.","'mockDeviceList' is defined but never used.","'itemSize' is defined but never used.",["1801"],["1871"],["1872"],["1801"],["1871"],["1872"],"The 'hideFeedback' function makes the dependencies of useCallback Hook (at line 213) change on every render. To fix this, wrap the definition of 'hideFeedback' in its own useCallback() Hook.","VariableDeclarator",["1874"],"The 'hideFeedback' function makes the dependencies of useCallback Hook (at line 250) change on every render. To fix this, wrap the definition of 'hideFeedback' in its own useCallback() Hook.",["1875"],"The 'hideTitle' function makes the dependencies of useCallback Hook (at line 217) change on every render. To fix this, wrap the definition of 'hideTitle' in its own useCallback() Hook.",["1876"],"The 'hideTitle' function makes the dependencies of useCallback Hook (at line 256) change on every render. To fix this, wrap the definition of 'hideTitle' in its own useCallback() Hook.",["1877"],"The 'autoCloseJob' object construction makes the dependencies of useCallback Hook (at line 424) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'autoCloseJob' in its own useMemo() Hook.","React Hook useCallback has an unnecessary dependency: 'state'. Either exclude it or remove the dependency array.",["1878"],"The 'hideMiniFeedbackJob' object construction makes the dependencies of useCallback Hook (at line 374) change on every render. To fix this, wrap the initialization of 'hideMiniFeedbackJob' in its own useMemo() Hook.","The 'hideMiniFeedbackJob' object construction makes the dependencies of useCallback Hook (at line 415) change on every render. To fix this, wrap the initialization of 'hideMiniFeedbackJob' in its own useMemo() Hook.","The 'renderBottomControl' object construction makes the dependencies of useEffect Hook (at line 470) change on every render. To fix this, wrap the initialization of 'renderBottomControl' in its own useMemo() Hook.",["1879"],"React Hook useCallback has an unnecessary dependency: 'locale'. Either exclude it or remove the dependency array.",["1880"],["1881"],["1882"],"react/self-closing-comp","Empty components are self-closing","JSXOpeningElement",{"range":"1883","text":"1884"},"jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["1885"],["1886"],["1887"],["1888"],["1889"],["1890"],["1891"],["1892"],["1893"],["1894"],{"range":"1895","text":"1884"},["1801"],["1871"],["1872"],"'playerInfo' is defined but never used.","no-shadow","'address' is already declared in the upper scope.","noShadow","'noOfItems' is already declared in the upper scope.","'path' is already declared in the upper scope.","'playerInfo' is already declared in the upper scope.","'getAudioList' is defined but never used.","'getFolderItems' is already declared in the upper scope.","'getFolderItems' is defined but never used.","'getNumberOfItems' is already declared in the upper scope.","'getNumberOfItems' is defined but never used.","'audioList' is defined but never used.","'folderItems' is defined but never used.","'avrcpStatus' is defined but never used.","no-trailing-spaces","Trailing spaces not allowed.","Program","trailingSpace",{"range":"1896","text":"1897"},{"range":"1898","text":"1897"},["1801"],["1871"],["1872"],"'getEncodedPath' is defined but never used.",{"range":"1899","text":"1897"},{"range":"1900","text":"1884"},["1801"],["1871"],["1872"],"'MediaTitle' is defined but never used.","'noSlider' is defined but never used.","'id' is assigned a value but never used.","The 'hideFeedback' function makes the dependencies of useCallback Hook (at line 196) change on every render. To fix this, wrap the definition of 'hideFeedback' in its own useCallback() Hook.",["1901"],"The 'hideFeedback' function makes the dependencies of useCallback Hook (at line 233) change on every render. To fix this, wrap the definition of 'hideFeedback' in its own useCallback() Hook.",["1902"],"The 'hideTitle' function makes the dependencies of useCallback Hook (at line 200) change on every render. To fix this, wrap the definition of 'hideTitle' in its own useCallback() Hook.",["1903"],"The 'hideTitle' function makes the dependencies of useCallback Hook (at line 239) change on every render. To fix this, wrap the definition of 'hideTitle' in its own useCallback() Hook.",["1904"],"The 'autoCloseJob' object construction makes the dependencies of useCallback Hook (at line 407) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'autoCloseJob' in its own useMemo() Hook.",["1905"],"The 'hideMiniFeedbackJob' object construction makes the dependencies of useCallback Hook (at line 357) change on every render. To fix this, wrap the initialization of 'hideMiniFeedbackJob' in its own useMemo() Hook.","The 'hideMiniFeedbackJob' object construction makes the dependencies of useCallback Hook (at line 398) change on every render. To fix this, wrap the initialization of 'hideMiniFeedbackJob' in its own useMemo() Hook.","The 'renderBottomControl' object construction makes the dependencies of useEffect Hook (at line 453) change on every render. To fix this, wrap the initialization of 'renderBottomControl' in its own useMemo() Hook.",["1906"],["1907"],["1908"],["1909"],"'setTitleRef' is assigned a value but never used.",{"range":"1910","text":"1884"},"react/jsx-no-duplicate-props","No duplicate props allowed","'locale' is already declared in the upper scope.",{"range":"1911","text":"1897"},{"range":"1912","text":"1897"},["1801"],["1871"],["1872"],"'avrcpConnect' is defined but never used.","'initialFolder' is defined but never used.",{"range":"1913","text":"1897"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getAVRCPStatus' is defined but never used.","'dispatch' is defined but never used.","'getPlayerInfo' is defined but never used.","'configureStore' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1914","fix":"1915"},{"desc":"1916","fix":"1917"},{"desc":"1916","fix":"1918"},{"desc":"1919","fix":"1920"},{"desc":"1919","fix":"1921"},{"desc":"1922","fix":"1923"},{"desc":"1924","fix":"1925"},{"desc":"1926","fix":"1927"},{"desc":"1928","fix":"1929"},{"desc":"1930","fix":"1931"},[33369,33384]," />",{"desc":"1914","fix":"1932"},{"desc":"1916","fix":"1933"},{"desc":"1916","fix":"1934"},{"desc":"1919","fix":"1935"},{"desc":"1919","fix":"1936"},{"desc":"1922","fix":"1937"},{"desc":"1924","fix":"1938"},{"desc":"1926","fix":"1939"},{"desc":"1928","fix":"1940"},{"desc":"1930","fix":"1941"},[33369,33384],[824,825],"",[1250,1252],[812,813],[1653,1659],{"desc":"1916","fix":"1942"},{"desc":"1916","fix":"1943"},{"desc":"1919","fix":"1944"},{"desc":"1919","fix":"1945"},{"desc":"1922","fix":"1946"},{"desc":"1924","fix":"1947"},{"desc":"1926","fix":"1948"},{"desc":"1928","fix":"1949"},{"desc":"1930","fix":"1950"},[32700,32715],[1567,1569],[1587,1594],[569,572],"Update the dependencies array to be: [getListDevice]",{"range":"1951","text":"1952"},"Wrap the definition of 'hideFeedback' in its own useCallback() Hook.",{"range":"1953","text":"1954"},{"range":"1955","text":"1954"},"Wrap the definition of 'hideTitle' in its own useCallback() Hook.",{"range":"1956","text":"1957"},{"range":"1958","text":"1957"},"Update the dependencies array to be: [disabled, startDelayedFeedbackHide, startDelayedTitleHide]",{"range":"1959","text":"1960"},"Update the dependencies array to be: [stopAutoCloseTimeout, stopDelayedFeedbackHide, stopDelayedMiniFeedbackHide, stopDelayedTitleHide]",{"range":"1961","text":"1962"},"Update the dependencies array to be: [seekDisabled, jumpBy, state.duration, state.currentTime, preventTimeChange, jump]",{"range":"1963","text":"1964"},"Update the dependencies array to be: []",{"range":"1965","text":"1966"},"Update the dependencies array to be: [stopDelayedFeedbackHide]",{"range":"1967","text":"1968"},{"range":"1969","text":"1952"},{"range":"1970","text":"1954"},{"range":"1971","text":"1954"},{"range":"1972","text":"1957"},{"range":"1973","text":"1957"},{"range":"1974","text":"1960"},{"range":"1975","text":"1962"},{"range":"1976","text":"1964"},{"range":"1977","text":"1966"},{"range":"1978","text":"1968"},{"range":"1979","text":"1954"},{"range":"1980","text":"1954"},{"range":"1981","text":"1957"},{"range":"1982","text":"1957"},{"range":"1983","text":"1960"},{"range":"1984","text":"1962"},{"range":"1985","text":"1964"},{"range":"1986","text":"1966"},{"range":"1987","text":"1968"},[768,770],"[getListDevice]",[5537,5764],"useCallback(() => {\r\n    if (state.feedbackVisible && state.feedbackAction !== \"focus\") {\r\n      setSettings((prevState) => ({\r\n        ...prevState,\r\n        feedbackVisible: false,\r\n        feedbackAction: \"idle\",\r\n      }));\r\n    }\r\n  })",[5537,5764],[5789,5875],"useCallback(() => {\r\n    setSettings((prevState) => ({ ...prevState, titleVisible: false }));\r\n  })",[5789,5875],[8095,8161],"[disabled, startDelayedFeedbackHide, startDelayedTitleHide]",[18588,18724],"[stopAutoCloseTimeout, stopDelayedFeedbackHide, stopDelayedMiniFeedbackHide, stopDelayedTitleHide]",[20195,20342],"[seekDisabled, jumpBy, state.duration, state.currentTime, preventTimeChange, jump]",[25054,25062],"[]",[25674,25707],"[stopDelayedFeedbackHide]",[768,770],[5537,5764],[5537,5764],[5789,5875],[5789,5875],[8095,8161],[18588,18724],[20195,20342],[25054,25062],[25674,25707],[5117,5344],[5117,5344],[5369,5455],[5369,5455],[7675,7741],[18168,18304],[19775,19922],[24634,24642],[25254,25287]]